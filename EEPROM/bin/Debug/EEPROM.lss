
bin\Debug\EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000340a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  0000340a  000034be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800078  00800078  000034d6  2**0
                  ALLOC
  3 .fuse         00000002  00820000  00820000  000034d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 00000180  00000000  00000000  000034d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000002fe  00000000  00000000  00003658  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a50  00000000  00000000  00003956  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011ed  00000000  00000000  000063a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001f6a  00000000  00000000  00007593  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00009500  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044c  00000000  00000000  00009790  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a3aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e0       	ldi	r30, 0x0A	; 10
      68:	f4 e3       	ldi	r31, 0x34	; 52
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 37       	cpi	r26, 0x78	; 120
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a8 e7       	ldi	r26, 0x78	; 120
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 37       	cpi	r26, 0x79	; 121
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 fe 09 	call	0x13fc	; 0x13fc <main>
      8a:	0c 94 03 1a 	jmp	0x3406	; 0x3406 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_init>:

/*******************************************************************************
 *                      Functions Definitions                                  *
 *******************************************************************************/
void LCD_init(void)
{
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	LCD_DATA_PORT_DIR = 0xFF; /* Configure the data port as output port */
      9a:	ea e3       	ldi	r30, 0x3A	; 58
      9c:	f0 e0       	ldi	r31, 0x00	; 0
      9e:	8f ef       	ldi	r24, 0xFF	; 255
      a0:	80 83       	st	Z, r24
	LCD_CTRL_PORT_DIR |= (1<<E) | (1<<RS) | (1<<RW); /* Configure the control pins(E,RS,RW) as output pins */
      a2:	a7 e3       	ldi	r26, 0x37	; 55
      a4:	b0 e0       	ldi	r27, 0x00	; 0
      a6:	e7 e3       	ldi	r30, 0x37	; 55
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	8e 60       	ori	r24, 0x0E	; 14
      ae:	8c 93       	st	X, r24

	LCD_sendCommand(SINGLE_LINE_LCD_Four_BIT_MODE); /* use 2-line lcd + 8-bit Data Mode + 5*7 dot display Mode */
      b0:	82 e0       	ldi	r24, 0x02	; 2
      b2:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_sendCommand>
	LCD_sendCommand(CURSOR_OFF); /* cursor off */
      b6:	8c e0       	ldi	r24, 0x0C	; 12
      b8:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_sendCommand>
	LCD_sendCommand(CLEAR_COMMAND); /* clear LCD at the beginning */
      bc:	81 e0       	ldi	r24, 0x01	; 1
      be:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_sendCommand>
}
      c2:	cf 91       	pop	r28
      c4:	df 91       	pop	r29
      c6:	08 95       	ret

000000c8 <LCD_sendCommand>:

void LCD_sendCommand(uint8 command)
{
      c8:	0f 93       	push	r16
      ca:	1f 93       	push	r17
      cc:	df 93       	push	r29
      ce:	cf 93       	push	r28
      d0:	cd b7       	in	r28, 0x3d	; 61
      d2:	de b7       	in	r29, 0x3e	; 62
      d4:	c5 56       	subi	r28, 0x65	; 101
      d6:	d0 40       	sbci	r29, 0x00	; 0
      d8:	0f b6       	in	r0, 0x3f	; 63
      da:	f8 94       	cli
      dc:	de bf       	out	0x3e, r29	; 62
      de:	0f be       	out	0x3f, r0	; 63
      e0:	cd bf       	out	0x3d, r28	; 61
      e2:	fe 01       	movw	r30, r28
      e4:	eb 59       	subi	r30, 0x9B	; 155
      e6:	ff 4f       	sbci	r31, 0xFF	; 255
      e8:	80 83       	st	Z, r24
    unsigned char a,b;
    a = command & 0xf0;  b = command << 4;
      ea:	de 01       	movw	r26, r28
      ec:	ac 59       	subi	r26, 0x9C	; 156
      ee:	bf 4f       	sbci	r27, 0xFF	; 255
      f0:	fe 01       	movw	r30, r28
      f2:	eb 59       	subi	r30, 0x9B	; 155
      f4:	ff 4f       	sbci	r31, 0xFF	; 255
      f6:	80 81       	ld	r24, Z
      f8:	80 7f       	andi	r24, 0xF0	; 240
      fa:	8c 93       	st	X, r24
      fc:	de 01       	movw	r26, r28
      fe:	ad 59       	subi	r26, 0x9D	; 157
     100:	bf 4f       	sbci	r27, 0xFF	; 255
     102:	fe 01       	movw	r30, r28
     104:	eb 59       	subi	r30, 0x9B	; 155
     106:	ff 4f       	sbci	r31, 0xFF	; 255
     108:	80 81       	ld	r24, Z
     10a:	82 95       	swap	r24
     10c:	80 7f       	andi	r24, 0xF0	; 240
     10e:	8c 93       	st	X, r24

	CLEAR_BIT(LCD_CTRL_PORT,RS); /* Instruction Mode RS=0 */
     110:	a8 e3       	ldi	r26, 0x38	; 56
     112:	b0 e0       	ldi	r27, 0x00	; 0
     114:	e8 e3       	ldi	r30, 0x38	; 56
     116:	f0 e0       	ldi	r31, 0x00	; 0
     118:	80 81       	ld	r24, Z
     11a:	8d 7f       	andi	r24, 0xFD	; 253
     11c:	8c 93       	st	X, r24
	CLEAR_BIT(LCD_CTRL_PORT,RW); /* write data to LCD so RW=0 */
     11e:	a8 e3       	ldi	r26, 0x38	; 56
     120:	b0 e0       	ldi	r27, 0x00	; 0
     122:	e8 e3       	ldi	r30, 0x38	; 56
     124:	f0 e0       	ldi	r31, 0x00	; 0
     126:	80 81       	ld	r24, Z
     128:	8b 7f       	andi	r24, 0xFB	; 251
     12a:	8c 93       	st	X, r24
     12c:	fe 01       	movw	r30, r28
     12e:	e1 5a       	subi	r30, 0xA1	; 161
     130:	ff 4f       	sbci	r31, 0xFF	; 255
     132:	80 e0       	ldi	r24, 0x00	; 0
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	a0 e8       	ldi	r26, 0x80	; 128
     138:	bf e3       	ldi	r27, 0x3F	; 63
     13a:	80 83       	st	Z, r24
     13c:	91 83       	std	Z+1, r25	; 0x01
     13e:	a2 83       	std	Z+2, r26	; 0x02
     140:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     142:	8e 01       	movw	r16, r28
     144:	05 5a       	subi	r16, 0xA5	; 165
     146:	1f 4f       	sbci	r17, 0xFF	; 255
     148:	fe 01       	movw	r30, r28
     14a:	e1 5a       	subi	r30, 0xA1	; 161
     14c:	ff 4f       	sbci	r31, 0xFF	; 255
     14e:	60 81       	ld	r22, Z
     150:	71 81       	ldd	r23, Z+1	; 0x01
     152:	82 81       	ldd	r24, Z+2	; 0x02
     154:	93 81       	ldd	r25, Z+3	; 0x03
     156:	20 e0       	ldi	r18, 0x00	; 0
     158:	30 e0       	ldi	r19, 0x00	; 0
     15a:	4a e7       	ldi	r20, 0x7A	; 122
     15c:	55 e4       	ldi	r21, 0x45	; 69
     15e:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     162:	dc 01       	movw	r26, r24
     164:	cb 01       	movw	r24, r22
     166:	f8 01       	movw	r30, r16
     168:	80 83       	st	Z, r24
     16a:	91 83       	std	Z+1, r25	; 0x01
     16c:	a2 83       	std	Z+2, r26	; 0x02
     16e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     170:	fe 01       	movw	r30, r28
     172:	e5 5a       	subi	r30, 0xA5	; 165
     174:	ff 4f       	sbci	r31, 0xFF	; 255
     176:	60 81       	ld	r22, Z
     178:	71 81       	ldd	r23, Z+1	; 0x01
     17a:	82 81       	ldd	r24, Z+2	; 0x02
     17c:	93 81       	ldd	r25, Z+3	; 0x03
     17e:	20 e0       	ldi	r18, 0x00	; 0
     180:	30 e0       	ldi	r19, 0x00	; 0
     182:	40 e8       	ldi	r20, 0x80	; 128
     184:	5f e3       	ldi	r21, 0x3F	; 63
     186:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     18a:	88 23       	and	r24, r24
     18c:	44 f4       	brge	.+16     	; 0x19e <LCD_sendCommand+0xd6>
		__ticks = 1;
     18e:	fe 01       	movw	r30, r28
     190:	e7 5a       	subi	r30, 0xA7	; 167
     192:	ff 4f       	sbci	r31, 0xFF	; 255
     194:	81 e0       	ldi	r24, 0x01	; 1
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	91 83       	std	Z+1, r25	; 0x01
     19a:	80 83       	st	Z, r24
     19c:	64 c0       	rjmp	.+200    	; 0x266 <LCD_sendCommand+0x19e>
	else if (__tmp > 65535)
     19e:	fe 01       	movw	r30, r28
     1a0:	e5 5a       	subi	r30, 0xA5	; 165
     1a2:	ff 4f       	sbci	r31, 0xFF	; 255
     1a4:	60 81       	ld	r22, Z
     1a6:	71 81       	ldd	r23, Z+1	; 0x01
     1a8:	82 81       	ldd	r24, Z+2	; 0x02
     1aa:	93 81       	ldd	r25, Z+3	; 0x03
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	3f ef       	ldi	r19, 0xFF	; 255
     1b0:	4f e7       	ldi	r20, 0x7F	; 127
     1b2:	57 e4       	ldi	r21, 0x47	; 71
     1b4:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     1b8:	18 16       	cp	r1, r24
     1ba:	0c f0       	brlt	.+2      	; 0x1be <LCD_sendCommand+0xf6>
     1bc:	43 c0       	rjmp	.+134    	; 0x244 <LCD_sendCommand+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1be:	fe 01       	movw	r30, r28
     1c0:	e1 5a       	subi	r30, 0xA1	; 161
     1c2:	ff 4f       	sbci	r31, 0xFF	; 255
     1c4:	60 81       	ld	r22, Z
     1c6:	71 81       	ldd	r23, Z+1	; 0x01
     1c8:	82 81       	ldd	r24, Z+2	; 0x02
     1ca:	93 81       	ldd	r25, Z+3	; 0x03
     1cc:	20 e0       	ldi	r18, 0x00	; 0
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	40 e2       	ldi	r20, 0x20	; 32
     1d2:	51 e4       	ldi	r21, 0x41	; 65
     1d4:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     1d8:	dc 01       	movw	r26, r24
     1da:	cb 01       	movw	r24, r22
     1dc:	8e 01       	movw	r16, r28
     1de:	07 5a       	subi	r16, 0xA7	; 167
     1e0:	1f 4f       	sbci	r17, 0xFF	; 255
     1e2:	bc 01       	movw	r22, r24
     1e4:	cd 01       	movw	r24, r26
     1e6:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     1ea:	dc 01       	movw	r26, r24
     1ec:	cb 01       	movw	r24, r22
     1ee:	f8 01       	movw	r30, r16
     1f0:	91 83       	std	Z+1, r25	; 0x01
     1f2:	80 83       	st	Z, r24
     1f4:	1f c0       	rjmp	.+62     	; 0x234 <LCD_sendCommand+0x16c>
     1f6:	fe 01       	movw	r30, r28
     1f8:	e9 5a       	subi	r30, 0xA9	; 169
     1fa:	ff 4f       	sbci	r31, 0xFF	; 255
     1fc:	80 e9       	ldi	r24, 0x90	; 144
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	91 83       	std	Z+1, r25	; 0x01
     202:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     204:	fe 01       	movw	r30, r28
     206:	e9 5a       	subi	r30, 0xA9	; 169
     208:	ff 4f       	sbci	r31, 0xFF	; 255
     20a:	80 81       	ld	r24, Z
     20c:	91 81       	ldd	r25, Z+1	; 0x01
     20e:	01 97       	sbiw	r24, 0x01	; 1
     210:	f1 f7       	brne	.-4      	; 0x20e <LCD_sendCommand+0x146>
     212:	fe 01       	movw	r30, r28
     214:	e9 5a       	subi	r30, 0xA9	; 169
     216:	ff 4f       	sbci	r31, 0xFF	; 255
     218:	91 83       	std	Z+1, r25	; 0x01
     21a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     21c:	de 01       	movw	r26, r28
     21e:	a7 5a       	subi	r26, 0xA7	; 167
     220:	bf 4f       	sbci	r27, 0xFF	; 255
     222:	fe 01       	movw	r30, r28
     224:	e7 5a       	subi	r30, 0xA7	; 167
     226:	ff 4f       	sbci	r31, 0xFF	; 255
     228:	80 81       	ld	r24, Z
     22a:	91 81       	ldd	r25, Z+1	; 0x01
     22c:	01 97       	sbiw	r24, 0x01	; 1
     22e:	11 96       	adiw	r26, 0x01	; 1
     230:	9c 93       	st	X, r25
     232:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     234:	fe 01       	movw	r30, r28
     236:	e7 5a       	subi	r30, 0xA7	; 167
     238:	ff 4f       	sbci	r31, 0xFF	; 255
     23a:	80 81       	ld	r24, Z
     23c:	91 81       	ldd	r25, Z+1	; 0x01
     23e:	00 97       	sbiw	r24, 0x00	; 0
     240:	d1 f6       	brne	.-76     	; 0x1f6 <LCD_sendCommand+0x12e>
     242:	27 c0       	rjmp	.+78     	; 0x292 <LCD_sendCommand+0x1ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     244:	8e 01       	movw	r16, r28
     246:	07 5a       	subi	r16, 0xA7	; 167
     248:	1f 4f       	sbci	r17, 0xFF	; 255
     24a:	fe 01       	movw	r30, r28
     24c:	e5 5a       	subi	r30, 0xA5	; 165
     24e:	ff 4f       	sbci	r31, 0xFF	; 255
     250:	60 81       	ld	r22, Z
     252:	71 81       	ldd	r23, Z+1	; 0x01
     254:	82 81       	ldd	r24, Z+2	; 0x02
     256:	93 81       	ldd	r25, Z+3	; 0x03
     258:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     25c:	dc 01       	movw	r26, r24
     25e:	cb 01       	movw	r24, r22
     260:	f8 01       	movw	r30, r16
     262:	91 83       	std	Z+1, r25	; 0x01
     264:	80 83       	st	Z, r24
     266:	de 01       	movw	r26, r28
     268:	ab 5a       	subi	r26, 0xAB	; 171
     26a:	bf 4f       	sbci	r27, 0xFF	; 255
     26c:	fe 01       	movw	r30, r28
     26e:	e7 5a       	subi	r30, 0xA7	; 167
     270:	ff 4f       	sbci	r31, 0xFF	; 255
     272:	80 81       	ld	r24, Z
     274:	91 81       	ldd	r25, Z+1	; 0x01
     276:	8d 93       	st	X+, r24
     278:	9c 93       	st	X, r25
     27a:	fe 01       	movw	r30, r28
     27c:	eb 5a       	subi	r30, 0xAB	; 171
     27e:	ff 4f       	sbci	r31, 0xFF	; 255
     280:	80 81       	ld	r24, Z
     282:	91 81       	ldd	r25, Z+1	; 0x01
     284:	01 97       	sbiw	r24, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <LCD_sendCommand+0x1bc>
     288:	fe 01       	movw	r30, r28
     28a:	eb 5a       	subi	r30, 0xAB	; 171
     28c:	ff 4f       	sbci	r31, 0xFF	; 255
     28e:	91 83       	std	Z+1, r25	; 0x01
     290:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	SET_BIT(LCD_CTRL_PORT,E); /* Enable LCD E=1 */
     292:	a8 e3       	ldi	r26, 0x38	; 56
     294:	b0 e0       	ldi	r27, 0x00	; 0
     296:	e8 e3       	ldi	r30, 0x38	; 56
     298:	f0 e0       	ldi	r31, 0x00	; 0
     29a:	80 81       	ld	r24, Z
     29c:	88 60       	ori	r24, 0x08	; 8
     29e:	8c 93       	st	X, r24
     2a0:	fe 01       	movw	r30, r28
     2a2:	ef 5a       	subi	r30, 0xAF	; 175
     2a4:	ff 4f       	sbci	r31, 0xFF	; 255
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	a0 e8       	ldi	r26, 0x80	; 128
     2ac:	bf e3       	ldi	r27, 0x3F	; 63
     2ae:	80 83       	st	Z, r24
     2b0:	91 83       	std	Z+1, r25	; 0x01
     2b2:	a2 83       	std	Z+2, r26	; 0x02
     2b4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2b6:	8e 01       	movw	r16, r28
     2b8:	03 5b       	subi	r16, 0xB3	; 179
     2ba:	1f 4f       	sbci	r17, 0xFF	; 255
     2bc:	fe 01       	movw	r30, r28
     2be:	ef 5a       	subi	r30, 0xAF	; 175
     2c0:	ff 4f       	sbci	r31, 0xFF	; 255
     2c2:	60 81       	ld	r22, Z
     2c4:	71 81       	ldd	r23, Z+1	; 0x01
     2c6:	82 81       	ldd	r24, Z+2	; 0x02
     2c8:	93 81       	ldd	r25, Z+3	; 0x03
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	4a e7       	ldi	r20, 0x7A	; 122
     2d0:	55 e4       	ldi	r21, 0x45	; 69
     2d2:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     2d6:	dc 01       	movw	r26, r24
     2d8:	cb 01       	movw	r24, r22
     2da:	f8 01       	movw	r30, r16
     2dc:	80 83       	st	Z, r24
     2de:	91 83       	std	Z+1, r25	; 0x01
     2e0:	a2 83       	std	Z+2, r26	; 0x02
     2e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     2e4:	fe 01       	movw	r30, r28
     2e6:	e3 5b       	subi	r30, 0xB3	; 179
     2e8:	ff 4f       	sbci	r31, 0xFF	; 255
     2ea:	60 81       	ld	r22, Z
     2ec:	71 81       	ldd	r23, Z+1	; 0x01
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	40 e8       	ldi	r20, 0x80	; 128
     2f8:	5f e3       	ldi	r21, 0x3F	; 63
     2fa:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     2fe:	88 23       	and	r24, r24
     300:	44 f4       	brge	.+16     	; 0x312 <LCD_sendCommand+0x24a>
		__ticks = 1;
     302:	fe 01       	movw	r30, r28
     304:	e5 5b       	subi	r30, 0xB5	; 181
     306:	ff 4f       	sbci	r31, 0xFF	; 255
     308:	81 e0       	ldi	r24, 0x01	; 1
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	91 83       	std	Z+1, r25	; 0x01
     30e:	80 83       	st	Z, r24
     310:	64 c0       	rjmp	.+200    	; 0x3da <LCD_sendCommand+0x312>
	else if (__tmp > 65535)
     312:	fe 01       	movw	r30, r28
     314:	e3 5b       	subi	r30, 0xB3	; 179
     316:	ff 4f       	sbci	r31, 0xFF	; 255
     318:	60 81       	ld	r22, Z
     31a:	71 81       	ldd	r23, Z+1	; 0x01
     31c:	82 81       	ldd	r24, Z+2	; 0x02
     31e:	93 81       	ldd	r25, Z+3	; 0x03
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	3f ef       	ldi	r19, 0xFF	; 255
     324:	4f e7       	ldi	r20, 0x7F	; 127
     326:	57 e4       	ldi	r21, 0x47	; 71
     328:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     32c:	18 16       	cp	r1, r24
     32e:	0c f0       	brlt	.+2      	; 0x332 <LCD_sendCommand+0x26a>
     330:	43 c0       	rjmp	.+134    	; 0x3b8 <LCD_sendCommand+0x2f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     332:	fe 01       	movw	r30, r28
     334:	ef 5a       	subi	r30, 0xAF	; 175
     336:	ff 4f       	sbci	r31, 0xFF	; 255
     338:	60 81       	ld	r22, Z
     33a:	71 81       	ldd	r23, Z+1	; 0x01
     33c:	82 81       	ldd	r24, Z+2	; 0x02
     33e:	93 81       	ldd	r25, Z+3	; 0x03
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	40 e2       	ldi	r20, 0x20	; 32
     346:	51 e4       	ldi	r21, 0x41	; 65
     348:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     34c:	dc 01       	movw	r26, r24
     34e:	cb 01       	movw	r24, r22
     350:	8e 01       	movw	r16, r28
     352:	05 5b       	subi	r16, 0xB5	; 181
     354:	1f 4f       	sbci	r17, 0xFF	; 255
     356:	bc 01       	movw	r22, r24
     358:	cd 01       	movw	r24, r26
     35a:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     35e:	dc 01       	movw	r26, r24
     360:	cb 01       	movw	r24, r22
     362:	f8 01       	movw	r30, r16
     364:	91 83       	std	Z+1, r25	; 0x01
     366:	80 83       	st	Z, r24
     368:	1f c0       	rjmp	.+62     	; 0x3a8 <LCD_sendCommand+0x2e0>
     36a:	fe 01       	movw	r30, r28
     36c:	e7 5b       	subi	r30, 0xB7	; 183
     36e:	ff 4f       	sbci	r31, 0xFF	; 255
     370:	80 e9       	ldi	r24, 0x90	; 144
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	91 83       	std	Z+1, r25	; 0x01
     376:	80 83       	st	Z, r24
     378:	fe 01       	movw	r30, r28
     37a:	e7 5b       	subi	r30, 0xB7	; 183
     37c:	ff 4f       	sbci	r31, 0xFF	; 255
     37e:	80 81       	ld	r24, Z
     380:	91 81       	ldd	r25, Z+1	; 0x01
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	f1 f7       	brne	.-4      	; 0x382 <LCD_sendCommand+0x2ba>
     386:	fe 01       	movw	r30, r28
     388:	e7 5b       	subi	r30, 0xB7	; 183
     38a:	ff 4f       	sbci	r31, 0xFF	; 255
     38c:	91 83       	std	Z+1, r25	; 0x01
     38e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     390:	de 01       	movw	r26, r28
     392:	a5 5b       	subi	r26, 0xB5	; 181
     394:	bf 4f       	sbci	r27, 0xFF	; 255
     396:	fe 01       	movw	r30, r28
     398:	e5 5b       	subi	r30, 0xB5	; 181
     39a:	ff 4f       	sbci	r31, 0xFF	; 255
     39c:	80 81       	ld	r24, Z
     39e:	91 81       	ldd	r25, Z+1	; 0x01
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	11 96       	adiw	r26, 0x01	; 1
     3a4:	9c 93       	st	X, r25
     3a6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3a8:	fe 01       	movw	r30, r28
     3aa:	e5 5b       	subi	r30, 0xB5	; 181
     3ac:	ff 4f       	sbci	r31, 0xFF	; 255
     3ae:	80 81       	ld	r24, Z
     3b0:	91 81       	ldd	r25, Z+1	; 0x01
     3b2:	00 97       	sbiw	r24, 0x00	; 0
     3b4:	d1 f6       	brne	.-76     	; 0x36a <LCD_sendCommand+0x2a2>
     3b6:	27 c0       	rjmp	.+78     	; 0x406 <LCD_sendCommand+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3b8:	8e 01       	movw	r16, r28
     3ba:	05 5b       	subi	r16, 0xB5	; 181
     3bc:	1f 4f       	sbci	r17, 0xFF	; 255
     3be:	fe 01       	movw	r30, r28
     3c0:	e3 5b       	subi	r30, 0xB3	; 179
     3c2:	ff 4f       	sbci	r31, 0xFF	; 255
     3c4:	60 81       	ld	r22, Z
     3c6:	71 81       	ldd	r23, Z+1	; 0x01
     3c8:	82 81       	ldd	r24, Z+2	; 0x02
     3ca:	93 81       	ldd	r25, Z+3	; 0x03
     3cc:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     3d0:	dc 01       	movw	r26, r24
     3d2:	cb 01       	movw	r24, r22
     3d4:	f8 01       	movw	r30, r16
     3d6:	91 83       	std	Z+1, r25	; 0x01
     3d8:	80 83       	st	Z, r24
     3da:	de 01       	movw	r26, r28
     3dc:	a9 5b       	subi	r26, 0xB9	; 185
     3de:	bf 4f       	sbci	r27, 0xFF	; 255
     3e0:	fe 01       	movw	r30, r28
     3e2:	e5 5b       	subi	r30, 0xB5	; 181
     3e4:	ff 4f       	sbci	r31, 0xFF	; 255
     3e6:	80 81       	ld	r24, Z
     3e8:	91 81       	ldd	r25, Z+1	; 0x01
     3ea:	8d 93       	st	X+, r24
     3ec:	9c 93       	st	X, r25
     3ee:	fe 01       	movw	r30, r28
     3f0:	e9 5b       	subi	r30, 0xB9	; 185
     3f2:	ff 4f       	sbci	r31, 0xFF	; 255
     3f4:	80 81       	ld	r24, Z
     3f6:	91 81       	ldd	r25, Z+1	; 0x01
     3f8:	01 97       	sbiw	r24, 0x01	; 1
     3fa:	f1 f7       	brne	.-4      	; 0x3f8 <LCD_sendCommand+0x330>
     3fc:	fe 01       	movw	r30, r28
     3fe:	e9 5b       	subi	r30, 0xB9	; 185
     400:	ff 4f       	sbci	r31, 0xFF	; 255
     402:	91 83       	std	Z+1, r25	; 0x01
     404:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	LCD_DATA_PORT = a; /* out the required command to the data bus D0 --> D7 */
     406:	ab e3       	ldi	r26, 0x3B	; 59
     408:	b0 e0       	ldi	r27, 0x00	; 0
     40a:	fe 01       	movw	r30, r28
     40c:	ec 59       	subi	r30, 0x9C	; 156
     40e:	ff 4f       	sbci	r31, 0xFF	; 255
     410:	80 81       	ld	r24, Z
     412:	8c 93       	st	X, r24
     414:	fe 01       	movw	r30, r28
     416:	ed 5b       	subi	r30, 0xBD	; 189
     418:	ff 4f       	sbci	r31, 0xFF	; 255
     41a:	80 e0       	ldi	r24, 0x00	; 0
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	a0 e8       	ldi	r26, 0x80	; 128
     420:	bf e3       	ldi	r27, 0x3F	; 63
     422:	80 83       	st	Z, r24
     424:	91 83       	std	Z+1, r25	; 0x01
     426:	a2 83       	std	Z+2, r26	; 0x02
     428:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     42a:	8e 01       	movw	r16, r28
     42c:	01 5c       	subi	r16, 0xC1	; 193
     42e:	1f 4f       	sbci	r17, 0xFF	; 255
     430:	fe 01       	movw	r30, r28
     432:	ed 5b       	subi	r30, 0xBD	; 189
     434:	ff 4f       	sbci	r31, 0xFF	; 255
     436:	60 81       	ld	r22, Z
     438:	71 81       	ldd	r23, Z+1	; 0x01
     43a:	82 81       	ldd	r24, Z+2	; 0x02
     43c:	93 81       	ldd	r25, Z+3	; 0x03
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	4a e7       	ldi	r20, 0x7A	; 122
     444:	55 e4       	ldi	r21, 0x45	; 69
     446:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     44a:	dc 01       	movw	r26, r24
     44c:	cb 01       	movw	r24, r22
     44e:	f8 01       	movw	r30, r16
     450:	80 83       	st	Z, r24
     452:	91 83       	std	Z+1, r25	; 0x01
     454:	a2 83       	std	Z+2, r26	; 0x02
     456:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     458:	fe 01       	movw	r30, r28
     45a:	ff 96       	adiw	r30, 0x3f	; 63
     45c:	60 81       	ld	r22, Z
     45e:	71 81       	ldd	r23, Z+1	; 0x01
     460:	82 81       	ldd	r24, Z+2	; 0x02
     462:	93 81       	ldd	r25, Z+3	; 0x03
     464:	20 e0       	ldi	r18, 0x00	; 0
     466:	30 e0       	ldi	r19, 0x00	; 0
     468:	40 e8       	ldi	r20, 0x80	; 128
     46a:	5f e3       	ldi	r21, 0x3F	; 63
     46c:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     470:	88 23       	and	r24, r24
     472:	2c f4       	brge	.+10     	; 0x47e <LCD_sendCommand+0x3b6>
		__ticks = 1;
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	9e af       	std	Y+62, r25	; 0x3e
     47a:	8d af       	std	Y+61, r24	; 0x3d
     47c:	46 c0       	rjmp	.+140    	; 0x50a <LCD_sendCommand+0x442>
	else if (__tmp > 65535)
     47e:	fe 01       	movw	r30, r28
     480:	ff 96       	adiw	r30, 0x3f	; 63
     482:	60 81       	ld	r22, Z
     484:	71 81       	ldd	r23, Z+1	; 0x01
     486:	82 81       	ldd	r24, Z+2	; 0x02
     488:	93 81       	ldd	r25, Z+3	; 0x03
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	3f ef       	ldi	r19, 0xFF	; 255
     48e:	4f e7       	ldi	r20, 0x7F	; 127
     490:	57 e4       	ldi	r21, 0x47	; 71
     492:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     496:	18 16       	cp	r1, r24
     498:	64 f5       	brge	.+88     	; 0x4f2 <LCD_sendCommand+0x42a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     49a:	fe 01       	movw	r30, r28
     49c:	ed 5b       	subi	r30, 0xBD	; 189
     49e:	ff 4f       	sbci	r31, 0xFF	; 255
     4a0:	60 81       	ld	r22, Z
     4a2:	71 81       	ldd	r23, Z+1	; 0x01
     4a4:	82 81       	ldd	r24, Z+2	; 0x02
     4a6:	93 81       	ldd	r25, Z+3	; 0x03
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e2       	ldi	r20, 0x20	; 32
     4ae:	51 e4       	ldi	r21, 0x41	; 65
     4b0:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     4b4:	dc 01       	movw	r26, r24
     4b6:	cb 01       	movw	r24, r22
     4b8:	bc 01       	movw	r22, r24
     4ba:	cd 01       	movw	r24, r26
     4bc:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     4c0:	dc 01       	movw	r26, r24
     4c2:	cb 01       	movw	r24, r22
     4c4:	9e af       	std	Y+62, r25	; 0x3e
     4c6:	8d af       	std	Y+61, r24	; 0x3d
     4c8:	0f c0       	rjmp	.+30     	; 0x4e8 <LCD_sendCommand+0x420>
     4ca:	80 e9       	ldi	r24, 0x90	; 144
     4cc:	91 e0       	ldi	r25, 0x01	; 1
     4ce:	9c af       	std	Y+60, r25	; 0x3c
     4d0:	8b af       	std	Y+59, r24	; 0x3b
     4d2:	8b ad       	ldd	r24, Y+59	; 0x3b
     4d4:	9c ad       	ldd	r25, Y+60	; 0x3c
     4d6:	01 97       	sbiw	r24, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <LCD_sendCommand+0x40e>
     4da:	9c af       	std	Y+60, r25	; 0x3c
     4dc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4de:	8d ad       	ldd	r24, Y+61	; 0x3d
     4e0:	9e ad       	ldd	r25, Y+62	; 0x3e
     4e2:	01 97       	sbiw	r24, 0x01	; 1
     4e4:	9e af       	std	Y+62, r25	; 0x3e
     4e6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4e8:	8d ad       	ldd	r24, Y+61	; 0x3d
     4ea:	9e ad       	ldd	r25, Y+62	; 0x3e
     4ec:	00 97       	sbiw	r24, 0x00	; 0
     4ee:	69 f7       	brne	.-38     	; 0x4ca <LCD_sendCommand+0x402>
     4f0:	16 c0       	rjmp	.+44     	; 0x51e <LCD_sendCommand+0x456>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4f2:	fe 01       	movw	r30, r28
     4f4:	ff 96       	adiw	r30, 0x3f	; 63
     4f6:	60 81       	ld	r22, Z
     4f8:	71 81       	ldd	r23, Z+1	; 0x01
     4fa:	82 81       	ldd	r24, Z+2	; 0x02
     4fc:	93 81       	ldd	r25, Z+3	; 0x03
     4fe:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     502:	dc 01       	movw	r26, r24
     504:	cb 01       	movw	r24, r22
     506:	9e af       	std	Y+62, r25	; 0x3e
     508:	8d af       	std	Y+61, r24	; 0x3d
     50a:	8d ad       	ldd	r24, Y+61	; 0x3d
     50c:	9e ad       	ldd	r25, Y+62	; 0x3e
     50e:	9a af       	std	Y+58, r25	; 0x3a
     510:	89 af       	std	Y+57, r24	; 0x39
     512:	89 ad       	ldd	r24, Y+57	; 0x39
     514:	9a ad       	ldd	r25, Y+58	; 0x3a
     516:	01 97       	sbiw	r24, 0x01	; 1
     518:	f1 f7       	brne	.-4      	; 0x516 <LCD_sendCommand+0x44e>
     51a:	9a af       	std	Y+58, r25	; 0x3a
     51c:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* disable LCD E=0 */
     51e:	a8 e3       	ldi	r26, 0x38	; 56
     520:	b0 e0       	ldi	r27, 0x00	; 0
     522:	e8 e3       	ldi	r30, 0x38	; 56
     524:	f0 e0       	ldi	r31, 0x00	; 0
     526:	80 81       	ld	r24, Z
     528:	87 7f       	andi	r24, 0xF7	; 247
     52a:	8c 93       	st	X, r24
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	a0 e8       	ldi	r26, 0x80	; 128
     532:	bf e3       	ldi	r27, 0x3F	; 63
     534:	8d ab       	std	Y+53, r24	; 0x35
     536:	9e ab       	std	Y+54, r25	; 0x36
     538:	af ab       	std	Y+55, r26	; 0x37
     53a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     53c:	6d a9       	ldd	r22, Y+53	; 0x35
     53e:	7e a9       	ldd	r23, Y+54	; 0x36
     540:	8f a9       	ldd	r24, Y+55	; 0x37
     542:	98 ad       	ldd	r25, Y+56	; 0x38
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	4a e7       	ldi	r20, 0x7A	; 122
     54a:	55 e4       	ldi	r21, 0x45	; 69
     54c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     550:	dc 01       	movw	r26, r24
     552:	cb 01       	movw	r24, r22
     554:	89 ab       	std	Y+49, r24	; 0x31
     556:	9a ab       	std	Y+50, r25	; 0x32
     558:	ab ab       	std	Y+51, r26	; 0x33
     55a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     55c:	69 a9       	ldd	r22, Y+49	; 0x31
     55e:	7a a9       	ldd	r23, Y+50	; 0x32
     560:	8b a9       	ldd	r24, Y+51	; 0x33
     562:	9c a9       	ldd	r25, Y+52	; 0x34
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	40 e8       	ldi	r20, 0x80	; 128
     56a:	5f e3       	ldi	r21, 0x3F	; 63
     56c:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     570:	88 23       	and	r24, r24
     572:	2c f4       	brge	.+10     	; 0x57e <LCD_sendCommand+0x4b6>
		__ticks = 1;
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	98 ab       	std	Y+48, r25	; 0x30
     57a:	8f a7       	std	Y+47, r24	; 0x2f
     57c:	3f c0       	rjmp	.+126    	; 0x5fc <LCD_sendCommand+0x534>
	else if (__tmp > 65535)
     57e:	69 a9       	ldd	r22, Y+49	; 0x31
     580:	7a a9       	ldd	r23, Y+50	; 0x32
     582:	8b a9       	ldd	r24, Y+51	; 0x33
     584:	9c a9       	ldd	r25, Y+52	; 0x34
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	3f ef       	ldi	r19, 0xFF	; 255
     58a:	4f e7       	ldi	r20, 0x7F	; 127
     58c:	57 e4       	ldi	r21, 0x47	; 71
     58e:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     592:	18 16       	cp	r1, r24
     594:	4c f5       	brge	.+82     	; 0x5e8 <LCD_sendCommand+0x520>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     596:	6d a9       	ldd	r22, Y+53	; 0x35
     598:	7e a9       	ldd	r23, Y+54	; 0x36
     59a:	8f a9       	ldd	r24, Y+55	; 0x37
     59c:	98 ad       	ldd	r25, Y+56	; 0x38
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	40 e2       	ldi	r20, 0x20	; 32
     5a4:	51 e4       	ldi	r21, 0x41	; 65
     5a6:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     5aa:	dc 01       	movw	r26, r24
     5ac:	cb 01       	movw	r24, r22
     5ae:	bc 01       	movw	r22, r24
     5b0:	cd 01       	movw	r24, r26
     5b2:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     5b6:	dc 01       	movw	r26, r24
     5b8:	cb 01       	movw	r24, r22
     5ba:	98 ab       	std	Y+48, r25	; 0x30
     5bc:	8f a7       	std	Y+47, r24	; 0x2f
     5be:	0f c0       	rjmp	.+30     	; 0x5de <LCD_sendCommand+0x516>
     5c0:	80 e9       	ldi	r24, 0x90	; 144
     5c2:	91 e0       	ldi	r25, 0x01	; 1
     5c4:	9e a7       	std	Y+46, r25	; 0x2e
     5c6:	8d a7       	std	Y+45, r24	; 0x2d
     5c8:	8d a5       	ldd	r24, Y+45	; 0x2d
     5ca:	9e a5       	ldd	r25, Y+46	; 0x2e
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <LCD_sendCommand+0x504>
     5d0:	9e a7       	std	Y+46, r25	; 0x2e
     5d2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     5d4:	8f a5       	ldd	r24, Y+47	; 0x2f
     5d6:	98 a9       	ldd	r25, Y+48	; 0x30
     5d8:	01 97       	sbiw	r24, 0x01	; 1
     5da:	98 ab       	std	Y+48, r25	; 0x30
     5dc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     5de:	8f a5       	ldd	r24, Y+47	; 0x2f
     5e0:	98 a9       	ldd	r25, Y+48	; 0x30
     5e2:	00 97       	sbiw	r24, 0x00	; 0
     5e4:	69 f7       	brne	.-38     	; 0x5c0 <LCD_sendCommand+0x4f8>
     5e6:	14 c0       	rjmp	.+40     	; 0x610 <LCD_sendCommand+0x548>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5e8:	69 a9       	ldd	r22, Y+49	; 0x31
     5ea:	7a a9       	ldd	r23, Y+50	; 0x32
     5ec:	8b a9       	ldd	r24, Y+51	; 0x33
     5ee:	9c a9       	ldd	r25, Y+52	; 0x34
     5f0:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     5f4:	dc 01       	movw	r26, r24
     5f6:	cb 01       	movw	r24, r22
     5f8:	98 ab       	std	Y+48, r25	; 0x30
     5fa:	8f a7       	std	Y+47, r24	; 0x2f
     5fc:	8f a5       	ldd	r24, Y+47	; 0x2f
     5fe:	98 a9       	ldd	r25, Y+48	; 0x30
     600:	9c a7       	std	Y+44, r25	; 0x2c
     602:	8b a7       	std	Y+43, r24	; 0x2b
     604:	8b a5       	ldd	r24, Y+43	; 0x2b
     606:	9c a5       	ldd	r25, Y+44	; 0x2c
     608:	01 97       	sbiw	r24, 0x01	; 1
     60a:	f1 f7       	brne	.-4      	; 0x608 <LCD_sendCommand+0x540>
     60c:	9c a7       	std	Y+44, r25	; 0x2c
     60e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */


    SET_BIT(LCD_CTRL_PORT,E); /* Enable LCD E=1 */
     610:	a8 e3       	ldi	r26, 0x38	; 56
     612:	b0 e0       	ldi	r27, 0x00	; 0
     614:	e8 e3       	ldi	r30, 0x38	; 56
     616:	f0 e0       	ldi	r31, 0x00	; 0
     618:	80 81       	ld	r24, Z
     61a:	88 60       	ori	r24, 0x08	; 8
     61c:	8c 93       	st	X, r24
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	a0 e8       	ldi	r26, 0x80	; 128
     624:	bf e3       	ldi	r27, 0x3F	; 63
     626:	8f a3       	std	Y+39, r24	; 0x27
     628:	98 a7       	std	Y+40, r25	; 0x28
     62a:	a9 a7       	std	Y+41, r26	; 0x29
     62c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     62e:	6f a1       	ldd	r22, Y+39	; 0x27
     630:	78 a5       	ldd	r23, Y+40	; 0x28
     632:	89 a5       	ldd	r24, Y+41	; 0x29
     634:	9a a5       	ldd	r25, Y+42	; 0x2a
     636:	20 e0       	ldi	r18, 0x00	; 0
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	4a e7       	ldi	r20, 0x7A	; 122
     63c:	55 e4       	ldi	r21, 0x45	; 69
     63e:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     642:	dc 01       	movw	r26, r24
     644:	cb 01       	movw	r24, r22
     646:	8b a3       	std	Y+35, r24	; 0x23
     648:	9c a3       	std	Y+36, r25	; 0x24
     64a:	ad a3       	std	Y+37, r26	; 0x25
     64c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     64e:	6b a1       	ldd	r22, Y+35	; 0x23
     650:	7c a1       	ldd	r23, Y+36	; 0x24
     652:	8d a1       	ldd	r24, Y+37	; 0x25
     654:	9e a1       	ldd	r25, Y+38	; 0x26
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	40 e8       	ldi	r20, 0x80	; 128
     65c:	5f e3       	ldi	r21, 0x3F	; 63
     65e:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     662:	88 23       	and	r24, r24
     664:	2c f4       	brge	.+10     	; 0x670 <LCD_sendCommand+0x5a8>
		__ticks = 1;
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	9a a3       	std	Y+34, r25	; 0x22
     66c:	89 a3       	std	Y+33, r24	; 0x21
     66e:	3f c0       	rjmp	.+126    	; 0x6ee <LCD_sendCommand+0x626>
	else if (__tmp > 65535)
     670:	6b a1       	ldd	r22, Y+35	; 0x23
     672:	7c a1       	ldd	r23, Y+36	; 0x24
     674:	8d a1       	ldd	r24, Y+37	; 0x25
     676:	9e a1       	ldd	r25, Y+38	; 0x26
     678:	20 e0       	ldi	r18, 0x00	; 0
     67a:	3f ef       	ldi	r19, 0xFF	; 255
     67c:	4f e7       	ldi	r20, 0x7F	; 127
     67e:	57 e4       	ldi	r21, 0x47	; 71
     680:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     684:	18 16       	cp	r1, r24
     686:	4c f5       	brge	.+82     	; 0x6da <LCD_sendCommand+0x612>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     688:	6f a1       	ldd	r22, Y+39	; 0x27
     68a:	78 a5       	ldd	r23, Y+40	; 0x28
     68c:	89 a5       	ldd	r24, Y+41	; 0x29
     68e:	9a a5       	ldd	r25, Y+42	; 0x2a
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e2       	ldi	r20, 0x20	; 32
     696:	51 e4       	ldi	r21, 0x41	; 65
     698:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     69c:	dc 01       	movw	r26, r24
     69e:	cb 01       	movw	r24, r22
     6a0:	bc 01       	movw	r22, r24
     6a2:	cd 01       	movw	r24, r26
     6a4:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     6a8:	dc 01       	movw	r26, r24
     6aa:	cb 01       	movw	r24, r22
     6ac:	9a a3       	std	Y+34, r25	; 0x22
     6ae:	89 a3       	std	Y+33, r24	; 0x21
     6b0:	0f c0       	rjmp	.+30     	; 0x6d0 <LCD_sendCommand+0x608>
     6b2:	80 e9       	ldi	r24, 0x90	; 144
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	98 a3       	std	Y+32, r25	; 0x20
     6b8:	8f 8f       	std	Y+31, r24	; 0x1f
     6ba:	8f 8d       	ldd	r24, Y+31	; 0x1f
     6bc:	98 a1       	ldd	r25, Y+32	; 0x20
     6be:	01 97       	sbiw	r24, 0x01	; 1
     6c0:	f1 f7       	brne	.-4      	; 0x6be <LCD_sendCommand+0x5f6>
     6c2:	98 a3       	std	Y+32, r25	; 0x20
     6c4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6c6:	89 a1       	ldd	r24, Y+33	; 0x21
     6c8:	9a a1       	ldd	r25, Y+34	; 0x22
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	9a a3       	std	Y+34, r25	; 0x22
     6ce:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6d0:	89 a1       	ldd	r24, Y+33	; 0x21
     6d2:	9a a1       	ldd	r25, Y+34	; 0x22
     6d4:	00 97       	sbiw	r24, 0x00	; 0
     6d6:	69 f7       	brne	.-38     	; 0x6b2 <LCD_sendCommand+0x5ea>
     6d8:	14 c0       	rjmp	.+40     	; 0x702 <LCD_sendCommand+0x63a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6da:	6b a1       	ldd	r22, Y+35	; 0x23
     6dc:	7c a1       	ldd	r23, Y+36	; 0x24
     6de:	8d a1       	ldd	r24, Y+37	; 0x25
     6e0:	9e a1       	ldd	r25, Y+38	; 0x26
     6e2:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     6e6:	dc 01       	movw	r26, r24
     6e8:	cb 01       	movw	r24, r22
     6ea:	9a a3       	std	Y+34, r25	; 0x22
     6ec:	89 a3       	std	Y+33, r24	; 0x21
     6ee:	89 a1       	ldd	r24, Y+33	; 0x21
     6f0:	9a a1       	ldd	r25, Y+34	; 0x22
     6f2:	9e 8f       	std	Y+30, r25	; 0x1e
     6f4:	8d 8f       	std	Y+29, r24	; 0x1d
     6f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
     6f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	f1 f7       	brne	.-4      	; 0x6fa <LCD_sendCommand+0x632>
     6fe:	9e 8f       	std	Y+30, r25	; 0x1e
     700:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	LCD_DATA_PORT = b; /* out the required command to the data bus D0 --> D7 */
     702:	ab e3       	ldi	r26, 0x3B	; 59
     704:	b0 e0       	ldi	r27, 0x00	; 0
     706:	fe 01       	movw	r30, r28
     708:	ed 59       	subi	r30, 0x9D	; 157
     70a:	ff 4f       	sbci	r31, 0xFF	; 255
     70c:	80 81       	ld	r24, Z
     70e:	8c 93       	st	X, r24
     710:	80 e0       	ldi	r24, 0x00	; 0
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	a0 e8       	ldi	r26, 0x80	; 128
     716:	bf e3       	ldi	r27, 0x3F	; 63
     718:	89 8f       	std	Y+25, r24	; 0x19
     71a:	9a 8f       	std	Y+26, r25	; 0x1a
     71c:	ab 8f       	std	Y+27, r26	; 0x1b
     71e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     720:	69 8d       	ldd	r22, Y+25	; 0x19
     722:	7a 8d       	ldd	r23, Y+26	; 0x1a
     724:	8b 8d       	ldd	r24, Y+27	; 0x1b
     726:	9c 8d       	ldd	r25, Y+28	; 0x1c
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	4a e7       	ldi	r20, 0x7A	; 122
     72e:	55 e4       	ldi	r21, 0x45	; 69
     730:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     734:	dc 01       	movw	r26, r24
     736:	cb 01       	movw	r24, r22
     738:	8d 8b       	std	Y+21, r24	; 0x15
     73a:	9e 8b       	std	Y+22, r25	; 0x16
     73c:	af 8b       	std	Y+23, r26	; 0x17
     73e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     740:	6d 89       	ldd	r22, Y+21	; 0x15
     742:	7e 89       	ldd	r23, Y+22	; 0x16
     744:	8f 89       	ldd	r24, Y+23	; 0x17
     746:	98 8d       	ldd	r25, Y+24	; 0x18
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	40 e8       	ldi	r20, 0x80	; 128
     74e:	5f e3       	ldi	r21, 0x3F	; 63
     750:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     754:	88 23       	and	r24, r24
     756:	2c f4       	brge	.+10     	; 0x762 <LCD_sendCommand+0x69a>
		__ticks = 1;
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	9c 8b       	std	Y+20, r25	; 0x14
     75e:	8b 8b       	std	Y+19, r24	; 0x13
     760:	3f c0       	rjmp	.+126    	; 0x7e0 <LCD_sendCommand+0x718>
	else if (__tmp > 65535)
     762:	6d 89       	ldd	r22, Y+21	; 0x15
     764:	7e 89       	ldd	r23, Y+22	; 0x16
     766:	8f 89       	ldd	r24, Y+23	; 0x17
     768:	98 8d       	ldd	r25, Y+24	; 0x18
     76a:	20 e0       	ldi	r18, 0x00	; 0
     76c:	3f ef       	ldi	r19, 0xFF	; 255
     76e:	4f e7       	ldi	r20, 0x7F	; 127
     770:	57 e4       	ldi	r21, 0x47	; 71
     772:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     776:	18 16       	cp	r1, r24
     778:	4c f5       	brge	.+82     	; 0x7cc <LCD_sendCommand+0x704>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     77a:	69 8d       	ldd	r22, Y+25	; 0x19
     77c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     77e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     780:	9c 8d       	ldd	r25, Y+28	; 0x1c
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e2       	ldi	r20, 0x20	; 32
     788:	51 e4       	ldi	r21, 0x41	; 65
     78a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     78e:	dc 01       	movw	r26, r24
     790:	cb 01       	movw	r24, r22
     792:	bc 01       	movw	r22, r24
     794:	cd 01       	movw	r24, r26
     796:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     79a:	dc 01       	movw	r26, r24
     79c:	cb 01       	movw	r24, r22
     79e:	9c 8b       	std	Y+20, r25	; 0x14
     7a0:	8b 8b       	std	Y+19, r24	; 0x13
     7a2:	0f c0       	rjmp	.+30     	; 0x7c2 <LCD_sendCommand+0x6fa>
     7a4:	80 e9       	ldi	r24, 0x90	; 144
     7a6:	91 e0       	ldi	r25, 0x01	; 1
     7a8:	9a 8b       	std	Y+18, r25	; 0x12
     7aa:	89 8b       	std	Y+17, r24	; 0x11
     7ac:	89 89       	ldd	r24, Y+17	; 0x11
     7ae:	9a 89       	ldd	r25, Y+18	; 0x12
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	f1 f7       	brne	.-4      	; 0x7b0 <LCD_sendCommand+0x6e8>
     7b4:	9a 8b       	std	Y+18, r25	; 0x12
     7b6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7b8:	8b 89       	ldd	r24, Y+19	; 0x13
     7ba:	9c 89       	ldd	r25, Y+20	; 0x14
     7bc:	01 97       	sbiw	r24, 0x01	; 1
     7be:	9c 8b       	std	Y+20, r25	; 0x14
     7c0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c2:	8b 89       	ldd	r24, Y+19	; 0x13
     7c4:	9c 89       	ldd	r25, Y+20	; 0x14
     7c6:	00 97       	sbiw	r24, 0x00	; 0
     7c8:	69 f7       	brne	.-38     	; 0x7a4 <LCD_sendCommand+0x6dc>
     7ca:	14 c0       	rjmp	.+40     	; 0x7f4 <LCD_sendCommand+0x72c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7cc:	6d 89       	ldd	r22, Y+21	; 0x15
     7ce:	7e 89       	ldd	r23, Y+22	; 0x16
     7d0:	8f 89       	ldd	r24, Y+23	; 0x17
     7d2:	98 8d       	ldd	r25, Y+24	; 0x18
     7d4:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     7d8:	dc 01       	movw	r26, r24
     7da:	cb 01       	movw	r24, r22
     7dc:	9c 8b       	std	Y+20, r25	; 0x14
     7de:	8b 8b       	std	Y+19, r24	; 0x13
     7e0:	8b 89       	ldd	r24, Y+19	; 0x13
     7e2:	9c 89       	ldd	r25, Y+20	; 0x14
     7e4:	98 8b       	std	Y+16, r25	; 0x10
     7e6:	8f 87       	std	Y+15, r24	; 0x0f
     7e8:	8f 85       	ldd	r24, Y+15	; 0x0f
     7ea:	98 89       	ldd	r25, Y+16	; 0x10
     7ec:	01 97       	sbiw	r24, 0x01	; 1
     7ee:	f1 f7       	brne	.-4      	; 0x7ec <LCD_sendCommand+0x724>
     7f0:	98 8b       	std	Y+16, r25	; 0x10
     7f2:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* disable LCD E=0 */
     7f4:	a8 e3       	ldi	r26, 0x38	; 56
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	e8 e3       	ldi	r30, 0x38	; 56
     7fa:	f0 e0       	ldi	r31, 0x00	; 0
     7fc:	80 81       	ld	r24, Z
     7fe:	87 7f       	andi	r24, 0xF7	; 247
     800:	8c 93       	st	X, r24
     802:	80 e0       	ldi	r24, 0x00	; 0
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	a0 e8       	ldi	r26, 0x80	; 128
     808:	bf e3       	ldi	r27, 0x3F	; 63
     80a:	8b 87       	std	Y+11, r24	; 0x0b
     80c:	9c 87       	std	Y+12, r25	; 0x0c
     80e:	ad 87       	std	Y+13, r26	; 0x0d
     810:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     812:	6b 85       	ldd	r22, Y+11	; 0x0b
     814:	7c 85       	ldd	r23, Y+12	; 0x0c
     816:	8d 85       	ldd	r24, Y+13	; 0x0d
     818:	9e 85       	ldd	r25, Y+14	; 0x0e
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	4a e7       	ldi	r20, 0x7A	; 122
     820:	55 e4       	ldi	r21, 0x45	; 69
     822:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     826:	dc 01       	movw	r26, r24
     828:	cb 01       	movw	r24, r22
     82a:	8f 83       	std	Y+7, r24	; 0x07
     82c:	98 87       	std	Y+8, r25	; 0x08
     82e:	a9 87       	std	Y+9, r26	; 0x09
     830:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     832:	6f 81       	ldd	r22, Y+7	; 0x07
     834:	78 85       	ldd	r23, Y+8	; 0x08
     836:	89 85       	ldd	r24, Y+9	; 0x09
     838:	9a 85       	ldd	r25, Y+10	; 0x0a
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	40 e8       	ldi	r20, 0x80	; 128
     840:	5f e3       	ldi	r21, 0x3F	; 63
     842:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     846:	88 23       	and	r24, r24
     848:	2c f4       	brge	.+10     	; 0x854 <LCD_sendCommand+0x78c>
		__ticks = 1;
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	9e 83       	std	Y+6, r25	; 0x06
     850:	8d 83       	std	Y+5, r24	; 0x05
     852:	3f c0       	rjmp	.+126    	; 0x8d2 <__stack+0x73>
	else if (__tmp > 65535)
     854:	6f 81       	ldd	r22, Y+7	; 0x07
     856:	78 85       	ldd	r23, Y+8	; 0x08
     858:	89 85       	ldd	r24, Y+9	; 0x09
     85a:	9a 85       	ldd	r25, Y+10	; 0x0a
     85c:	20 e0       	ldi	r18, 0x00	; 0
     85e:	3f ef       	ldi	r19, 0xFF	; 255
     860:	4f e7       	ldi	r20, 0x7F	; 127
     862:	57 e4       	ldi	r21, 0x47	; 71
     864:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     868:	18 16       	cp	r1, r24
     86a:	4c f5       	brge	.+82     	; 0x8be <__stack+0x5f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     86c:	6b 85       	ldd	r22, Y+11	; 0x0b
     86e:	7c 85       	ldd	r23, Y+12	; 0x0c
     870:	8d 85       	ldd	r24, Y+13	; 0x0d
     872:	9e 85       	ldd	r25, Y+14	; 0x0e
     874:	20 e0       	ldi	r18, 0x00	; 0
     876:	30 e0       	ldi	r19, 0x00	; 0
     878:	40 e2       	ldi	r20, 0x20	; 32
     87a:	51 e4       	ldi	r21, 0x41	; 65
     87c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     880:	dc 01       	movw	r26, r24
     882:	cb 01       	movw	r24, r22
     884:	bc 01       	movw	r22, r24
     886:	cd 01       	movw	r24, r26
     888:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     88c:	dc 01       	movw	r26, r24
     88e:	cb 01       	movw	r24, r22
     890:	9e 83       	std	Y+6, r25	; 0x06
     892:	8d 83       	std	Y+5, r24	; 0x05
     894:	0f c0       	rjmp	.+30     	; 0x8b4 <__stack+0x55>
     896:	80 e9       	ldi	r24, 0x90	; 144
     898:	91 e0       	ldi	r25, 0x01	; 1
     89a:	9c 83       	std	Y+4, r25	; 0x04
     89c:	8b 83       	std	Y+3, r24	; 0x03
     89e:	8b 81       	ldd	r24, Y+3	; 0x03
     8a0:	9c 81       	ldd	r25, Y+4	; 0x04
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	f1 f7       	brne	.-4      	; 0x8a2 <__stack+0x43>
     8a6:	9c 83       	std	Y+4, r25	; 0x04
     8a8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8aa:	8d 81       	ldd	r24, Y+5	; 0x05
     8ac:	9e 81       	ldd	r25, Y+6	; 0x06
     8ae:	01 97       	sbiw	r24, 0x01	; 1
     8b0:	9e 83       	std	Y+6, r25	; 0x06
     8b2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8b4:	8d 81       	ldd	r24, Y+5	; 0x05
     8b6:	9e 81       	ldd	r25, Y+6	; 0x06
     8b8:	00 97       	sbiw	r24, 0x00	; 0
     8ba:	69 f7       	brne	.-38     	; 0x896 <__stack+0x37>
     8bc:	14 c0       	rjmp	.+40     	; 0x8e6 <__stack+0x87>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8be:	6f 81       	ldd	r22, Y+7	; 0x07
     8c0:	78 85       	ldd	r23, Y+8	; 0x08
     8c2:	89 85       	ldd	r24, Y+9	; 0x09
     8c4:	9a 85       	ldd	r25, Y+10	; 0x0a
     8c6:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     8ca:	dc 01       	movw	r26, r24
     8cc:	cb 01       	movw	r24, r22
     8ce:	9e 83       	std	Y+6, r25	; 0x06
     8d0:	8d 83       	std	Y+5, r24	; 0x05
     8d2:	8d 81       	ldd	r24, Y+5	; 0x05
     8d4:	9e 81       	ldd	r25, Y+6	; 0x06
     8d6:	9a 83       	std	Y+2, r25	; 0x02
     8d8:	89 83       	std	Y+1, r24	; 0x01
     8da:	89 81       	ldd	r24, Y+1	; 0x01
     8dc:	9a 81       	ldd	r25, Y+2	; 0x02
     8de:	01 97       	sbiw	r24, 0x01	; 1
     8e0:	f1 f7       	brne	.-4      	; 0x8de <__stack+0x7f>
     8e2:	9a 83       	std	Y+2, r25	; 0x02
     8e4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* delay for processing Th = 13ns */
}
     8e6:	cb 59       	subi	r28, 0x9B	; 155
     8e8:	df 4f       	sbci	r29, 0xFF	; 255
     8ea:	0f b6       	in	r0, 0x3f	; 63
     8ec:	f8 94       	cli
     8ee:	de bf       	out	0x3e, r29	; 62
     8f0:	0f be       	out	0x3f, r0	; 63
     8f2:	cd bf       	out	0x3d, r28	; 61
     8f4:	cf 91       	pop	r28
     8f6:	df 91       	pop	r29
     8f8:	1f 91       	pop	r17
     8fa:	0f 91       	pop	r16
     8fc:	08 95       	ret

000008fe <LCD_displayCharacter>:

void LCD_displayCharacter(uint8 data)
{
     8fe:	0f 93       	push	r16
     900:	1f 93       	push	r17
     902:	df 93       	push	r29
     904:	cf 93       	push	r28
     906:	cd b7       	in	r28, 0x3d	; 61
     908:	de b7       	in	r29, 0x3e	; 62
     90a:	c3 57       	subi	r28, 0x73	; 115
     90c:	d0 40       	sbci	r29, 0x00	; 0
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	f8 94       	cli
     912:	de bf       	out	0x3e, r29	; 62
     914:	0f be       	out	0x3f, r0	; 63
     916:	cd bf       	out	0x3d, r28	; 61
     918:	fe 01       	movw	r30, r28
     91a:	ed 58       	subi	r30, 0x8D	; 141
     91c:	ff 4f       	sbci	r31, 0xFF	; 255
     91e:	80 83       	st	Z, r24
    unsigned char a,b;
    a = data & 0xf0;  b = data << 4;
     920:	de 01       	movw	r26, r28
     922:	ae 58       	subi	r26, 0x8E	; 142
     924:	bf 4f       	sbci	r27, 0xFF	; 255
     926:	fe 01       	movw	r30, r28
     928:	ed 58       	subi	r30, 0x8D	; 141
     92a:	ff 4f       	sbci	r31, 0xFF	; 255
     92c:	80 81       	ld	r24, Z
     92e:	80 7f       	andi	r24, 0xF0	; 240
     930:	8c 93       	st	X, r24
     932:	de 01       	movw	r26, r28
     934:	af 58       	subi	r26, 0x8F	; 143
     936:	bf 4f       	sbci	r27, 0xFF	; 255
     938:	fe 01       	movw	r30, r28
     93a:	ed 58       	subi	r30, 0x8D	; 141
     93c:	ff 4f       	sbci	r31, 0xFF	; 255
     93e:	80 81       	ld	r24, Z
     940:	82 95       	swap	r24
     942:	80 7f       	andi	r24, 0xF0	; 240
     944:	8c 93       	st	X, r24

	SET_BIT(LCD_CTRL_PORT,RS); /* Data Mode RS=1 */
     946:	a8 e3       	ldi	r26, 0x38	; 56
     948:	b0 e0       	ldi	r27, 0x00	; 0
     94a:	e8 e3       	ldi	r30, 0x38	; 56
     94c:	f0 e0       	ldi	r31, 0x00	; 0
     94e:	80 81       	ld	r24, Z
     950:	82 60       	ori	r24, 0x02	; 2
     952:	8c 93       	st	X, r24
	CLEAR_BIT(LCD_CTRL_PORT,RW); /* write data to LCD so RW=0 */
     954:	a8 e3       	ldi	r26, 0x38	; 56
     956:	b0 e0       	ldi	r27, 0x00	; 0
     958:	e8 e3       	ldi	r30, 0x38	; 56
     95a:	f0 e0       	ldi	r31, 0x00	; 0
     95c:	80 81       	ld	r24, Z
     95e:	8b 7f       	andi	r24, 0xFB	; 251
     960:	8c 93       	st	X, r24
     962:	fe 01       	movw	r30, r28
     964:	e3 59       	subi	r30, 0x93	; 147
     966:	ff 4f       	sbci	r31, 0xFF	; 255
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	a0 e8       	ldi	r26, 0x80	; 128
     96e:	bf e3       	ldi	r27, 0x3F	; 63
     970:	80 83       	st	Z, r24
     972:	91 83       	std	Z+1, r25	; 0x01
     974:	a2 83       	std	Z+2, r26	; 0x02
     976:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     978:	8e 01       	movw	r16, r28
     97a:	07 59       	subi	r16, 0x97	; 151
     97c:	1f 4f       	sbci	r17, 0xFF	; 255
     97e:	fe 01       	movw	r30, r28
     980:	e3 59       	subi	r30, 0x93	; 147
     982:	ff 4f       	sbci	r31, 0xFF	; 255
     984:	60 81       	ld	r22, Z
     986:	71 81       	ldd	r23, Z+1	; 0x01
     988:	82 81       	ldd	r24, Z+2	; 0x02
     98a:	93 81       	ldd	r25, Z+3	; 0x03
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	4a e7       	ldi	r20, 0x7A	; 122
     992:	55 e4       	ldi	r21, 0x45	; 69
     994:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     998:	dc 01       	movw	r26, r24
     99a:	cb 01       	movw	r24, r22
     99c:	f8 01       	movw	r30, r16
     99e:	80 83       	st	Z, r24
     9a0:	91 83       	std	Z+1, r25	; 0x01
     9a2:	a2 83       	std	Z+2, r26	; 0x02
     9a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9a6:	fe 01       	movw	r30, r28
     9a8:	e7 59       	subi	r30, 0x97	; 151
     9aa:	ff 4f       	sbci	r31, 0xFF	; 255
     9ac:	60 81       	ld	r22, Z
     9ae:	71 81       	ldd	r23, Z+1	; 0x01
     9b0:	82 81       	ldd	r24, Z+2	; 0x02
     9b2:	93 81       	ldd	r25, Z+3	; 0x03
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 e8       	ldi	r20, 0x80	; 128
     9ba:	5f e3       	ldi	r21, 0x3F	; 63
     9bc:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     9c0:	88 23       	and	r24, r24
     9c2:	44 f4       	brge	.+16     	; 0x9d4 <LCD_displayCharacter+0xd6>
		__ticks = 1;
     9c4:	fe 01       	movw	r30, r28
     9c6:	e9 59       	subi	r30, 0x99	; 153
     9c8:	ff 4f       	sbci	r31, 0xFF	; 255
     9ca:	81 e0       	ldi	r24, 0x01	; 1
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	91 83       	std	Z+1, r25	; 0x01
     9d0:	80 83       	st	Z, r24
     9d2:	64 c0       	rjmp	.+200    	; 0xa9c <LCD_displayCharacter+0x19e>
	else if (__tmp > 65535)
     9d4:	fe 01       	movw	r30, r28
     9d6:	e7 59       	subi	r30, 0x97	; 151
     9d8:	ff 4f       	sbci	r31, 0xFF	; 255
     9da:	60 81       	ld	r22, Z
     9dc:	71 81       	ldd	r23, Z+1	; 0x01
     9de:	82 81       	ldd	r24, Z+2	; 0x02
     9e0:	93 81       	ldd	r25, Z+3	; 0x03
     9e2:	20 e0       	ldi	r18, 0x00	; 0
     9e4:	3f ef       	ldi	r19, 0xFF	; 255
     9e6:	4f e7       	ldi	r20, 0x7F	; 127
     9e8:	57 e4       	ldi	r21, 0x47	; 71
     9ea:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     9ee:	18 16       	cp	r1, r24
     9f0:	0c f0       	brlt	.+2      	; 0x9f4 <LCD_displayCharacter+0xf6>
     9f2:	43 c0       	rjmp	.+134    	; 0xa7a <LCD_displayCharacter+0x17c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9f4:	fe 01       	movw	r30, r28
     9f6:	e3 59       	subi	r30, 0x93	; 147
     9f8:	ff 4f       	sbci	r31, 0xFF	; 255
     9fa:	60 81       	ld	r22, Z
     9fc:	71 81       	ldd	r23, Z+1	; 0x01
     9fe:	82 81       	ldd	r24, Z+2	; 0x02
     a00:	93 81       	ldd	r25, Z+3	; 0x03
     a02:	20 e0       	ldi	r18, 0x00	; 0
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	40 e2       	ldi	r20, 0x20	; 32
     a08:	51 e4       	ldi	r21, 0x41	; 65
     a0a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     a0e:	dc 01       	movw	r26, r24
     a10:	cb 01       	movw	r24, r22
     a12:	8e 01       	movw	r16, r28
     a14:	09 59       	subi	r16, 0x99	; 153
     a16:	1f 4f       	sbci	r17, 0xFF	; 255
     a18:	bc 01       	movw	r22, r24
     a1a:	cd 01       	movw	r24, r26
     a1c:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     a20:	dc 01       	movw	r26, r24
     a22:	cb 01       	movw	r24, r22
     a24:	f8 01       	movw	r30, r16
     a26:	91 83       	std	Z+1, r25	; 0x01
     a28:	80 83       	st	Z, r24
     a2a:	1f c0       	rjmp	.+62     	; 0xa6a <LCD_displayCharacter+0x16c>
     a2c:	fe 01       	movw	r30, r28
     a2e:	eb 59       	subi	r30, 0x9B	; 155
     a30:	ff 4f       	sbci	r31, 0xFF	; 255
     a32:	80 e9       	ldi	r24, 0x90	; 144
     a34:	91 e0       	ldi	r25, 0x01	; 1
     a36:	91 83       	std	Z+1, r25	; 0x01
     a38:	80 83       	st	Z, r24
     a3a:	fe 01       	movw	r30, r28
     a3c:	eb 59       	subi	r30, 0x9B	; 155
     a3e:	ff 4f       	sbci	r31, 0xFF	; 255
     a40:	80 81       	ld	r24, Z
     a42:	91 81       	ldd	r25, Z+1	; 0x01
     a44:	01 97       	sbiw	r24, 0x01	; 1
     a46:	f1 f7       	brne	.-4      	; 0xa44 <LCD_displayCharacter+0x146>
     a48:	fe 01       	movw	r30, r28
     a4a:	eb 59       	subi	r30, 0x9B	; 155
     a4c:	ff 4f       	sbci	r31, 0xFF	; 255
     a4e:	91 83       	std	Z+1, r25	; 0x01
     a50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a52:	de 01       	movw	r26, r28
     a54:	a9 59       	subi	r26, 0x99	; 153
     a56:	bf 4f       	sbci	r27, 0xFF	; 255
     a58:	fe 01       	movw	r30, r28
     a5a:	e9 59       	subi	r30, 0x99	; 153
     a5c:	ff 4f       	sbci	r31, 0xFF	; 255
     a5e:	80 81       	ld	r24, Z
     a60:	91 81       	ldd	r25, Z+1	; 0x01
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	11 96       	adiw	r26, 0x01	; 1
     a66:	9c 93       	st	X, r25
     a68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a6a:	fe 01       	movw	r30, r28
     a6c:	e9 59       	subi	r30, 0x99	; 153
     a6e:	ff 4f       	sbci	r31, 0xFF	; 255
     a70:	80 81       	ld	r24, Z
     a72:	91 81       	ldd	r25, Z+1	; 0x01
     a74:	00 97       	sbiw	r24, 0x00	; 0
     a76:	d1 f6       	brne	.-76     	; 0xa2c <LCD_displayCharacter+0x12e>
     a78:	27 c0       	rjmp	.+78     	; 0xac8 <LCD_displayCharacter+0x1ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a7a:	8e 01       	movw	r16, r28
     a7c:	09 59       	subi	r16, 0x99	; 153
     a7e:	1f 4f       	sbci	r17, 0xFF	; 255
     a80:	fe 01       	movw	r30, r28
     a82:	e7 59       	subi	r30, 0x97	; 151
     a84:	ff 4f       	sbci	r31, 0xFF	; 255
     a86:	60 81       	ld	r22, Z
     a88:	71 81       	ldd	r23, Z+1	; 0x01
     a8a:	82 81       	ldd	r24, Z+2	; 0x02
     a8c:	93 81       	ldd	r25, Z+3	; 0x03
     a8e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     a92:	dc 01       	movw	r26, r24
     a94:	cb 01       	movw	r24, r22
     a96:	f8 01       	movw	r30, r16
     a98:	91 83       	std	Z+1, r25	; 0x01
     a9a:	80 83       	st	Z, r24
     a9c:	de 01       	movw	r26, r28
     a9e:	ad 59       	subi	r26, 0x9D	; 157
     aa0:	bf 4f       	sbci	r27, 0xFF	; 255
     aa2:	fe 01       	movw	r30, r28
     aa4:	e9 59       	subi	r30, 0x99	; 153
     aa6:	ff 4f       	sbci	r31, 0xFF	; 255
     aa8:	80 81       	ld	r24, Z
     aaa:	91 81       	ldd	r25, Z+1	; 0x01
     aac:	8d 93       	st	X+, r24
     aae:	9c 93       	st	X, r25
     ab0:	fe 01       	movw	r30, r28
     ab2:	ed 59       	subi	r30, 0x9D	; 157
     ab4:	ff 4f       	sbci	r31, 0xFF	; 255
     ab6:	80 81       	ld	r24, Z
     ab8:	91 81       	ldd	r25, Z+1	; 0x01
     aba:	01 97       	sbiw	r24, 0x01	; 1
     abc:	f1 f7       	brne	.-4      	; 0xaba <LCD_displayCharacter+0x1bc>
     abe:	fe 01       	movw	r30, r28
     ac0:	ed 59       	subi	r30, 0x9D	; 157
     ac2:	ff 4f       	sbci	r31, 0xFF	; 255
     ac4:	91 83       	std	Z+1, r25	; 0x01
     ac6:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	SET_BIT(LCD_CTRL_PORT,E); /* Enable LCD E=1 */
     ac8:	a8 e3       	ldi	r26, 0x38	; 56
     aca:	b0 e0       	ldi	r27, 0x00	; 0
     acc:	e8 e3       	ldi	r30, 0x38	; 56
     ace:	f0 e0       	ldi	r31, 0x00	; 0
     ad0:	80 81       	ld	r24, Z
     ad2:	88 60       	ori	r24, 0x08	; 8
     ad4:	8c 93       	st	X, r24
     ad6:	fe 01       	movw	r30, r28
     ad8:	e1 5a       	subi	r30, 0xA1	; 161
     ada:	ff 4f       	sbci	r31, 0xFF	; 255
     adc:	80 e0       	ldi	r24, 0x00	; 0
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	a0 e8       	ldi	r26, 0x80	; 128
     ae2:	bf e3       	ldi	r27, 0x3F	; 63
     ae4:	80 83       	st	Z, r24
     ae6:	91 83       	std	Z+1, r25	; 0x01
     ae8:	a2 83       	std	Z+2, r26	; 0x02
     aea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     aec:	8e 01       	movw	r16, r28
     aee:	05 5a       	subi	r16, 0xA5	; 165
     af0:	1f 4f       	sbci	r17, 0xFF	; 255
     af2:	fe 01       	movw	r30, r28
     af4:	e1 5a       	subi	r30, 0xA1	; 161
     af6:	ff 4f       	sbci	r31, 0xFF	; 255
     af8:	60 81       	ld	r22, Z
     afa:	71 81       	ldd	r23, Z+1	; 0x01
     afc:	82 81       	ldd	r24, Z+2	; 0x02
     afe:	93 81       	ldd	r25, Z+3	; 0x03
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	4a e7       	ldi	r20, 0x7A	; 122
     b06:	55 e4       	ldi	r21, 0x45	; 69
     b08:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     b0c:	dc 01       	movw	r26, r24
     b0e:	cb 01       	movw	r24, r22
     b10:	f8 01       	movw	r30, r16
     b12:	80 83       	st	Z, r24
     b14:	91 83       	std	Z+1, r25	; 0x01
     b16:	a2 83       	std	Z+2, r26	; 0x02
     b18:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b1a:	fe 01       	movw	r30, r28
     b1c:	e5 5a       	subi	r30, 0xA5	; 165
     b1e:	ff 4f       	sbci	r31, 0xFF	; 255
     b20:	60 81       	ld	r22, Z
     b22:	71 81       	ldd	r23, Z+1	; 0x01
     b24:	82 81       	ldd	r24, Z+2	; 0x02
     b26:	93 81       	ldd	r25, Z+3	; 0x03
     b28:	20 e0       	ldi	r18, 0x00	; 0
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	40 e8       	ldi	r20, 0x80	; 128
     b2e:	5f e3       	ldi	r21, 0x3F	; 63
     b30:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     b34:	88 23       	and	r24, r24
     b36:	44 f4       	brge	.+16     	; 0xb48 <LCD_displayCharacter+0x24a>
		__ticks = 1;
     b38:	fe 01       	movw	r30, r28
     b3a:	e7 5a       	subi	r30, 0xA7	; 167
     b3c:	ff 4f       	sbci	r31, 0xFF	; 255
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	90 e0       	ldi	r25, 0x00	; 0
     b42:	91 83       	std	Z+1, r25	; 0x01
     b44:	80 83       	st	Z, r24
     b46:	64 c0       	rjmp	.+200    	; 0xc10 <LCD_displayCharacter+0x312>
	else if (__tmp > 65535)
     b48:	fe 01       	movw	r30, r28
     b4a:	e5 5a       	subi	r30, 0xA5	; 165
     b4c:	ff 4f       	sbci	r31, 0xFF	; 255
     b4e:	60 81       	ld	r22, Z
     b50:	71 81       	ldd	r23, Z+1	; 0x01
     b52:	82 81       	ldd	r24, Z+2	; 0x02
     b54:	93 81       	ldd	r25, Z+3	; 0x03
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	3f ef       	ldi	r19, 0xFF	; 255
     b5a:	4f e7       	ldi	r20, 0x7F	; 127
     b5c:	57 e4       	ldi	r21, 0x47	; 71
     b5e:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     b62:	18 16       	cp	r1, r24
     b64:	0c f0       	brlt	.+2      	; 0xb68 <LCD_displayCharacter+0x26a>
     b66:	43 c0       	rjmp	.+134    	; 0xbee <LCD_displayCharacter+0x2f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b68:	fe 01       	movw	r30, r28
     b6a:	e1 5a       	subi	r30, 0xA1	; 161
     b6c:	ff 4f       	sbci	r31, 0xFF	; 255
     b6e:	60 81       	ld	r22, Z
     b70:	71 81       	ldd	r23, Z+1	; 0x01
     b72:	82 81       	ldd	r24, Z+2	; 0x02
     b74:	93 81       	ldd	r25, Z+3	; 0x03
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	40 e2       	ldi	r20, 0x20	; 32
     b7c:	51 e4       	ldi	r21, 0x41	; 65
     b7e:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     b82:	dc 01       	movw	r26, r24
     b84:	cb 01       	movw	r24, r22
     b86:	8e 01       	movw	r16, r28
     b88:	07 5a       	subi	r16, 0xA7	; 167
     b8a:	1f 4f       	sbci	r17, 0xFF	; 255
     b8c:	bc 01       	movw	r22, r24
     b8e:	cd 01       	movw	r24, r26
     b90:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     b94:	dc 01       	movw	r26, r24
     b96:	cb 01       	movw	r24, r22
     b98:	f8 01       	movw	r30, r16
     b9a:	91 83       	std	Z+1, r25	; 0x01
     b9c:	80 83       	st	Z, r24
     b9e:	1f c0       	rjmp	.+62     	; 0xbde <LCD_displayCharacter+0x2e0>
     ba0:	fe 01       	movw	r30, r28
     ba2:	e9 5a       	subi	r30, 0xA9	; 169
     ba4:	ff 4f       	sbci	r31, 0xFF	; 255
     ba6:	80 e9       	ldi	r24, 0x90	; 144
     ba8:	91 e0       	ldi	r25, 0x01	; 1
     baa:	91 83       	std	Z+1, r25	; 0x01
     bac:	80 83       	st	Z, r24
     bae:	fe 01       	movw	r30, r28
     bb0:	e9 5a       	subi	r30, 0xA9	; 169
     bb2:	ff 4f       	sbci	r31, 0xFF	; 255
     bb4:	80 81       	ld	r24, Z
     bb6:	91 81       	ldd	r25, Z+1	; 0x01
     bb8:	01 97       	sbiw	r24, 0x01	; 1
     bba:	f1 f7       	brne	.-4      	; 0xbb8 <LCD_displayCharacter+0x2ba>
     bbc:	fe 01       	movw	r30, r28
     bbe:	e9 5a       	subi	r30, 0xA9	; 169
     bc0:	ff 4f       	sbci	r31, 0xFF	; 255
     bc2:	91 83       	std	Z+1, r25	; 0x01
     bc4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bc6:	de 01       	movw	r26, r28
     bc8:	a7 5a       	subi	r26, 0xA7	; 167
     bca:	bf 4f       	sbci	r27, 0xFF	; 255
     bcc:	fe 01       	movw	r30, r28
     bce:	e7 5a       	subi	r30, 0xA7	; 167
     bd0:	ff 4f       	sbci	r31, 0xFF	; 255
     bd2:	80 81       	ld	r24, Z
     bd4:	91 81       	ldd	r25, Z+1	; 0x01
     bd6:	01 97       	sbiw	r24, 0x01	; 1
     bd8:	11 96       	adiw	r26, 0x01	; 1
     bda:	9c 93       	st	X, r25
     bdc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bde:	fe 01       	movw	r30, r28
     be0:	e7 5a       	subi	r30, 0xA7	; 167
     be2:	ff 4f       	sbci	r31, 0xFF	; 255
     be4:	80 81       	ld	r24, Z
     be6:	91 81       	ldd	r25, Z+1	; 0x01
     be8:	00 97       	sbiw	r24, 0x00	; 0
     bea:	d1 f6       	brne	.-76     	; 0xba0 <LCD_displayCharacter+0x2a2>
     bec:	27 c0       	rjmp	.+78     	; 0xc3c <LCD_displayCharacter+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bee:	8e 01       	movw	r16, r28
     bf0:	07 5a       	subi	r16, 0xA7	; 167
     bf2:	1f 4f       	sbci	r17, 0xFF	; 255
     bf4:	fe 01       	movw	r30, r28
     bf6:	e5 5a       	subi	r30, 0xA5	; 165
     bf8:	ff 4f       	sbci	r31, 0xFF	; 255
     bfa:	60 81       	ld	r22, Z
     bfc:	71 81       	ldd	r23, Z+1	; 0x01
     bfe:	82 81       	ldd	r24, Z+2	; 0x02
     c00:	93 81       	ldd	r25, Z+3	; 0x03
     c02:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     c06:	dc 01       	movw	r26, r24
     c08:	cb 01       	movw	r24, r22
     c0a:	f8 01       	movw	r30, r16
     c0c:	91 83       	std	Z+1, r25	; 0x01
     c0e:	80 83       	st	Z, r24
     c10:	de 01       	movw	r26, r28
     c12:	ab 5a       	subi	r26, 0xAB	; 171
     c14:	bf 4f       	sbci	r27, 0xFF	; 255
     c16:	fe 01       	movw	r30, r28
     c18:	e7 5a       	subi	r30, 0xA7	; 167
     c1a:	ff 4f       	sbci	r31, 0xFF	; 255
     c1c:	80 81       	ld	r24, Z
     c1e:	91 81       	ldd	r25, Z+1	; 0x01
     c20:	8d 93       	st	X+, r24
     c22:	9c 93       	st	X, r25
     c24:	fe 01       	movw	r30, r28
     c26:	eb 5a       	subi	r30, 0xAB	; 171
     c28:	ff 4f       	sbci	r31, 0xFF	; 255
     c2a:	80 81       	ld	r24, Z
     c2c:	91 81       	ldd	r25, Z+1	; 0x01
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	f1 f7       	brne	.-4      	; 0xc2e <LCD_displayCharacter+0x330>
     c32:	fe 01       	movw	r30, r28
     c34:	eb 5a       	subi	r30, 0xAB	; 171
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	91 83       	std	Z+1, r25	; 0x01
     c3a:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	LCD_DATA_PORT = a; /* out the required data char to the data bus D0 --> D7 */
     c3c:	ab e3       	ldi	r26, 0x3B	; 59
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	fe 01       	movw	r30, r28
     c42:	ee 58       	subi	r30, 0x8E	; 142
     c44:	ff 4f       	sbci	r31, 0xFF	; 255
     c46:	80 81       	ld	r24, Z
     c48:	8c 93       	st	X, r24
     c4a:	fe 01       	movw	r30, r28
     c4c:	ef 5a       	subi	r30, 0xAF	; 175
     c4e:	ff 4f       	sbci	r31, 0xFF	; 255
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	a0 e8       	ldi	r26, 0x80	; 128
     c56:	bf e3       	ldi	r27, 0x3F	; 63
     c58:	80 83       	st	Z, r24
     c5a:	91 83       	std	Z+1, r25	; 0x01
     c5c:	a2 83       	std	Z+2, r26	; 0x02
     c5e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c60:	8e 01       	movw	r16, r28
     c62:	03 5b       	subi	r16, 0xB3	; 179
     c64:	1f 4f       	sbci	r17, 0xFF	; 255
     c66:	fe 01       	movw	r30, r28
     c68:	ef 5a       	subi	r30, 0xAF	; 175
     c6a:	ff 4f       	sbci	r31, 0xFF	; 255
     c6c:	60 81       	ld	r22, Z
     c6e:	71 81       	ldd	r23, Z+1	; 0x01
     c70:	82 81       	ldd	r24, Z+2	; 0x02
     c72:	93 81       	ldd	r25, Z+3	; 0x03
     c74:	20 e0       	ldi	r18, 0x00	; 0
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	4a e7       	ldi	r20, 0x7A	; 122
     c7a:	55 e4       	ldi	r21, 0x45	; 69
     c7c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     c80:	dc 01       	movw	r26, r24
     c82:	cb 01       	movw	r24, r22
     c84:	f8 01       	movw	r30, r16
     c86:	80 83       	st	Z, r24
     c88:	91 83       	std	Z+1, r25	; 0x01
     c8a:	a2 83       	std	Z+2, r26	; 0x02
     c8c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c8e:	fe 01       	movw	r30, r28
     c90:	e3 5b       	subi	r30, 0xB3	; 179
     c92:	ff 4f       	sbci	r31, 0xFF	; 255
     c94:	60 81       	ld	r22, Z
     c96:	71 81       	ldd	r23, Z+1	; 0x01
     c98:	82 81       	ldd	r24, Z+2	; 0x02
     c9a:	93 81       	ldd	r25, Z+3	; 0x03
     c9c:	20 e0       	ldi	r18, 0x00	; 0
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	40 e8       	ldi	r20, 0x80	; 128
     ca2:	5f e3       	ldi	r21, 0x3F	; 63
     ca4:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     ca8:	88 23       	and	r24, r24
     caa:	44 f4       	brge	.+16     	; 0xcbc <LCD_displayCharacter+0x3be>
		__ticks = 1;
     cac:	fe 01       	movw	r30, r28
     cae:	e5 5b       	subi	r30, 0xB5	; 181
     cb0:	ff 4f       	sbci	r31, 0xFF	; 255
     cb2:	81 e0       	ldi	r24, 0x01	; 1
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	91 83       	std	Z+1, r25	; 0x01
     cb8:	80 83       	st	Z, r24
     cba:	64 c0       	rjmp	.+200    	; 0xd84 <LCD_displayCharacter+0x486>
	else if (__tmp > 65535)
     cbc:	fe 01       	movw	r30, r28
     cbe:	e3 5b       	subi	r30, 0xB3	; 179
     cc0:	ff 4f       	sbci	r31, 0xFF	; 255
     cc2:	60 81       	ld	r22, Z
     cc4:	71 81       	ldd	r23, Z+1	; 0x01
     cc6:	82 81       	ldd	r24, Z+2	; 0x02
     cc8:	93 81       	ldd	r25, Z+3	; 0x03
     cca:	20 e0       	ldi	r18, 0x00	; 0
     ccc:	3f ef       	ldi	r19, 0xFF	; 255
     cce:	4f e7       	ldi	r20, 0x7F	; 127
     cd0:	57 e4       	ldi	r21, 0x47	; 71
     cd2:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     cd6:	18 16       	cp	r1, r24
     cd8:	0c f0       	brlt	.+2      	; 0xcdc <LCD_displayCharacter+0x3de>
     cda:	43 c0       	rjmp	.+134    	; 0xd62 <LCD_displayCharacter+0x464>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cdc:	fe 01       	movw	r30, r28
     cde:	ef 5a       	subi	r30, 0xAF	; 175
     ce0:	ff 4f       	sbci	r31, 0xFF	; 255
     ce2:	60 81       	ld	r22, Z
     ce4:	71 81       	ldd	r23, Z+1	; 0x01
     ce6:	82 81       	ldd	r24, Z+2	; 0x02
     ce8:	93 81       	ldd	r25, Z+3	; 0x03
     cea:	20 e0       	ldi	r18, 0x00	; 0
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	40 e2       	ldi	r20, 0x20	; 32
     cf0:	51 e4       	ldi	r21, 0x41	; 65
     cf2:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     cf6:	dc 01       	movw	r26, r24
     cf8:	cb 01       	movw	r24, r22
     cfa:	8e 01       	movw	r16, r28
     cfc:	05 5b       	subi	r16, 0xB5	; 181
     cfe:	1f 4f       	sbci	r17, 0xFF	; 255
     d00:	bc 01       	movw	r22, r24
     d02:	cd 01       	movw	r24, r26
     d04:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     d08:	dc 01       	movw	r26, r24
     d0a:	cb 01       	movw	r24, r22
     d0c:	f8 01       	movw	r30, r16
     d0e:	91 83       	std	Z+1, r25	; 0x01
     d10:	80 83       	st	Z, r24
     d12:	1f c0       	rjmp	.+62     	; 0xd52 <LCD_displayCharacter+0x454>
     d14:	fe 01       	movw	r30, r28
     d16:	e7 5b       	subi	r30, 0xB7	; 183
     d18:	ff 4f       	sbci	r31, 0xFF	; 255
     d1a:	80 e9       	ldi	r24, 0x90	; 144
     d1c:	91 e0       	ldi	r25, 0x01	; 1
     d1e:	91 83       	std	Z+1, r25	; 0x01
     d20:	80 83       	st	Z, r24
     d22:	fe 01       	movw	r30, r28
     d24:	e7 5b       	subi	r30, 0xB7	; 183
     d26:	ff 4f       	sbci	r31, 0xFF	; 255
     d28:	80 81       	ld	r24, Z
     d2a:	91 81       	ldd	r25, Z+1	; 0x01
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	f1 f7       	brne	.-4      	; 0xd2c <LCD_displayCharacter+0x42e>
     d30:	fe 01       	movw	r30, r28
     d32:	e7 5b       	subi	r30, 0xB7	; 183
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	91 83       	std	Z+1, r25	; 0x01
     d38:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d3a:	de 01       	movw	r26, r28
     d3c:	a5 5b       	subi	r26, 0xB5	; 181
     d3e:	bf 4f       	sbci	r27, 0xFF	; 255
     d40:	fe 01       	movw	r30, r28
     d42:	e5 5b       	subi	r30, 0xB5	; 181
     d44:	ff 4f       	sbci	r31, 0xFF	; 255
     d46:	80 81       	ld	r24, Z
     d48:	91 81       	ldd	r25, Z+1	; 0x01
     d4a:	01 97       	sbiw	r24, 0x01	; 1
     d4c:	11 96       	adiw	r26, 0x01	; 1
     d4e:	9c 93       	st	X, r25
     d50:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d52:	fe 01       	movw	r30, r28
     d54:	e5 5b       	subi	r30, 0xB5	; 181
     d56:	ff 4f       	sbci	r31, 0xFF	; 255
     d58:	80 81       	ld	r24, Z
     d5a:	91 81       	ldd	r25, Z+1	; 0x01
     d5c:	00 97       	sbiw	r24, 0x00	; 0
     d5e:	d1 f6       	brne	.-76     	; 0xd14 <LCD_displayCharacter+0x416>
     d60:	27 c0       	rjmp	.+78     	; 0xdb0 <LCD_displayCharacter+0x4b2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d62:	8e 01       	movw	r16, r28
     d64:	05 5b       	subi	r16, 0xB5	; 181
     d66:	1f 4f       	sbci	r17, 0xFF	; 255
     d68:	fe 01       	movw	r30, r28
     d6a:	e3 5b       	subi	r30, 0xB3	; 179
     d6c:	ff 4f       	sbci	r31, 0xFF	; 255
     d6e:	60 81       	ld	r22, Z
     d70:	71 81       	ldd	r23, Z+1	; 0x01
     d72:	82 81       	ldd	r24, Z+2	; 0x02
     d74:	93 81       	ldd	r25, Z+3	; 0x03
     d76:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     d7a:	dc 01       	movw	r26, r24
     d7c:	cb 01       	movw	r24, r22
     d7e:	f8 01       	movw	r30, r16
     d80:	91 83       	std	Z+1, r25	; 0x01
     d82:	80 83       	st	Z, r24
     d84:	de 01       	movw	r26, r28
     d86:	a9 5b       	subi	r26, 0xB9	; 185
     d88:	bf 4f       	sbci	r27, 0xFF	; 255
     d8a:	fe 01       	movw	r30, r28
     d8c:	e5 5b       	subi	r30, 0xB5	; 181
     d8e:	ff 4f       	sbci	r31, 0xFF	; 255
     d90:	80 81       	ld	r24, Z
     d92:	91 81       	ldd	r25, Z+1	; 0x01
     d94:	8d 93       	st	X+, r24
     d96:	9c 93       	st	X, r25
     d98:	fe 01       	movw	r30, r28
     d9a:	e9 5b       	subi	r30, 0xB9	; 185
     d9c:	ff 4f       	sbci	r31, 0xFF	; 255
     d9e:	80 81       	ld	r24, Z
     da0:	91 81       	ldd	r25, Z+1	; 0x01
     da2:	01 97       	sbiw	r24, 0x01	; 1
     da4:	f1 f7       	brne	.-4      	; 0xda2 <LCD_displayCharacter+0x4a4>
     da6:	fe 01       	movw	r30, r28
     da8:	e9 5b       	subi	r30, 0xB9	; 185
     daa:	ff 4f       	sbci	r31, 0xFF	; 255
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* disable LCD E=0 */
     db0:	a8 e3       	ldi	r26, 0x38	; 56
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	e8 e3       	ldi	r30, 0x38	; 56
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	80 81       	ld	r24, Z
     dba:	87 7f       	andi	r24, 0xF7	; 247
     dbc:	8c 93       	st	X, r24
     dbe:	fe 01       	movw	r30, r28
     dc0:	ed 5b       	subi	r30, 0xBD	; 189
     dc2:	ff 4f       	sbci	r31, 0xFF	; 255
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	a0 e8       	ldi	r26, 0x80	; 128
     dca:	bf e3       	ldi	r27, 0x3F	; 63
     dcc:	80 83       	st	Z, r24
     dce:	91 83       	std	Z+1, r25	; 0x01
     dd0:	a2 83       	std	Z+2, r26	; 0x02
     dd2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     dd4:	8e 01       	movw	r16, r28
     dd6:	01 5c       	subi	r16, 0xC1	; 193
     dd8:	1f 4f       	sbci	r17, 0xFF	; 255
     dda:	fe 01       	movw	r30, r28
     ddc:	ed 5b       	subi	r30, 0xBD	; 189
     dde:	ff 4f       	sbci	r31, 0xFF	; 255
     de0:	60 81       	ld	r22, Z
     de2:	71 81       	ldd	r23, Z+1	; 0x01
     de4:	82 81       	ldd	r24, Z+2	; 0x02
     de6:	93 81       	ldd	r25, Z+3	; 0x03
     de8:	20 e0       	ldi	r18, 0x00	; 0
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	4a e7       	ldi	r20, 0x7A	; 122
     dee:	55 e4       	ldi	r21, 0x45	; 69
     df0:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     df4:	dc 01       	movw	r26, r24
     df6:	cb 01       	movw	r24, r22
     df8:	f8 01       	movw	r30, r16
     dfa:	80 83       	st	Z, r24
     dfc:	91 83       	std	Z+1, r25	; 0x01
     dfe:	a2 83       	std	Z+2, r26	; 0x02
     e00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e02:	fe 01       	movw	r30, r28
     e04:	ff 96       	adiw	r30, 0x3f	; 63
     e06:	60 81       	ld	r22, Z
     e08:	71 81       	ldd	r23, Z+1	; 0x01
     e0a:	82 81       	ldd	r24, Z+2	; 0x02
     e0c:	93 81       	ldd	r25, Z+3	; 0x03
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e8       	ldi	r20, 0x80	; 128
     e14:	5f e3       	ldi	r21, 0x3F	; 63
     e16:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     e1a:	88 23       	and	r24, r24
     e1c:	2c f4       	brge	.+10     	; 0xe28 <LCD_displayCharacter+0x52a>
		__ticks = 1;
     e1e:	81 e0       	ldi	r24, 0x01	; 1
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	9e af       	std	Y+62, r25	; 0x3e
     e24:	8d af       	std	Y+61, r24	; 0x3d
     e26:	46 c0       	rjmp	.+140    	; 0xeb4 <LCD_displayCharacter+0x5b6>
	else if (__tmp > 65535)
     e28:	fe 01       	movw	r30, r28
     e2a:	ff 96       	adiw	r30, 0x3f	; 63
     e2c:	60 81       	ld	r22, Z
     e2e:	71 81       	ldd	r23, Z+1	; 0x01
     e30:	82 81       	ldd	r24, Z+2	; 0x02
     e32:	93 81       	ldd	r25, Z+3	; 0x03
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	3f ef       	ldi	r19, 0xFF	; 255
     e38:	4f e7       	ldi	r20, 0x7F	; 127
     e3a:	57 e4       	ldi	r21, 0x47	; 71
     e3c:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     e40:	18 16       	cp	r1, r24
     e42:	64 f5       	brge	.+88     	; 0xe9c <LCD_displayCharacter+0x59e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e44:	fe 01       	movw	r30, r28
     e46:	ed 5b       	subi	r30, 0xBD	; 189
     e48:	ff 4f       	sbci	r31, 0xFF	; 255
     e4a:	60 81       	ld	r22, Z
     e4c:	71 81       	ldd	r23, Z+1	; 0x01
     e4e:	82 81       	ldd	r24, Z+2	; 0x02
     e50:	93 81       	ldd	r25, Z+3	; 0x03
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	40 e2       	ldi	r20, 0x20	; 32
     e58:	51 e4       	ldi	r21, 0x41	; 65
     e5a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     e5e:	dc 01       	movw	r26, r24
     e60:	cb 01       	movw	r24, r22
     e62:	bc 01       	movw	r22, r24
     e64:	cd 01       	movw	r24, r26
     e66:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     e6a:	dc 01       	movw	r26, r24
     e6c:	cb 01       	movw	r24, r22
     e6e:	9e af       	std	Y+62, r25	; 0x3e
     e70:	8d af       	std	Y+61, r24	; 0x3d
     e72:	0f c0       	rjmp	.+30     	; 0xe92 <LCD_displayCharacter+0x594>
     e74:	80 e9       	ldi	r24, 0x90	; 144
     e76:	91 e0       	ldi	r25, 0x01	; 1
     e78:	9c af       	std	Y+60, r25	; 0x3c
     e7a:	8b af       	std	Y+59, r24	; 0x3b
     e7c:	8b ad       	ldd	r24, Y+59	; 0x3b
     e7e:	9c ad       	ldd	r25, Y+60	; 0x3c
     e80:	01 97       	sbiw	r24, 0x01	; 1
     e82:	f1 f7       	brne	.-4      	; 0xe80 <LCD_displayCharacter+0x582>
     e84:	9c af       	std	Y+60, r25	; 0x3c
     e86:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e88:	8d ad       	ldd	r24, Y+61	; 0x3d
     e8a:	9e ad       	ldd	r25, Y+62	; 0x3e
     e8c:	01 97       	sbiw	r24, 0x01	; 1
     e8e:	9e af       	std	Y+62, r25	; 0x3e
     e90:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e92:	8d ad       	ldd	r24, Y+61	; 0x3d
     e94:	9e ad       	ldd	r25, Y+62	; 0x3e
     e96:	00 97       	sbiw	r24, 0x00	; 0
     e98:	69 f7       	brne	.-38     	; 0xe74 <LCD_displayCharacter+0x576>
     e9a:	16 c0       	rjmp	.+44     	; 0xec8 <LCD_displayCharacter+0x5ca>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e9c:	fe 01       	movw	r30, r28
     e9e:	ff 96       	adiw	r30, 0x3f	; 63
     ea0:	60 81       	ld	r22, Z
     ea2:	71 81       	ldd	r23, Z+1	; 0x01
     ea4:	82 81       	ldd	r24, Z+2	; 0x02
     ea6:	93 81       	ldd	r25, Z+3	; 0x03
     ea8:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     eac:	dc 01       	movw	r26, r24
     eae:	cb 01       	movw	r24, r22
     eb0:	9e af       	std	Y+62, r25	; 0x3e
     eb2:	8d af       	std	Y+61, r24	; 0x3d
     eb4:	8d ad       	ldd	r24, Y+61	; 0x3d
     eb6:	9e ad       	ldd	r25, Y+62	; 0x3e
     eb8:	9a af       	std	Y+58, r25	; 0x3a
     eba:	89 af       	std	Y+57, r24	; 0x39
     ebc:	89 ad       	ldd	r24, Y+57	; 0x39
     ebe:	9a ad       	ldd	r25, Y+58	; 0x3a
     ec0:	01 97       	sbiw	r24, 0x01	; 1
     ec2:	f1 f7       	brne	.-4      	; 0xec0 <LCD_displayCharacter+0x5c2>
     ec4:	9a af       	std	Y+58, r25	; 0x3a
     ec6:	89 af       	std	Y+57, r24	; 0x39
     ec8:	80 e0       	ldi	r24, 0x00	; 0
     eca:	90 e0       	ldi	r25, 0x00	; 0
     ecc:	a0 e8       	ldi	r26, 0x80	; 128
     ece:	bf e3       	ldi	r27, 0x3F	; 63
     ed0:	8d ab       	std	Y+53, r24	; 0x35
     ed2:	9e ab       	std	Y+54, r25	; 0x36
     ed4:	af ab       	std	Y+55, r26	; 0x37
     ed6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ed8:	6d a9       	ldd	r22, Y+53	; 0x35
     eda:	7e a9       	ldd	r23, Y+54	; 0x36
     edc:	8f a9       	ldd	r24, Y+55	; 0x37
     ede:	98 ad       	ldd	r25, Y+56	; 0x38
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	4a e7       	ldi	r20, 0x7A	; 122
     ee6:	55 e4       	ldi	r21, 0x45	; 69
     ee8:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     eec:	dc 01       	movw	r26, r24
     eee:	cb 01       	movw	r24, r22
     ef0:	89 ab       	std	Y+49, r24	; 0x31
     ef2:	9a ab       	std	Y+50, r25	; 0x32
     ef4:	ab ab       	std	Y+51, r26	; 0x33
     ef6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     ef8:	69 a9       	ldd	r22, Y+49	; 0x31
     efa:	7a a9       	ldd	r23, Y+50	; 0x32
     efc:	8b a9       	ldd	r24, Y+51	; 0x33
     efe:	9c a9       	ldd	r25, Y+52	; 0x34
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	40 e8       	ldi	r20, 0x80	; 128
     f06:	5f e3       	ldi	r21, 0x3F	; 63
     f08:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     f0c:	88 23       	and	r24, r24
     f0e:	2c f4       	brge	.+10     	; 0xf1a <LCD_displayCharacter+0x61c>
		__ticks = 1;
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	98 ab       	std	Y+48, r25	; 0x30
     f16:	8f a7       	std	Y+47, r24	; 0x2f
     f18:	3f c0       	rjmp	.+126    	; 0xf98 <LCD_displayCharacter+0x69a>
	else if (__tmp > 65535)
     f1a:	69 a9       	ldd	r22, Y+49	; 0x31
     f1c:	7a a9       	ldd	r23, Y+50	; 0x32
     f1e:	8b a9       	ldd	r24, Y+51	; 0x33
     f20:	9c a9       	ldd	r25, Y+52	; 0x34
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	3f ef       	ldi	r19, 0xFF	; 255
     f26:	4f e7       	ldi	r20, 0x7F	; 127
     f28:	57 e4       	ldi	r21, 0x47	; 71
     f2a:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
     f2e:	18 16       	cp	r1, r24
     f30:	4c f5       	brge	.+82     	; 0xf84 <LCD_displayCharacter+0x686>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f32:	6d a9       	ldd	r22, Y+53	; 0x35
     f34:	7e a9       	ldd	r23, Y+54	; 0x36
     f36:	8f a9       	ldd	r24, Y+55	; 0x37
     f38:	98 ad       	ldd	r25, Y+56	; 0x38
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	40 e2       	ldi	r20, 0x20	; 32
     f40:	51 e4       	ldi	r21, 0x41	; 65
     f42:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     f46:	dc 01       	movw	r26, r24
     f48:	cb 01       	movw	r24, r22
     f4a:	bc 01       	movw	r22, r24
     f4c:	cd 01       	movw	r24, r26
     f4e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     f52:	dc 01       	movw	r26, r24
     f54:	cb 01       	movw	r24, r22
     f56:	98 ab       	std	Y+48, r25	; 0x30
     f58:	8f a7       	std	Y+47, r24	; 0x2f
     f5a:	0f c0       	rjmp	.+30     	; 0xf7a <LCD_displayCharacter+0x67c>
     f5c:	80 e9       	ldi	r24, 0x90	; 144
     f5e:	91 e0       	ldi	r25, 0x01	; 1
     f60:	9e a7       	std	Y+46, r25	; 0x2e
     f62:	8d a7       	std	Y+45, r24	; 0x2d
     f64:	8d a5       	ldd	r24, Y+45	; 0x2d
     f66:	9e a5       	ldd	r25, Y+46	; 0x2e
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	f1 f7       	brne	.-4      	; 0xf68 <LCD_displayCharacter+0x66a>
     f6c:	9e a7       	std	Y+46, r25	; 0x2e
     f6e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f70:	8f a5       	ldd	r24, Y+47	; 0x2f
     f72:	98 a9       	ldd	r25, Y+48	; 0x30
     f74:	01 97       	sbiw	r24, 0x01	; 1
     f76:	98 ab       	std	Y+48, r25	; 0x30
     f78:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f7a:	8f a5       	ldd	r24, Y+47	; 0x2f
     f7c:	98 a9       	ldd	r25, Y+48	; 0x30
     f7e:	00 97       	sbiw	r24, 0x00	; 0
     f80:	69 f7       	brne	.-38     	; 0xf5c <LCD_displayCharacter+0x65e>
     f82:	14 c0       	rjmp	.+40     	; 0xfac <LCD_displayCharacter+0x6ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f84:	69 a9       	ldd	r22, Y+49	; 0x31
     f86:	7a a9       	ldd	r23, Y+50	; 0x32
     f88:	8b a9       	ldd	r24, Y+51	; 0x33
     f8a:	9c a9       	ldd	r25, Y+52	; 0x34
     f8c:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
     f90:	dc 01       	movw	r26, r24
     f92:	cb 01       	movw	r24, r22
     f94:	98 ab       	std	Y+48, r25	; 0x30
     f96:	8f a7       	std	Y+47, r24	; 0x2f
     f98:	8f a5       	ldd	r24, Y+47	; 0x2f
     f9a:	98 a9       	ldd	r25, Y+48	; 0x30
     f9c:	9c a7       	std	Y+44, r25	; 0x2c
     f9e:	8b a7       	std	Y+43, r24	; 0x2b
     fa0:	8b a5       	ldd	r24, Y+43	; 0x2b
     fa2:	9c a5       	ldd	r25, Y+44	; 0x2c
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	f1 f7       	brne	.-4      	; 0xfa4 <LCD_displayCharacter+0x6a6>
     fa8:	9c a7       	std	Y+44, r25	; 0x2c
     faa:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */

    _delay_ms(1); /* delay for processing Tas = 50ns */
	SET_BIT(LCD_CTRL_PORT,E); /* Enable LCD E=1 */
     fac:	a8 e3       	ldi	r26, 0x38	; 56
     fae:	b0 e0       	ldi	r27, 0x00	; 0
     fb0:	e8 e3       	ldi	r30, 0x38	; 56
     fb2:	f0 e0       	ldi	r31, 0x00	; 0
     fb4:	80 81       	ld	r24, Z
     fb6:	88 60       	ori	r24, 0x08	; 8
     fb8:	8c 93       	st	X, r24
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	a0 e8       	ldi	r26, 0x80	; 128
     fc0:	bf e3       	ldi	r27, 0x3F	; 63
     fc2:	8f a3       	std	Y+39, r24	; 0x27
     fc4:	98 a7       	std	Y+40, r25	; 0x28
     fc6:	a9 a7       	std	Y+41, r26	; 0x29
     fc8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fca:	6f a1       	ldd	r22, Y+39	; 0x27
     fcc:	78 a5       	ldd	r23, Y+40	; 0x28
     fce:	89 a5       	ldd	r24, Y+41	; 0x29
     fd0:	9a a5       	ldd	r25, Y+42	; 0x2a
     fd2:	20 e0       	ldi	r18, 0x00	; 0
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	4a e7       	ldi	r20, 0x7A	; 122
     fd8:	55 e4       	ldi	r21, 0x45	; 69
     fda:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
     fde:	dc 01       	movw	r26, r24
     fe0:	cb 01       	movw	r24, r22
     fe2:	8b a3       	std	Y+35, r24	; 0x23
     fe4:	9c a3       	std	Y+36, r25	; 0x24
     fe6:	ad a3       	std	Y+37, r26	; 0x25
     fe8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     fea:	6b a1       	ldd	r22, Y+35	; 0x23
     fec:	7c a1       	ldd	r23, Y+36	; 0x24
     fee:	8d a1       	ldd	r24, Y+37	; 0x25
     ff0:	9e a1       	ldd	r25, Y+38	; 0x26
     ff2:	20 e0       	ldi	r18, 0x00	; 0
     ff4:	30 e0       	ldi	r19, 0x00	; 0
     ff6:	40 e8       	ldi	r20, 0x80	; 128
     ff8:	5f e3       	ldi	r21, 0x3F	; 63
     ffa:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
     ffe:	88 23       	and	r24, r24
    1000:	2c f4       	brge	.+10     	; 0x100c <LCD_displayCharacter+0x70e>
		__ticks = 1;
    1002:	81 e0       	ldi	r24, 0x01	; 1
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	9a a3       	std	Y+34, r25	; 0x22
    1008:	89 a3       	std	Y+33, r24	; 0x21
    100a:	3f c0       	rjmp	.+126    	; 0x108a <LCD_displayCharacter+0x78c>
	else if (__tmp > 65535)
    100c:	6b a1       	ldd	r22, Y+35	; 0x23
    100e:	7c a1       	ldd	r23, Y+36	; 0x24
    1010:	8d a1       	ldd	r24, Y+37	; 0x25
    1012:	9e a1       	ldd	r25, Y+38	; 0x26
    1014:	20 e0       	ldi	r18, 0x00	; 0
    1016:	3f ef       	ldi	r19, 0xFF	; 255
    1018:	4f e7       	ldi	r20, 0x7F	; 127
    101a:	57 e4       	ldi	r21, 0x47	; 71
    101c:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1020:	18 16       	cp	r1, r24
    1022:	4c f5       	brge	.+82     	; 0x1076 <LCD_displayCharacter+0x778>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1024:	6f a1       	ldd	r22, Y+39	; 0x27
    1026:	78 a5       	ldd	r23, Y+40	; 0x28
    1028:	89 a5       	ldd	r24, Y+41	; 0x29
    102a:	9a a5       	ldd	r25, Y+42	; 0x2a
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	40 e2       	ldi	r20, 0x20	; 32
    1032:	51 e4       	ldi	r21, 0x41	; 65
    1034:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1038:	dc 01       	movw	r26, r24
    103a:	cb 01       	movw	r24, r22
    103c:	bc 01       	movw	r22, r24
    103e:	cd 01       	movw	r24, r26
    1040:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1044:	dc 01       	movw	r26, r24
    1046:	cb 01       	movw	r24, r22
    1048:	9a a3       	std	Y+34, r25	; 0x22
    104a:	89 a3       	std	Y+33, r24	; 0x21
    104c:	0f c0       	rjmp	.+30     	; 0x106c <LCD_displayCharacter+0x76e>
    104e:	80 e9       	ldi	r24, 0x90	; 144
    1050:	91 e0       	ldi	r25, 0x01	; 1
    1052:	98 a3       	std	Y+32, r25	; 0x20
    1054:	8f 8f       	std	Y+31, r24	; 0x1f
    1056:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1058:	98 a1       	ldd	r25, Y+32	; 0x20
    105a:	01 97       	sbiw	r24, 0x01	; 1
    105c:	f1 f7       	brne	.-4      	; 0x105a <LCD_displayCharacter+0x75c>
    105e:	98 a3       	std	Y+32, r25	; 0x20
    1060:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1062:	89 a1       	ldd	r24, Y+33	; 0x21
    1064:	9a a1       	ldd	r25, Y+34	; 0x22
    1066:	01 97       	sbiw	r24, 0x01	; 1
    1068:	9a a3       	std	Y+34, r25	; 0x22
    106a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    106c:	89 a1       	ldd	r24, Y+33	; 0x21
    106e:	9a a1       	ldd	r25, Y+34	; 0x22
    1070:	00 97       	sbiw	r24, 0x00	; 0
    1072:	69 f7       	brne	.-38     	; 0x104e <LCD_displayCharacter+0x750>
    1074:	14 c0       	rjmp	.+40     	; 0x109e <LCD_displayCharacter+0x7a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1076:	6b a1       	ldd	r22, Y+35	; 0x23
    1078:	7c a1       	ldd	r23, Y+36	; 0x24
    107a:	8d a1       	ldd	r24, Y+37	; 0x25
    107c:	9e a1       	ldd	r25, Y+38	; 0x26
    107e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1082:	dc 01       	movw	r26, r24
    1084:	cb 01       	movw	r24, r22
    1086:	9a a3       	std	Y+34, r25	; 0x22
    1088:	89 a3       	std	Y+33, r24	; 0x21
    108a:	89 a1       	ldd	r24, Y+33	; 0x21
    108c:	9a a1       	ldd	r25, Y+34	; 0x22
    108e:	9e 8f       	std	Y+30, r25	; 0x1e
    1090:	8d 8f       	std	Y+29, r24	; 0x1d
    1092:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1094:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1096:	01 97       	sbiw	r24, 0x01	; 1
    1098:	f1 f7       	brne	.-4      	; 0x1096 <LCD_displayCharacter+0x798>
    109a:	9e 8f       	std	Y+30, r25	; 0x1e
    109c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */
	LCD_DATA_PORT = b; /* out the required data char to the data bus D0 --> D7 */
    109e:	ab e3       	ldi	r26, 0x3B	; 59
    10a0:	b0 e0       	ldi	r27, 0x00	; 0
    10a2:	fe 01       	movw	r30, r28
    10a4:	ef 58       	subi	r30, 0x8F	; 143
    10a6:	ff 4f       	sbci	r31, 0xFF	; 255
    10a8:	80 81       	ld	r24, Z
    10aa:	8c 93       	st	X, r24
    10ac:	80 e0       	ldi	r24, 0x00	; 0
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	a0 e8       	ldi	r26, 0x80	; 128
    10b2:	bf e3       	ldi	r27, 0x3F	; 63
    10b4:	89 8f       	std	Y+25, r24	; 0x19
    10b6:	9a 8f       	std	Y+26, r25	; 0x1a
    10b8:	ab 8f       	std	Y+27, r26	; 0x1b
    10ba:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10bc:	69 8d       	ldd	r22, Y+25	; 0x19
    10be:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10c0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10c2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	4a e7       	ldi	r20, 0x7A	; 122
    10ca:	55 e4       	ldi	r21, 0x45	; 69
    10cc:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    10d0:	dc 01       	movw	r26, r24
    10d2:	cb 01       	movw	r24, r22
    10d4:	8d 8b       	std	Y+21, r24	; 0x15
    10d6:	9e 8b       	std	Y+22, r25	; 0x16
    10d8:	af 8b       	std	Y+23, r26	; 0x17
    10da:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    10dc:	6d 89       	ldd	r22, Y+21	; 0x15
    10de:	7e 89       	ldd	r23, Y+22	; 0x16
    10e0:	8f 89       	ldd	r24, Y+23	; 0x17
    10e2:	98 8d       	ldd	r25, Y+24	; 0x18
    10e4:	20 e0       	ldi	r18, 0x00	; 0
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	40 e8       	ldi	r20, 0x80	; 128
    10ea:	5f e3       	ldi	r21, 0x3F	; 63
    10ec:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    10f0:	88 23       	and	r24, r24
    10f2:	2c f4       	brge	.+10     	; 0x10fe <LCD_displayCharacter+0x800>
		__ticks = 1;
    10f4:	81 e0       	ldi	r24, 0x01	; 1
    10f6:	90 e0       	ldi	r25, 0x00	; 0
    10f8:	9c 8b       	std	Y+20, r25	; 0x14
    10fa:	8b 8b       	std	Y+19, r24	; 0x13
    10fc:	3f c0       	rjmp	.+126    	; 0x117c <LCD_displayCharacter+0x87e>
	else if (__tmp > 65535)
    10fe:	6d 89       	ldd	r22, Y+21	; 0x15
    1100:	7e 89       	ldd	r23, Y+22	; 0x16
    1102:	8f 89       	ldd	r24, Y+23	; 0x17
    1104:	98 8d       	ldd	r25, Y+24	; 0x18
    1106:	20 e0       	ldi	r18, 0x00	; 0
    1108:	3f ef       	ldi	r19, 0xFF	; 255
    110a:	4f e7       	ldi	r20, 0x7F	; 127
    110c:	57 e4       	ldi	r21, 0x47	; 71
    110e:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1112:	18 16       	cp	r1, r24
    1114:	4c f5       	brge	.+82     	; 0x1168 <LCD_displayCharacter+0x86a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1116:	69 8d       	ldd	r22, Y+25	; 0x19
    1118:	7a 8d       	ldd	r23, Y+26	; 0x1a
    111a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    111c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	40 e2       	ldi	r20, 0x20	; 32
    1124:	51 e4       	ldi	r21, 0x41	; 65
    1126:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    112a:	dc 01       	movw	r26, r24
    112c:	cb 01       	movw	r24, r22
    112e:	bc 01       	movw	r22, r24
    1130:	cd 01       	movw	r24, r26
    1132:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1136:	dc 01       	movw	r26, r24
    1138:	cb 01       	movw	r24, r22
    113a:	9c 8b       	std	Y+20, r25	; 0x14
    113c:	8b 8b       	std	Y+19, r24	; 0x13
    113e:	0f c0       	rjmp	.+30     	; 0x115e <LCD_displayCharacter+0x860>
    1140:	80 e9       	ldi	r24, 0x90	; 144
    1142:	91 e0       	ldi	r25, 0x01	; 1
    1144:	9a 8b       	std	Y+18, r25	; 0x12
    1146:	89 8b       	std	Y+17, r24	; 0x11
    1148:	89 89       	ldd	r24, Y+17	; 0x11
    114a:	9a 89       	ldd	r25, Y+18	; 0x12
    114c:	01 97       	sbiw	r24, 0x01	; 1
    114e:	f1 f7       	brne	.-4      	; 0x114c <LCD_displayCharacter+0x84e>
    1150:	9a 8b       	std	Y+18, r25	; 0x12
    1152:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1154:	8b 89       	ldd	r24, Y+19	; 0x13
    1156:	9c 89       	ldd	r25, Y+20	; 0x14
    1158:	01 97       	sbiw	r24, 0x01	; 1
    115a:	9c 8b       	std	Y+20, r25	; 0x14
    115c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    115e:	8b 89       	ldd	r24, Y+19	; 0x13
    1160:	9c 89       	ldd	r25, Y+20	; 0x14
    1162:	00 97       	sbiw	r24, 0x00	; 0
    1164:	69 f7       	brne	.-38     	; 0x1140 <LCD_displayCharacter+0x842>
    1166:	14 c0       	rjmp	.+40     	; 0x1190 <LCD_displayCharacter+0x892>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1168:	6d 89       	ldd	r22, Y+21	; 0x15
    116a:	7e 89       	ldd	r23, Y+22	; 0x16
    116c:	8f 89       	ldd	r24, Y+23	; 0x17
    116e:	98 8d       	ldd	r25, Y+24	; 0x18
    1170:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1174:	dc 01       	movw	r26, r24
    1176:	cb 01       	movw	r24, r22
    1178:	9c 8b       	std	Y+20, r25	; 0x14
    117a:	8b 8b       	std	Y+19, r24	; 0x13
    117c:	8b 89       	ldd	r24, Y+19	; 0x13
    117e:	9c 89       	ldd	r25, Y+20	; 0x14
    1180:	98 8b       	std	Y+16, r25	; 0x10
    1182:	8f 87       	std	Y+15, r24	; 0x0f
    1184:	8f 85       	ldd	r24, Y+15	; 0x0f
    1186:	98 89       	ldd	r25, Y+16	; 0x10
    1188:	01 97       	sbiw	r24, 0x01	; 1
    118a:	f1 f7       	brne	.-4      	; 0x1188 <LCD_displayCharacter+0x88a>
    118c:	98 8b       	std	Y+16, r25	; 0x10
    118e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLEAR_BIT(LCD_CTRL_PORT,E); /* disable LCD E=0 */
    1190:	a8 e3       	ldi	r26, 0x38	; 56
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	e8 e3       	ldi	r30, 0x38	; 56
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	80 81       	ld	r24, Z
    119a:	87 7f       	andi	r24, 0xF7	; 247
    119c:	8c 93       	st	X, r24
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	a0 e8       	ldi	r26, 0x80	; 128
    11a4:	bf e3       	ldi	r27, 0x3F	; 63
    11a6:	8b 87       	std	Y+11, r24	; 0x0b
    11a8:	9c 87       	std	Y+12, r25	; 0x0c
    11aa:	ad 87       	std	Y+13, r26	; 0x0d
    11ac:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    11b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    11b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    11b6:	20 e0       	ldi	r18, 0x00	; 0
    11b8:	30 e0       	ldi	r19, 0x00	; 0
    11ba:	4a e7       	ldi	r20, 0x7A	; 122
    11bc:	55 e4       	ldi	r21, 0x45	; 69
    11be:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    11c2:	dc 01       	movw	r26, r24
    11c4:	cb 01       	movw	r24, r22
    11c6:	8f 83       	std	Y+7, r24	; 0x07
    11c8:	98 87       	std	Y+8, r25	; 0x08
    11ca:	a9 87       	std	Y+9, r26	; 0x09
    11cc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    11ce:	6f 81       	ldd	r22, Y+7	; 0x07
    11d0:	78 85       	ldd	r23, Y+8	; 0x08
    11d2:	89 85       	ldd	r24, Y+9	; 0x09
    11d4:	9a 85       	ldd	r25, Y+10	; 0x0a
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	40 e8       	ldi	r20, 0x80	; 128
    11dc:	5f e3       	ldi	r21, 0x3F	; 63
    11de:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    11e2:	88 23       	and	r24, r24
    11e4:	2c f4       	brge	.+10     	; 0x11f0 <LCD_displayCharacter+0x8f2>
		__ticks = 1;
    11e6:	81 e0       	ldi	r24, 0x01	; 1
    11e8:	90 e0       	ldi	r25, 0x00	; 0
    11ea:	9e 83       	std	Y+6, r25	; 0x06
    11ec:	8d 83       	std	Y+5, r24	; 0x05
    11ee:	3f c0       	rjmp	.+126    	; 0x126e <LCD_displayCharacter+0x970>
	else if (__tmp > 65535)
    11f0:	6f 81       	ldd	r22, Y+7	; 0x07
    11f2:	78 85       	ldd	r23, Y+8	; 0x08
    11f4:	89 85       	ldd	r24, Y+9	; 0x09
    11f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	3f ef       	ldi	r19, 0xFF	; 255
    11fc:	4f e7       	ldi	r20, 0x7F	; 127
    11fe:	57 e4       	ldi	r21, 0x47	; 71
    1200:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1204:	18 16       	cp	r1, r24
    1206:	4c f5       	brge	.+82     	; 0x125a <LCD_displayCharacter+0x95c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1208:	6b 85       	ldd	r22, Y+11	; 0x0b
    120a:	7c 85       	ldd	r23, Y+12	; 0x0c
    120c:	8d 85       	ldd	r24, Y+13	; 0x0d
    120e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	30 e0       	ldi	r19, 0x00	; 0
    1214:	40 e2       	ldi	r20, 0x20	; 32
    1216:	51 e4       	ldi	r21, 0x41	; 65
    1218:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    121c:	dc 01       	movw	r26, r24
    121e:	cb 01       	movw	r24, r22
    1220:	bc 01       	movw	r22, r24
    1222:	cd 01       	movw	r24, r26
    1224:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1228:	dc 01       	movw	r26, r24
    122a:	cb 01       	movw	r24, r22
    122c:	9e 83       	std	Y+6, r25	; 0x06
    122e:	8d 83       	std	Y+5, r24	; 0x05
    1230:	0f c0       	rjmp	.+30     	; 0x1250 <LCD_displayCharacter+0x952>
    1232:	80 e9       	ldi	r24, 0x90	; 144
    1234:	91 e0       	ldi	r25, 0x01	; 1
    1236:	9c 83       	std	Y+4, r25	; 0x04
    1238:	8b 83       	std	Y+3, r24	; 0x03
    123a:	8b 81       	ldd	r24, Y+3	; 0x03
    123c:	9c 81       	ldd	r25, Y+4	; 0x04
    123e:	01 97       	sbiw	r24, 0x01	; 1
    1240:	f1 f7       	brne	.-4      	; 0x123e <LCD_displayCharacter+0x940>
    1242:	9c 83       	std	Y+4, r25	; 0x04
    1244:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1246:	8d 81       	ldd	r24, Y+5	; 0x05
    1248:	9e 81       	ldd	r25, Y+6	; 0x06
    124a:	01 97       	sbiw	r24, 0x01	; 1
    124c:	9e 83       	std	Y+6, r25	; 0x06
    124e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1250:	8d 81       	ldd	r24, Y+5	; 0x05
    1252:	9e 81       	ldd	r25, Y+6	; 0x06
    1254:	00 97       	sbiw	r24, 0x00	; 0
    1256:	69 f7       	brne	.-38     	; 0x1232 <LCD_displayCharacter+0x934>
    1258:	14 c0       	rjmp	.+40     	; 0x1282 <LCD_displayCharacter+0x984>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    125a:	6f 81       	ldd	r22, Y+7	; 0x07
    125c:	78 85       	ldd	r23, Y+8	; 0x08
    125e:	89 85       	ldd	r24, Y+9	; 0x09
    1260:	9a 85       	ldd	r25, Y+10	; 0x0a
    1262:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1266:	dc 01       	movw	r26, r24
    1268:	cb 01       	movw	r24, r22
    126a:	9e 83       	std	Y+6, r25	; 0x06
    126c:	8d 83       	std	Y+5, r24	; 0x05
    126e:	8d 81       	ldd	r24, Y+5	; 0x05
    1270:	9e 81       	ldd	r25, Y+6	; 0x06
    1272:	9a 83       	std	Y+2, r25	; 0x02
    1274:	89 83       	std	Y+1, r24	; 0x01
    1276:	89 81       	ldd	r24, Y+1	; 0x01
    1278:	9a 81       	ldd	r25, Y+2	; 0x02
    127a:	01 97       	sbiw	r24, 0x01	; 1
    127c:	f1 f7       	brne	.-4      	; 0x127a <LCD_displayCharacter+0x97c>
    127e:	9a 83       	std	Y+2, r25	; 0x02
    1280:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* delay for processing Th = 13ns */
}
    1282:	cd 58       	subi	r28, 0x8D	; 141
    1284:	df 4f       	sbci	r29, 0xFF	; 255
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	de bf       	out	0x3e, r29	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	cd bf       	out	0x3d, r28	; 61
    1290:	cf 91       	pop	r28
    1292:	df 91       	pop	r29
    1294:	1f 91       	pop	r17
    1296:	0f 91       	pop	r16
    1298:	08 95       	ret

0000129a <LCD_displayString>:

void LCD_displayString(const char *Str)
{
    129a:	df 93       	push	r29
    129c:	cf 93       	push	r28
    129e:	00 d0       	rcall	.+0      	; 0x12a0 <LCD_displayString+0x6>
    12a0:	0f 92       	push	r0
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	9b 83       	std	Y+3, r25	; 0x03
    12a8:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i = 0;
    12aa:	19 82       	std	Y+1, r1	; 0x01
    12ac:	0e c0       	rjmp	.+28     	; 0x12ca <LCD_displayString+0x30>
	while(Str[i] != '\0')
	{
		LCD_displayCharacter(Str[i]);
    12ae:	89 81       	ldd	r24, Y+1	; 0x01
    12b0:	28 2f       	mov	r18, r24
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	8a 81       	ldd	r24, Y+2	; 0x02
    12b6:	9b 81       	ldd	r25, Y+3	; 0x03
    12b8:	fc 01       	movw	r30, r24
    12ba:	e2 0f       	add	r30, r18
    12bc:	f3 1f       	adc	r31, r19
    12be:	80 81       	ld	r24, Z
    12c0:	0e 94 7f 04 	call	0x8fe	; 0x8fe <LCD_displayCharacter>
		i++;
    12c4:	89 81       	ldd	r24, Y+1	; 0x01
    12c6:	8f 5f       	subi	r24, 0xFF	; 255
    12c8:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_displayString(const char *Str)
{
	uint8 i = 0;
	while(Str[i] != '\0')
    12ca:	89 81       	ldd	r24, Y+1	; 0x01
    12cc:	28 2f       	mov	r18, r24
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	8a 81       	ldd	r24, Y+2	; 0x02
    12d2:	9b 81       	ldd	r25, Y+3	; 0x03
    12d4:	fc 01       	movw	r30, r24
    12d6:	e2 0f       	add	r30, r18
    12d8:	f3 1f       	adc	r31, r19
    12da:	80 81       	ld	r24, Z
    12dc:	88 23       	and	r24, r24
    12de:	39 f7       	brne	.-50     	; 0x12ae <LCD_displayString+0x14>
	{
		LCD_displayCharacter(*Str);
		Str++;
	}
	*********************************************************/
}
    12e0:	0f 90       	pop	r0
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	cf 91       	pop	r28
    12e8:	df 91       	pop	r29
    12ea:	08 95       	ret

000012ec <LCD_goToRowColumn>:

void LCD_goToRowColumn(uint8 row,uint8 col)
{
    12ec:	df 93       	push	r29
    12ee:	cf 93       	push	r28
    12f0:	00 d0       	rcall	.+0      	; 0x12f2 <LCD_goToRowColumn+0x6>
    12f2:	00 d0       	rcall	.+0      	; 0x12f4 <LCD_goToRowColumn+0x8>
    12f4:	0f 92       	push	r0
    12f6:	cd b7       	in	r28, 0x3d	; 61
    12f8:	de b7       	in	r29, 0x3e	; 62
    12fa:	8a 83       	std	Y+2, r24	; 0x02
    12fc:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Address;

	/* first of all calculate the required address */
	switch(row)
    12fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1300:	28 2f       	mov	r18, r24
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	3d 83       	std	Y+5, r19	; 0x05
    1306:	2c 83       	std	Y+4, r18	; 0x04
    1308:	8c 81       	ldd	r24, Y+4	; 0x04
    130a:	9d 81       	ldd	r25, Y+5	; 0x05
    130c:	81 30       	cpi	r24, 0x01	; 1
    130e:	91 05       	cpc	r25, r1
    1310:	c1 f0       	breq	.+48     	; 0x1342 <LCD_goToRowColumn+0x56>
    1312:	2c 81       	ldd	r18, Y+4	; 0x04
    1314:	3d 81       	ldd	r19, Y+5	; 0x05
    1316:	22 30       	cpi	r18, 0x02	; 2
    1318:	31 05       	cpc	r19, r1
    131a:	2c f4       	brge	.+10     	; 0x1326 <LCD_goToRowColumn+0x3a>
    131c:	8c 81       	ldd	r24, Y+4	; 0x04
    131e:	9d 81       	ldd	r25, Y+5	; 0x05
    1320:	00 97       	sbiw	r24, 0x00	; 0
    1322:	61 f0       	breq	.+24     	; 0x133c <LCD_goToRowColumn+0x50>
    1324:	19 c0       	rjmp	.+50     	; 0x1358 <LCD_goToRowColumn+0x6c>
    1326:	2c 81       	ldd	r18, Y+4	; 0x04
    1328:	3d 81       	ldd	r19, Y+5	; 0x05
    132a:	22 30       	cpi	r18, 0x02	; 2
    132c:	31 05       	cpc	r19, r1
    132e:	69 f0       	breq	.+26     	; 0x134a <LCD_goToRowColumn+0x5e>
    1330:	8c 81       	ldd	r24, Y+4	; 0x04
    1332:	9d 81       	ldd	r25, Y+5	; 0x05
    1334:	83 30       	cpi	r24, 0x03	; 3
    1336:	91 05       	cpc	r25, r1
    1338:	61 f0       	breq	.+24     	; 0x1352 <LCD_goToRowColumn+0x66>
    133a:	0e c0       	rjmp	.+28     	; 0x1358 <LCD_goToRowColumn+0x6c>
	{
		case 0:
				Address=col;
    133c:	8b 81       	ldd	r24, Y+3	; 0x03
    133e:	89 83       	std	Y+1, r24	; 0x01
    1340:	0b c0       	rjmp	.+22     	; 0x1358 <LCD_goToRowColumn+0x6c>
				break;
		case 1:
				Address=col+0x40;
    1342:	8b 81       	ldd	r24, Y+3	; 0x03
    1344:	80 5c       	subi	r24, 0xC0	; 192
    1346:	89 83       	std	Y+1, r24	; 0x01
    1348:	07 c0       	rjmp	.+14     	; 0x1358 <LCD_goToRowColumn+0x6c>
				break;
		case 2:
				Address=col+0x10;
    134a:	8b 81       	ldd	r24, Y+3	; 0x03
    134c:	80 5f       	subi	r24, 0xF0	; 240
    134e:	89 83       	std	Y+1, r24	; 0x01
    1350:	03 c0       	rjmp	.+6      	; 0x1358 <LCD_goToRowColumn+0x6c>
				break;
		case 3:
				Address=col+0x50;
    1352:	8b 81       	ldd	r24, Y+3	; 0x03
    1354:	80 5b       	subi	r24, 0xB0	; 176
    1356:	89 83       	std	Y+1, r24	; 0x01
				break;
	}
	/* to write to a specific address in the LCD
	 * we need to apply the corresponding command 0b10000000+Address */
	LCD_sendCommand(Address | SET_CURSOR_LOCATION);
    1358:	89 81       	ldd	r24, Y+1	; 0x01
    135a:	80 68       	ori	r24, 0x80	; 128
    135c:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_sendCommand>
}
    1360:	0f 90       	pop	r0
    1362:	0f 90       	pop	r0
    1364:	0f 90       	pop	r0
    1366:	0f 90       	pop	r0
    1368:	0f 90       	pop	r0
    136a:	cf 91       	pop	r28
    136c:	df 91       	pop	r29
    136e:	08 95       	ret

00001370 <LCD_displayStringRowColumn>:

void LCD_displayStringRowColumn(uint8 row,uint8 col,const char *Str)
{
    1370:	df 93       	push	r29
    1372:	cf 93       	push	r28
    1374:	00 d0       	rcall	.+0      	; 0x1376 <LCD_displayStringRowColumn+0x6>
    1376:	00 d0       	rcall	.+0      	; 0x1378 <LCD_displayStringRowColumn+0x8>
    1378:	cd b7       	in	r28, 0x3d	; 61
    137a:	de b7       	in	r29, 0x3e	; 62
    137c:	89 83       	std	Y+1, r24	; 0x01
    137e:	6a 83       	std	Y+2, r22	; 0x02
    1380:	5c 83       	std	Y+4, r21	; 0x04
    1382:	4b 83       	std	Y+3, r20	; 0x03
	LCD_goToRowColumn(row,col); /* go to to the required LCD position */
    1384:	89 81       	ldd	r24, Y+1	; 0x01
    1386:	6a 81       	ldd	r22, Y+2	; 0x02
    1388:	0e 94 76 09 	call	0x12ec	; 0x12ec <LCD_goToRowColumn>
	LCD_displayString(Str); /* display the string */
    138c:	8b 81       	ldd	r24, Y+3	; 0x03
    138e:	9c 81       	ldd	r25, Y+4	; 0x04
    1390:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_displayString>
}
    1394:	0f 90       	pop	r0
    1396:	0f 90       	pop	r0
    1398:	0f 90       	pop	r0
    139a:	0f 90       	pop	r0
    139c:	cf 91       	pop	r28
    139e:	df 91       	pop	r29
    13a0:	08 95       	ret

000013a2 <LCD_intgerToString>:

void LCD_intgerToString(int data)
{
    13a2:	df 93       	push	r29
    13a4:	cf 93       	push	r28
    13a6:	cd b7       	in	r28, 0x3d	; 61
    13a8:	de b7       	in	r29, 0x3e	; 62
    13aa:	62 97       	sbiw	r28, 0x12	; 18
    13ac:	0f b6       	in	r0, 0x3f	; 63
    13ae:	f8 94       	cli
    13b0:	de bf       	out	0x3e, r29	; 62
    13b2:	0f be       	out	0x3f, r0	; 63
    13b4:	cd bf       	out	0x3d, r28	; 61
    13b6:	9a 8b       	std	Y+18, r25	; 0x12
    13b8:	89 8b       	std	Y+17, r24	; 0x11
   char buff[16]; /* String to hold the ascii result */
   itoa(data,buff,10); /* 10 for decimal */
    13ba:	89 89       	ldd	r24, Y+17	; 0x11
    13bc:	9a 89       	ldd	r25, Y+18	; 0x12
    13be:	9e 01       	movw	r18, r28
    13c0:	2f 5f       	subi	r18, 0xFF	; 255
    13c2:	3f 4f       	sbci	r19, 0xFF	; 255
    13c4:	b9 01       	movw	r22, r18
    13c6:	4a e0       	ldi	r20, 0x0A	; 10
    13c8:	50 e0       	ldi	r21, 0x00	; 0
    13ca:	0e 94 be 19 	call	0x337c	; 0x337c <itoa>
   LCD_displayString(buff);
    13ce:	ce 01       	movw	r24, r28
    13d0:	01 96       	adiw	r24, 0x01	; 1
    13d2:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_displayString>
}
    13d6:	62 96       	adiw	r28, 0x12	; 18
    13d8:	0f b6       	in	r0, 0x3f	; 63
    13da:	f8 94       	cli
    13dc:	de bf       	out	0x3e, r29	; 62
    13de:	0f be       	out	0x3f, r0	; 63
    13e0:	cd bf       	out	0x3d, r28	; 61
    13e2:	cf 91       	pop	r28
    13e4:	df 91       	pop	r29
    13e6:	08 95       	ret

000013e8 <LCD_clearScreen>:

void LCD_clearScreen(void)
{
    13e8:	df 93       	push	r29
    13ea:	cf 93       	push	r28
    13ec:	cd b7       	in	r28, 0x3d	; 61
    13ee:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(CLEAR_COMMAND); //clear display
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	0e 94 64 00 	call	0xc8	; 0xc8 <LCD_sendCommand>
}
    13f6:	cf 91       	pop	r28
    13f8:	df 91       	pop	r29
    13fa:	08 95       	ret

000013fc <main>:
unsigned char pass= 0;
unsigned char counts = '1';
unsigned char data = '9';

int main(void)
{
    13fc:	0f 93       	push	r16
    13fe:	1f 93       	push	r17
    1400:	df 93       	push	r29
    1402:	cf 93       	push	r28
    1404:	cd b7       	in	r28, 0x3d	; 61
    1406:	de b7       	in	r29, 0x3e	; 62
    1408:	c4 5c       	subi	r28, 0xC4	; 196
    140a:	d0 40       	sbci	r29, 0x00	; 0
    140c:	0f b6       	in	r0, 0x3f	; 63
    140e:	f8 94       	cli
    1410:	de bf       	out	0x3e, r29	; 62
    1412:	0f be       	out	0x3f, r0	; 63
    1414:	cd bf       	out	0x3d, r28	; 61
    1416:	fe 01       	movw	r30, r28
    1418:	ef 53       	subi	r30, 0x3F	; 63
    141a:	ff 4f       	sbci	r31, 0xFF	; 255
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	a0 ef       	ldi	r26, 0xF0	; 240
    1422:	b1 e4       	ldi	r27, 0x41	; 65
    1424:	80 83       	st	Z, r24
    1426:	91 83       	std	Z+1, r25	; 0x01
    1428:	a2 83       	std	Z+2, r26	; 0x02
    142a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    142c:	8e 01       	movw	r16, r28
    142e:	03 54       	subi	r16, 0x43	; 67
    1430:	1f 4f       	sbci	r17, 0xFF	; 255
    1432:	fe 01       	movw	r30, r28
    1434:	ef 53       	subi	r30, 0x3F	; 63
    1436:	ff 4f       	sbci	r31, 0xFF	; 255
    1438:	60 81       	ld	r22, Z
    143a:	71 81       	ldd	r23, Z+1	; 0x01
    143c:	82 81       	ldd	r24, Z+2	; 0x02
    143e:	93 81       	ldd	r25, Z+3	; 0x03
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	4a e7       	ldi	r20, 0x7A	; 122
    1446:	53 e4       	ldi	r21, 0x43	; 67
    1448:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    144c:	dc 01       	movw	r26, r24
    144e:	cb 01       	movw	r24, r22
    1450:	f8 01       	movw	r30, r16
    1452:	80 83       	st	Z, r24
    1454:	91 83       	std	Z+1, r25	; 0x01
    1456:	a2 83       	std	Z+2, r26	; 0x02
    1458:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    145a:	fe 01       	movw	r30, r28
    145c:	e3 54       	subi	r30, 0x43	; 67
    145e:	ff 4f       	sbci	r31, 0xFF	; 255
    1460:	60 81       	ld	r22, Z
    1462:	71 81       	ldd	r23, Z+1	; 0x01
    1464:	82 81       	ldd	r24, Z+2	; 0x02
    1466:	93 81       	ldd	r25, Z+3	; 0x03
    1468:	20 e0       	ldi	r18, 0x00	; 0
    146a:	30 e0       	ldi	r19, 0x00	; 0
    146c:	40 e8       	ldi	r20, 0x80	; 128
    146e:	5f e3       	ldi	r21, 0x3F	; 63
    1470:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    1474:	88 23       	and	r24, r24
    1476:	44 f4       	brge	.+16     	; 0x1488 <main+0x8c>
		__ticks = 1;
    1478:	fe 01       	movw	r30, r28
    147a:	e5 54       	subi	r30, 0x45	; 69
    147c:	ff 4f       	sbci	r31, 0xFF	; 255
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	91 83       	std	Z+1, r25	; 0x01
    1484:	80 83       	st	Z, r24
    1486:	64 c0       	rjmp	.+200    	; 0x1550 <main+0x154>
	else if (__tmp > 65535)
    1488:	fe 01       	movw	r30, r28
    148a:	e3 54       	subi	r30, 0x43	; 67
    148c:	ff 4f       	sbci	r31, 0xFF	; 255
    148e:	60 81       	ld	r22, Z
    1490:	71 81       	ldd	r23, Z+1	; 0x01
    1492:	82 81       	ldd	r24, Z+2	; 0x02
    1494:	93 81       	ldd	r25, Z+3	; 0x03
    1496:	20 e0       	ldi	r18, 0x00	; 0
    1498:	3f ef       	ldi	r19, 0xFF	; 255
    149a:	4f e7       	ldi	r20, 0x7F	; 127
    149c:	57 e4       	ldi	r21, 0x47	; 71
    149e:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    14a2:	18 16       	cp	r1, r24
    14a4:	0c f0       	brlt	.+2      	; 0x14a8 <main+0xac>
    14a6:	43 c0       	rjmp	.+134    	; 0x152e <main+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14a8:	fe 01       	movw	r30, r28
    14aa:	ef 53       	subi	r30, 0x3F	; 63
    14ac:	ff 4f       	sbci	r31, 0xFF	; 255
    14ae:	60 81       	ld	r22, Z
    14b0:	71 81       	ldd	r23, Z+1	; 0x01
    14b2:	82 81       	ldd	r24, Z+2	; 0x02
    14b4:	93 81       	ldd	r25, Z+3	; 0x03
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	40 e2       	ldi	r20, 0x20	; 32
    14bc:	51 e4       	ldi	r21, 0x41	; 65
    14be:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	8e 01       	movw	r16, r28
    14c8:	05 54       	subi	r16, 0x45	; 69
    14ca:	1f 4f       	sbci	r17, 0xFF	; 255
    14cc:	bc 01       	movw	r22, r24
    14ce:	cd 01       	movw	r24, r26
    14d0:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    14d4:	dc 01       	movw	r26, r24
    14d6:	cb 01       	movw	r24, r22
    14d8:	f8 01       	movw	r30, r16
    14da:	91 83       	std	Z+1, r25	; 0x01
    14dc:	80 83       	st	Z, r24
    14de:	1f c0       	rjmp	.+62     	; 0x151e <main+0x122>
    14e0:	fe 01       	movw	r30, r28
    14e2:	e7 54       	subi	r30, 0x47	; 71
    14e4:	ff 4f       	sbci	r31, 0xFF	; 255
    14e6:	89 e1       	ldi	r24, 0x19	; 25
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	91 83       	std	Z+1, r25	; 0x01
    14ec:	80 83       	st	Z, r24
    14ee:	fe 01       	movw	r30, r28
    14f0:	e7 54       	subi	r30, 0x47	; 71
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	80 81       	ld	r24, Z
    14f6:	91 81       	ldd	r25, Z+1	; 0x01
    14f8:	01 97       	sbiw	r24, 0x01	; 1
    14fa:	f1 f7       	brne	.-4      	; 0x14f8 <main+0xfc>
    14fc:	fe 01       	movw	r30, r28
    14fe:	e7 54       	subi	r30, 0x47	; 71
    1500:	ff 4f       	sbci	r31, 0xFF	; 255
    1502:	91 83       	std	Z+1, r25	; 0x01
    1504:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1506:	de 01       	movw	r26, r28
    1508:	a5 54       	subi	r26, 0x45	; 69
    150a:	bf 4f       	sbci	r27, 0xFF	; 255
    150c:	fe 01       	movw	r30, r28
    150e:	e5 54       	subi	r30, 0x45	; 69
    1510:	ff 4f       	sbci	r31, 0xFF	; 255
    1512:	80 81       	ld	r24, Z
    1514:	91 81       	ldd	r25, Z+1	; 0x01
    1516:	01 97       	sbiw	r24, 0x01	; 1
    1518:	11 96       	adiw	r26, 0x01	; 1
    151a:	9c 93       	st	X, r25
    151c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    151e:	fe 01       	movw	r30, r28
    1520:	e5 54       	subi	r30, 0x45	; 69
    1522:	ff 4f       	sbci	r31, 0xFF	; 255
    1524:	80 81       	ld	r24, Z
    1526:	91 81       	ldd	r25, Z+1	; 0x01
    1528:	00 97       	sbiw	r24, 0x00	; 0
    152a:	d1 f6       	brne	.-76     	; 0x14e0 <main+0xe4>
    152c:	27 c0       	rjmp	.+78     	; 0x157c <main+0x180>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    152e:	8e 01       	movw	r16, r28
    1530:	05 54       	subi	r16, 0x45	; 69
    1532:	1f 4f       	sbci	r17, 0xFF	; 255
    1534:	fe 01       	movw	r30, r28
    1536:	e3 54       	subi	r30, 0x43	; 67
    1538:	ff 4f       	sbci	r31, 0xFF	; 255
    153a:	60 81       	ld	r22, Z
    153c:	71 81       	ldd	r23, Z+1	; 0x01
    153e:	82 81       	ldd	r24, Z+2	; 0x02
    1540:	93 81       	ldd	r25, Z+3	; 0x03
    1542:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	f8 01       	movw	r30, r16
    154c:	91 83       	std	Z+1, r25	; 0x01
    154e:	80 83       	st	Z, r24
    1550:	de 01       	movw	r26, r28
    1552:	a9 54       	subi	r26, 0x49	; 73
    1554:	bf 4f       	sbci	r27, 0xFF	; 255
    1556:	fe 01       	movw	r30, r28
    1558:	e5 54       	subi	r30, 0x45	; 69
    155a:	ff 4f       	sbci	r31, 0xFF	; 255
    155c:	80 81       	ld	r24, Z
    155e:	91 81       	ldd	r25, Z+1	; 0x01
    1560:	8d 93       	st	X+, r24
    1562:	9c 93       	st	X, r25
    1564:	fe 01       	movw	r30, r28
    1566:	e9 54       	subi	r30, 0x49	; 73
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	80 81       	ld	r24, Z
    156c:	91 81       	ldd	r25, Z+1	; 0x01
    156e:	01 97       	sbiw	r24, 0x01	; 1
    1570:	f1 f7       	brne	.-4      	; 0x156e <main+0x172>
    1572:	fe 01       	movw	r30, r28
    1574:	e9 54       	subi	r30, 0x49	; 73
    1576:	ff 4f       	sbci	r31, 0xFF	; 255
    1578:	91 83       	std	Z+1, r25	; 0x01
    157a:	80 83       	st	Z, r24
_delay_ms(30);
LCD_init();
    157c:	0e 94 49 00 	call	0x92	; 0x92 <LCD_init>
i2c_init();
    1580:	0e 94 96 13 	call	0x272c	; 0x272c <i2c_init>

DDRD = 0xFF;
    1584:	e1 e3       	ldi	r30, 0x31	; 49
    1586:	f0 e0       	ldi	r31, 0x00	; 0
    1588:	8f ef       	ldi	r24, 0xFF	; 255
    158a:	80 83       	st	Z, r24
    158c:	fe 01       	movw	r30, r28
    158e:	ed 54       	subi	r30, 0x4D	; 77
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	aa e7       	ldi	r26, 0x7A	; 122
    1598:	b4 e4       	ldi	r27, 0x44	; 68
    159a:	80 83       	st	Z, r24
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	a2 83       	std	Z+2, r26	; 0x02
    15a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15a2:	8e 01       	movw	r16, r28
    15a4:	01 55       	subi	r16, 0x51	; 81
    15a6:	1f 4f       	sbci	r17, 0xFF	; 255
    15a8:	fe 01       	movw	r30, r28
    15aa:	ed 54       	subi	r30, 0x4D	; 77
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	4a e7       	ldi	r20, 0x7A	; 122
    15bc:	53 e4       	ldi	r21, 0x43	; 67
    15be:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	f8 01       	movw	r30, r16
    15c8:	80 83       	st	Z, r24
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	a2 83       	std	Z+2, r26	; 0x02
    15ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15d0:	fe 01       	movw	r30, r28
    15d2:	e1 55       	subi	r30, 0x51	; 81
    15d4:	ff 4f       	sbci	r31, 0xFF	; 255
    15d6:	60 81       	ld	r22, Z
    15d8:	71 81       	ldd	r23, Z+1	; 0x01
    15da:	82 81       	ldd	r24, Z+2	; 0x02
    15dc:	93 81       	ldd	r25, Z+3	; 0x03
    15de:	20 e0       	ldi	r18, 0x00	; 0
    15e0:	30 e0       	ldi	r19, 0x00	; 0
    15e2:	40 e8       	ldi	r20, 0x80	; 128
    15e4:	5f e3       	ldi	r21, 0x3F	; 63
    15e6:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    15ea:	88 23       	and	r24, r24
    15ec:	44 f4       	brge	.+16     	; 0x15fe <main+0x202>
		__ticks = 1;
    15ee:	fe 01       	movw	r30, r28
    15f0:	e3 55       	subi	r30, 0x53	; 83
    15f2:	ff 4f       	sbci	r31, 0xFF	; 255
    15f4:	81 e0       	ldi	r24, 0x01	; 1
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	91 83       	std	Z+1, r25	; 0x01
    15fa:	80 83       	st	Z, r24
    15fc:	64 c0       	rjmp	.+200    	; 0x16c6 <main+0x2ca>
	else if (__tmp > 65535)
    15fe:	fe 01       	movw	r30, r28
    1600:	e1 55       	subi	r30, 0x51	; 81
    1602:	ff 4f       	sbci	r31, 0xFF	; 255
    1604:	60 81       	ld	r22, Z
    1606:	71 81       	ldd	r23, Z+1	; 0x01
    1608:	82 81       	ldd	r24, Z+2	; 0x02
    160a:	93 81       	ldd	r25, Z+3	; 0x03
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	3f ef       	ldi	r19, 0xFF	; 255
    1610:	4f e7       	ldi	r20, 0x7F	; 127
    1612:	57 e4       	ldi	r21, 0x47	; 71
    1614:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1618:	18 16       	cp	r1, r24
    161a:	0c f0       	brlt	.+2      	; 0x161e <main+0x222>
    161c:	43 c0       	rjmp	.+134    	; 0x16a4 <main+0x2a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    161e:	fe 01       	movw	r30, r28
    1620:	ed 54       	subi	r30, 0x4D	; 77
    1622:	ff 4f       	sbci	r31, 0xFF	; 255
    1624:	60 81       	ld	r22, Z
    1626:	71 81       	ldd	r23, Z+1	; 0x01
    1628:	82 81       	ldd	r24, Z+2	; 0x02
    162a:	93 81       	ldd	r25, Z+3	; 0x03
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	40 e2       	ldi	r20, 0x20	; 32
    1632:	51 e4       	ldi	r21, 0x41	; 65
    1634:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1638:	dc 01       	movw	r26, r24
    163a:	cb 01       	movw	r24, r22
    163c:	8e 01       	movw	r16, r28
    163e:	03 55       	subi	r16, 0x53	; 83
    1640:	1f 4f       	sbci	r17, 0xFF	; 255
    1642:	bc 01       	movw	r22, r24
    1644:	cd 01       	movw	r24, r26
    1646:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    164a:	dc 01       	movw	r26, r24
    164c:	cb 01       	movw	r24, r22
    164e:	f8 01       	movw	r30, r16
    1650:	91 83       	std	Z+1, r25	; 0x01
    1652:	80 83       	st	Z, r24
    1654:	1f c0       	rjmp	.+62     	; 0x1694 <main+0x298>
    1656:	fe 01       	movw	r30, r28
    1658:	e5 55       	subi	r30, 0x55	; 85
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	89 e1       	ldi	r24, 0x19	; 25
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	91 83       	std	Z+1, r25	; 0x01
    1662:	80 83       	st	Z, r24
    1664:	fe 01       	movw	r30, r28
    1666:	e5 55       	subi	r30, 0x55	; 85
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	80 81       	ld	r24, Z
    166c:	91 81       	ldd	r25, Z+1	; 0x01
    166e:	01 97       	sbiw	r24, 0x01	; 1
    1670:	f1 f7       	brne	.-4      	; 0x166e <main+0x272>
    1672:	fe 01       	movw	r30, r28
    1674:	e5 55       	subi	r30, 0x55	; 85
    1676:	ff 4f       	sbci	r31, 0xFF	; 255
    1678:	91 83       	std	Z+1, r25	; 0x01
    167a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    167c:	de 01       	movw	r26, r28
    167e:	a3 55       	subi	r26, 0x53	; 83
    1680:	bf 4f       	sbci	r27, 0xFF	; 255
    1682:	fe 01       	movw	r30, r28
    1684:	e3 55       	subi	r30, 0x53	; 83
    1686:	ff 4f       	sbci	r31, 0xFF	; 255
    1688:	80 81       	ld	r24, Z
    168a:	91 81       	ldd	r25, Z+1	; 0x01
    168c:	01 97       	sbiw	r24, 0x01	; 1
    168e:	11 96       	adiw	r26, 0x01	; 1
    1690:	9c 93       	st	X, r25
    1692:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1694:	fe 01       	movw	r30, r28
    1696:	e3 55       	subi	r30, 0x53	; 83
    1698:	ff 4f       	sbci	r31, 0xFF	; 255
    169a:	80 81       	ld	r24, Z
    169c:	91 81       	ldd	r25, Z+1	; 0x01
    169e:	00 97       	sbiw	r24, 0x00	; 0
    16a0:	d1 f6       	brne	.-76     	; 0x1656 <main+0x25a>
    16a2:	27 c0       	rjmp	.+78     	; 0x16f2 <main+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16a4:	8e 01       	movw	r16, r28
    16a6:	03 55       	subi	r16, 0x53	; 83
    16a8:	1f 4f       	sbci	r17, 0xFF	; 255
    16aa:	fe 01       	movw	r30, r28
    16ac:	e1 55       	subi	r30, 0x51	; 81
    16ae:	ff 4f       	sbci	r31, 0xFF	; 255
    16b0:	60 81       	ld	r22, Z
    16b2:	71 81       	ldd	r23, Z+1	; 0x01
    16b4:	82 81       	ldd	r24, Z+2	; 0x02
    16b6:	93 81       	ldd	r25, Z+3	; 0x03
    16b8:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	f8 01       	movw	r30, r16
    16c2:	91 83       	std	Z+1, r25	; 0x01
    16c4:	80 83       	st	Z, r24
    16c6:	de 01       	movw	r26, r28
    16c8:	a7 55       	subi	r26, 0x57	; 87
    16ca:	bf 4f       	sbci	r27, 0xFF	; 255
    16cc:	fe 01       	movw	r30, r28
    16ce:	e3 55       	subi	r30, 0x53	; 83
    16d0:	ff 4f       	sbci	r31, 0xFF	; 255
    16d2:	80 81       	ld	r24, Z
    16d4:	91 81       	ldd	r25, Z+1	; 0x01
    16d6:	8d 93       	st	X+, r24
    16d8:	9c 93       	st	X, r25
    16da:	fe 01       	movw	r30, r28
    16dc:	e7 55       	subi	r30, 0x57	; 87
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
    16e0:	80 81       	ld	r24, Z
    16e2:	91 81       	ldd	r25, Z+1	; 0x01
    16e4:	01 97       	sbiw	r24, 0x01	; 1
    16e6:	f1 f7       	brne	.-4      	; 0x16e4 <main+0x2e8>
    16e8:	fe 01       	movw	r30, r28
    16ea:	e7 55       	subi	r30, 0x57	; 87
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	91 83       	std	Z+1, r25	; 0x01
    16f0:	80 83       	st	Z, r24
_delay_ms(1000);

LCD_displayCharacter(counts);  // 1
    16f2:	80 91 60 00 	lds	r24, 0x0060
    16f6:	88 2f       	mov	r24, r24
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	0e 94 7f 04 	call	0x8fe	; 0x8fe <LCD_displayCharacter>
    16fe:	fe 01       	movw	r30, r28
    1700:	eb 55       	subi	r30, 0x5B	; 91
    1702:	ff 4f       	sbci	r31, 0xFF	; 255
    1704:	80 e0       	ldi	r24, 0x00	; 0
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	aa e7       	ldi	r26, 0x7A	; 122
    170a:	b4 e4       	ldi	r27, 0x44	; 68
    170c:	80 83       	st	Z, r24
    170e:	91 83       	std	Z+1, r25	; 0x01
    1710:	a2 83       	std	Z+2, r26	; 0x02
    1712:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1714:	8e 01       	movw	r16, r28
    1716:	0f 55       	subi	r16, 0x5F	; 95
    1718:	1f 4f       	sbci	r17, 0xFF	; 255
    171a:	fe 01       	movw	r30, r28
    171c:	eb 55       	subi	r30, 0x5B	; 91
    171e:	ff 4f       	sbci	r31, 0xFF	; 255
    1720:	60 81       	ld	r22, Z
    1722:	71 81       	ldd	r23, Z+1	; 0x01
    1724:	82 81       	ldd	r24, Z+2	; 0x02
    1726:	93 81       	ldd	r25, Z+3	; 0x03
    1728:	20 e0       	ldi	r18, 0x00	; 0
    172a:	30 e0       	ldi	r19, 0x00	; 0
    172c:	4a e7       	ldi	r20, 0x7A	; 122
    172e:	53 e4       	ldi	r21, 0x43	; 67
    1730:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1734:	dc 01       	movw	r26, r24
    1736:	cb 01       	movw	r24, r22
    1738:	f8 01       	movw	r30, r16
    173a:	80 83       	st	Z, r24
    173c:	91 83       	std	Z+1, r25	; 0x01
    173e:	a2 83       	std	Z+2, r26	; 0x02
    1740:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1742:	fe 01       	movw	r30, r28
    1744:	ef 55       	subi	r30, 0x5F	; 95
    1746:	ff 4f       	sbci	r31, 0xFF	; 255
    1748:	60 81       	ld	r22, Z
    174a:	71 81       	ldd	r23, Z+1	; 0x01
    174c:	82 81       	ldd	r24, Z+2	; 0x02
    174e:	93 81       	ldd	r25, Z+3	; 0x03
    1750:	20 e0       	ldi	r18, 0x00	; 0
    1752:	30 e0       	ldi	r19, 0x00	; 0
    1754:	40 e8       	ldi	r20, 0x80	; 128
    1756:	5f e3       	ldi	r21, 0x3F	; 63
    1758:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    175c:	88 23       	and	r24, r24
    175e:	44 f4       	brge	.+16     	; 0x1770 <main+0x374>
		__ticks = 1;
    1760:	fe 01       	movw	r30, r28
    1762:	e1 56       	subi	r30, 0x61	; 97
    1764:	ff 4f       	sbci	r31, 0xFF	; 255
    1766:	81 e0       	ldi	r24, 0x01	; 1
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	91 83       	std	Z+1, r25	; 0x01
    176c:	80 83       	st	Z, r24
    176e:	64 c0       	rjmp	.+200    	; 0x1838 <main+0x43c>
	else if (__tmp > 65535)
    1770:	fe 01       	movw	r30, r28
    1772:	ef 55       	subi	r30, 0x5F	; 95
    1774:	ff 4f       	sbci	r31, 0xFF	; 255
    1776:	60 81       	ld	r22, Z
    1778:	71 81       	ldd	r23, Z+1	; 0x01
    177a:	82 81       	ldd	r24, Z+2	; 0x02
    177c:	93 81       	ldd	r25, Z+3	; 0x03
    177e:	20 e0       	ldi	r18, 0x00	; 0
    1780:	3f ef       	ldi	r19, 0xFF	; 255
    1782:	4f e7       	ldi	r20, 0x7F	; 127
    1784:	57 e4       	ldi	r21, 0x47	; 71
    1786:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    178a:	18 16       	cp	r1, r24
    178c:	0c f0       	brlt	.+2      	; 0x1790 <main+0x394>
    178e:	43 c0       	rjmp	.+134    	; 0x1816 <main+0x41a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1790:	fe 01       	movw	r30, r28
    1792:	eb 55       	subi	r30, 0x5B	; 91
    1794:	ff 4f       	sbci	r31, 0xFF	; 255
    1796:	60 81       	ld	r22, Z
    1798:	71 81       	ldd	r23, Z+1	; 0x01
    179a:	82 81       	ldd	r24, Z+2	; 0x02
    179c:	93 81       	ldd	r25, Z+3	; 0x03
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	40 e2       	ldi	r20, 0x20	; 32
    17a4:	51 e4       	ldi	r21, 0x41	; 65
    17a6:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    17aa:	dc 01       	movw	r26, r24
    17ac:	cb 01       	movw	r24, r22
    17ae:	8e 01       	movw	r16, r28
    17b0:	01 56       	subi	r16, 0x61	; 97
    17b2:	1f 4f       	sbci	r17, 0xFF	; 255
    17b4:	bc 01       	movw	r22, r24
    17b6:	cd 01       	movw	r24, r26
    17b8:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    17bc:	dc 01       	movw	r26, r24
    17be:	cb 01       	movw	r24, r22
    17c0:	f8 01       	movw	r30, r16
    17c2:	91 83       	std	Z+1, r25	; 0x01
    17c4:	80 83       	st	Z, r24
    17c6:	1f c0       	rjmp	.+62     	; 0x1806 <main+0x40a>
    17c8:	fe 01       	movw	r30, r28
    17ca:	e3 56       	subi	r30, 0x63	; 99
    17cc:	ff 4f       	sbci	r31, 0xFF	; 255
    17ce:	89 e1       	ldi	r24, 0x19	; 25
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	91 83       	std	Z+1, r25	; 0x01
    17d4:	80 83       	st	Z, r24
    17d6:	fe 01       	movw	r30, r28
    17d8:	e3 56       	subi	r30, 0x63	; 99
    17da:	ff 4f       	sbci	r31, 0xFF	; 255
    17dc:	80 81       	ld	r24, Z
    17de:	91 81       	ldd	r25, Z+1	; 0x01
    17e0:	01 97       	sbiw	r24, 0x01	; 1
    17e2:	f1 f7       	brne	.-4      	; 0x17e0 <main+0x3e4>
    17e4:	fe 01       	movw	r30, r28
    17e6:	e3 56       	subi	r30, 0x63	; 99
    17e8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ea:	91 83       	std	Z+1, r25	; 0x01
    17ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17ee:	de 01       	movw	r26, r28
    17f0:	a1 56       	subi	r26, 0x61	; 97
    17f2:	bf 4f       	sbci	r27, 0xFF	; 255
    17f4:	fe 01       	movw	r30, r28
    17f6:	e1 56       	subi	r30, 0x61	; 97
    17f8:	ff 4f       	sbci	r31, 0xFF	; 255
    17fa:	80 81       	ld	r24, Z
    17fc:	91 81       	ldd	r25, Z+1	; 0x01
    17fe:	01 97       	sbiw	r24, 0x01	; 1
    1800:	11 96       	adiw	r26, 0x01	; 1
    1802:	9c 93       	st	X, r25
    1804:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1806:	fe 01       	movw	r30, r28
    1808:	e1 56       	subi	r30, 0x61	; 97
    180a:	ff 4f       	sbci	r31, 0xFF	; 255
    180c:	80 81       	ld	r24, Z
    180e:	91 81       	ldd	r25, Z+1	; 0x01
    1810:	00 97       	sbiw	r24, 0x00	; 0
    1812:	d1 f6       	brne	.-76     	; 0x17c8 <main+0x3cc>
    1814:	27 c0       	rjmp	.+78     	; 0x1864 <main+0x468>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1816:	8e 01       	movw	r16, r28
    1818:	01 56       	subi	r16, 0x61	; 97
    181a:	1f 4f       	sbci	r17, 0xFF	; 255
    181c:	fe 01       	movw	r30, r28
    181e:	ef 55       	subi	r30, 0x5F	; 95
    1820:	ff 4f       	sbci	r31, 0xFF	; 255
    1822:	60 81       	ld	r22, Z
    1824:	71 81       	ldd	r23, Z+1	; 0x01
    1826:	82 81       	ldd	r24, Z+2	; 0x02
    1828:	93 81       	ldd	r25, Z+3	; 0x03
    182a:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    182e:	dc 01       	movw	r26, r24
    1830:	cb 01       	movw	r24, r22
    1832:	f8 01       	movw	r30, r16
    1834:	91 83       	std	Z+1, r25	; 0x01
    1836:	80 83       	st	Z, r24
    1838:	de 01       	movw	r26, r28
    183a:	a5 56       	subi	r26, 0x65	; 101
    183c:	bf 4f       	sbci	r27, 0xFF	; 255
    183e:	fe 01       	movw	r30, r28
    1840:	e1 56       	subi	r30, 0x61	; 97
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	80 81       	ld	r24, Z
    1846:	91 81       	ldd	r25, Z+1	; 0x01
    1848:	8d 93       	st	X+, r24
    184a:	9c 93       	st	X, r25
    184c:	fe 01       	movw	r30, r28
    184e:	e5 56       	subi	r30, 0x65	; 101
    1850:	ff 4f       	sbci	r31, 0xFF	; 255
    1852:	80 81       	ld	r24, Z
    1854:	91 81       	ldd	r25, Z+1	; 0x01
    1856:	01 97       	sbiw	r24, 0x01	; 1
    1858:	f1 f7       	brne	.-4      	; 0x1856 <main+0x45a>
    185a:	fe 01       	movw	r30, r28
    185c:	e5 56       	subi	r30, 0x65	; 101
    185e:	ff 4f       	sbci	r31, 0xFF	; 255
    1860:	91 83       	std	Z+1, r25	; 0x01
    1862:	80 83       	st	Z, r24
_delay_ms(1000);
LCD_clearScreen();
    1864:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
LCD_displayCharacter(data);    // 9
    1868:	80 91 61 00 	lds	r24, 0x0061
    186c:	88 2f       	mov	r24, r24
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	0e 94 7f 04 	call	0x8fe	; 0x8fe <LCD_displayCharacter>
    1874:	fe 01       	movw	r30, r28
    1876:	e9 56       	subi	r30, 0x69	; 105
    1878:	ff 4f       	sbci	r31, 0xFF	; 255
    187a:	80 e0       	ldi	r24, 0x00	; 0
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	aa e7       	ldi	r26, 0x7A	; 122
    1880:	b4 e4       	ldi	r27, 0x44	; 68
    1882:	80 83       	st	Z, r24
    1884:	91 83       	std	Z+1, r25	; 0x01
    1886:	a2 83       	std	Z+2, r26	; 0x02
    1888:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    188a:	8e 01       	movw	r16, r28
    188c:	0d 56       	subi	r16, 0x6D	; 109
    188e:	1f 4f       	sbci	r17, 0xFF	; 255
    1890:	fe 01       	movw	r30, r28
    1892:	e9 56       	subi	r30, 0x69	; 105
    1894:	ff 4f       	sbci	r31, 0xFF	; 255
    1896:	60 81       	ld	r22, Z
    1898:	71 81       	ldd	r23, Z+1	; 0x01
    189a:	82 81       	ldd	r24, Z+2	; 0x02
    189c:	93 81       	ldd	r25, Z+3	; 0x03
    189e:	20 e0       	ldi	r18, 0x00	; 0
    18a0:	30 e0       	ldi	r19, 0x00	; 0
    18a2:	4a e7       	ldi	r20, 0x7A	; 122
    18a4:	53 e4       	ldi	r21, 0x43	; 67
    18a6:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    18aa:	dc 01       	movw	r26, r24
    18ac:	cb 01       	movw	r24, r22
    18ae:	f8 01       	movw	r30, r16
    18b0:	80 83       	st	Z, r24
    18b2:	91 83       	std	Z+1, r25	; 0x01
    18b4:	a2 83       	std	Z+2, r26	; 0x02
    18b6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18b8:	fe 01       	movw	r30, r28
    18ba:	ed 56       	subi	r30, 0x6D	; 109
    18bc:	ff 4f       	sbci	r31, 0xFF	; 255
    18be:	60 81       	ld	r22, Z
    18c0:	71 81       	ldd	r23, Z+1	; 0x01
    18c2:	82 81       	ldd	r24, Z+2	; 0x02
    18c4:	93 81       	ldd	r25, Z+3	; 0x03
    18c6:	20 e0       	ldi	r18, 0x00	; 0
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	40 e8       	ldi	r20, 0x80	; 128
    18cc:	5f e3       	ldi	r21, 0x3F	; 63
    18ce:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    18d2:	88 23       	and	r24, r24
    18d4:	44 f4       	brge	.+16     	; 0x18e6 <main+0x4ea>
		__ticks = 1;
    18d6:	fe 01       	movw	r30, r28
    18d8:	ef 56       	subi	r30, 0x6F	; 111
    18da:	ff 4f       	sbci	r31, 0xFF	; 255
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	91 83       	std	Z+1, r25	; 0x01
    18e2:	80 83       	st	Z, r24
    18e4:	64 c0       	rjmp	.+200    	; 0x19ae <main+0x5b2>
	else if (__tmp > 65535)
    18e6:	fe 01       	movw	r30, r28
    18e8:	ed 56       	subi	r30, 0x6D	; 109
    18ea:	ff 4f       	sbci	r31, 0xFF	; 255
    18ec:	60 81       	ld	r22, Z
    18ee:	71 81       	ldd	r23, Z+1	; 0x01
    18f0:	82 81       	ldd	r24, Z+2	; 0x02
    18f2:	93 81       	ldd	r25, Z+3	; 0x03
    18f4:	20 e0       	ldi	r18, 0x00	; 0
    18f6:	3f ef       	ldi	r19, 0xFF	; 255
    18f8:	4f e7       	ldi	r20, 0x7F	; 127
    18fa:	57 e4       	ldi	r21, 0x47	; 71
    18fc:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1900:	18 16       	cp	r1, r24
    1902:	0c f0       	brlt	.+2      	; 0x1906 <main+0x50a>
    1904:	43 c0       	rjmp	.+134    	; 0x198c <main+0x590>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1906:	fe 01       	movw	r30, r28
    1908:	e9 56       	subi	r30, 0x69	; 105
    190a:	ff 4f       	sbci	r31, 0xFF	; 255
    190c:	60 81       	ld	r22, Z
    190e:	71 81       	ldd	r23, Z+1	; 0x01
    1910:	82 81       	ldd	r24, Z+2	; 0x02
    1912:	93 81       	ldd	r25, Z+3	; 0x03
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	40 e2       	ldi	r20, 0x20	; 32
    191a:	51 e4       	ldi	r21, 0x41	; 65
    191c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1920:	dc 01       	movw	r26, r24
    1922:	cb 01       	movw	r24, r22
    1924:	8e 01       	movw	r16, r28
    1926:	0f 56       	subi	r16, 0x6F	; 111
    1928:	1f 4f       	sbci	r17, 0xFF	; 255
    192a:	bc 01       	movw	r22, r24
    192c:	cd 01       	movw	r24, r26
    192e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	f8 01       	movw	r30, r16
    1938:	91 83       	std	Z+1, r25	; 0x01
    193a:	80 83       	st	Z, r24
    193c:	1f c0       	rjmp	.+62     	; 0x197c <main+0x580>
    193e:	fe 01       	movw	r30, r28
    1940:	e1 57       	subi	r30, 0x71	; 113
    1942:	ff 4f       	sbci	r31, 0xFF	; 255
    1944:	89 e1       	ldi	r24, 0x19	; 25
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	91 83       	std	Z+1, r25	; 0x01
    194a:	80 83       	st	Z, r24
    194c:	fe 01       	movw	r30, r28
    194e:	e1 57       	subi	r30, 0x71	; 113
    1950:	ff 4f       	sbci	r31, 0xFF	; 255
    1952:	80 81       	ld	r24, Z
    1954:	91 81       	ldd	r25, Z+1	; 0x01
    1956:	01 97       	sbiw	r24, 0x01	; 1
    1958:	f1 f7       	brne	.-4      	; 0x1956 <main+0x55a>
    195a:	fe 01       	movw	r30, r28
    195c:	e1 57       	subi	r30, 0x71	; 113
    195e:	ff 4f       	sbci	r31, 0xFF	; 255
    1960:	91 83       	std	Z+1, r25	; 0x01
    1962:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1964:	de 01       	movw	r26, r28
    1966:	af 56       	subi	r26, 0x6F	; 111
    1968:	bf 4f       	sbci	r27, 0xFF	; 255
    196a:	fe 01       	movw	r30, r28
    196c:	ef 56       	subi	r30, 0x6F	; 111
    196e:	ff 4f       	sbci	r31, 0xFF	; 255
    1970:	80 81       	ld	r24, Z
    1972:	91 81       	ldd	r25, Z+1	; 0x01
    1974:	01 97       	sbiw	r24, 0x01	; 1
    1976:	11 96       	adiw	r26, 0x01	; 1
    1978:	9c 93       	st	X, r25
    197a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    197c:	fe 01       	movw	r30, r28
    197e:	ef 56       	subi	r30, 0x6F	; 111
    1980:	ff 4f       	sbci	r31, 0xFF	; 255
    1982:	80 81       	ld	r24, Z
    1984:	91 81       	ldd	r25, Z+1	; 0x01
    1986:	00 97       	sbiw	r24, 0x00	; 0
    1988:	d1 f6       	brne	.-76     	; 0x193e <main+0x542>
    198a:	27 c0       	rjmp	.+78     	; 0x19da <main+0x5de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    198c:	8e 01       	movw	r16, r28
    198e:	0f 56       	subi	r16, 0x6F	; 111
    1990:	1f 4f       	sbci	r17, 0xFF	; 255
    1992:	fe 01       	movw	r30, r28
    1994:	ed 56       	subi	r30, 0x6D	; 109
    1996:	ff 4f       	sbci	r31, 0xFF	; 255
    1998:	60 81       	ld	r22, Z
    199a:	71 81       	ldd	r23, Z+1	; 0x01
    199c:	82 81       	ldd	r24, Z+2	; 0x02
    199e:	93 81       	ldd	r25, Z+3	; 0x03
    19a0:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    19a4:	dc 01       	movw	r26, r24
    19a6:	cb 01       	movw	r24, r22
    19a8:	f8 01       	movw	r30, r16
    19aa:	91 83       	std	Z+1, r25	; 0x01
    19ac:	80 83       	st	Z, r24
    19ae:	de 01       	movw	r26, r28
    19b0:	a3 57       	subi	r26, 0x73	; 115
    19b2:	bf 4f       	sbci	r27, 0xFF	; 255
    19b4:	fe 01       	movw	r30, r28
    19b6:	ef 56       	subi	r30, 0x6F	; 111
    19b8:	ff 4f       	sbci	r31, 0xFF	; 255
    19ba:	80 81       	ld	r24, Z
    19bc:	91 81       	ldd	r25, Z+1	; 0x01
    19be:	8d 93       	st	X+, r24
    19c0:	9c 93       	st	X, r25
    19c2:	fe 01       	movw	r30, r28
    19c4:	e3 57       	subi	r30, 0x73	; 115
    19c6:	ff 4f       	sbci	r31, 0xFF	; 255
    19c8:	80 81       	ld	r24, Z
    19ca:	91 81       	ldd	r25, Z+1	; 0x01
    19cc:	01 97       	sbiw	r24, 0x01	; 1
    19ce:	f1 f7       	brne	.-4      	; 0x19cc <main+0x5d0>
    19d0:	fe 01       	movw	r30, r28
    19d2:	e3 57       	subi	r30, 0x73	; 115
    19d4:	ff 4f       	sbci	r31, 0xFF	; 255
    19d6:	91 83       	std	Z+1, r25	; 0x01
    19d8:	80 83       	st	Z, r24
_delay_ms(1000);


// Writing---------------------
pass = eeprom16_write (0,counts);  // Stores 1 in location 0
    19da:	90 91 60 00 	lds	r25, 0x0060
    19de:	80 e0       	ldi	r24, 0x00	; 0
    19e0:	69 2f       	mov	r22, r25
    19e2:	0e 94 15 13 	call	0x262a	; 0x262a <eeprom16_write>
    19e6:	80 93 78 00 	sts	0x0078, r24
    19ea:	fe 01       	movw	r30, r28
    19ec:	e7 57       	subi	r30, 0x77	; 119
    19ee:	ff 4f       	sbci	r31, 0xFF	; 255
    19f0:	80 e0       	ldi	r24, 0x00	; 0
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	a0 ea       	ldi	r26, 0xA0	; 160
    19f6:	b1 e4       	ldi	r27, 0x41	; 65
    19f8:	80 83       	st	Z, r24
    19fa:	91 83       	std	Z+1, r25	; 0x01
    19fc:	a2 83       	std	Z+2, r26	; 0x02
    19fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a00:	8e 01       	movw	r16, r28
    1a02:	0b 57       	subi	r16, 0x7B	; 123
    1a04:	1f 4f       	sbci	r17, 0xFF	; 255
    1a06:	fe 01       	movw	r30, r28
    1a08:	e7 57       	subi	r30, 0x77	; 119
    1a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0c:	60 81       	ld	r22, Z
    1a0e:	71 81       	ldd	r23, Z+1	; 0x01
    1a10:	82 81       	ldd	r24, Z+2	; 0x02
    1a12:	93 81       	ldd	r25, Z+3	; 0x03
    1a14:	20 e0       	ldi	r18, 0x00	; 0
    1a16:	30 e0       	ldi	r19, 0x00	; 0
    1a18:	4a e7       	ldi	r20, 0x7A	; 122
    1a1a:	53 e4       	ldi	r21, 0x43	; 67
    1a1c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	f8 01       	movw	r30, r16
    1a26:	80 83       	st	Z, r24
    1a28:	91 83       	std	Z+1, r25	; 0x01
    1a2a:	a2 83       	std	Z+2, r26	; 0x02
    1a2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a2e:	fe 01       	movw	r30, r28
    1a30:	eb 57       	subi	r30, 0x7B	; 123
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	60 81       	ld	r22, Z
    1a36:	71 81       	ldd	r23, Z+1	; 0x01
    1a38:	82 81       	ldd	r24, Z+2	; 0x02
    1a3a:	93 81       	ldd	r25, Z+3	; 0x03
    1a3c:	20 e0       	ldi	r18, 0x00	; 0
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	40 e8       	ldi	r20, 0x80	; 128
    1a42:	5f e3       	ldi	r21, 0x3F	; 63
    1a44:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    1a48:	88 23       	and	r24, r24
    1a4a:	44 f4       	brge	.+16     	; 0x1a5c <main+0x660>
		__ticks = 1;
    1a4c:	fe 01       	movw	r30, r28
    1a4e:	ed 57       	subi	r30, 0x7D	; 125
    1a50:	ff 4f       	sbci	r31, 0xFF	; 255
    1a52:	81 e0       	ldi	r24, 0x01	; 1
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	91 83       	std	Z+1, r25	; 0x01
    1a58:	80 83       	st	Z, r24
    1a5a:	64 c0       	rjmp	.+200    	; 0x1b24 <main+0x728>
	else if (__tmp > 65535)
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	eb 57       	subi	r30, 0x7B	; 123
    1a60:	ff 4f       	sbci	r31, 0xFF	; 255
    1a62:	60 81       	ld	r22, Z
    1a64:	71 81       	ldd	r23, Z+1	; 0x01
    1a66:	82 81       	ldd	r24, Z+2	; 0x02
    1a68:	93 81       	ldd	r25, Z+3	; 0x03
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	3f ef       	ldi	r19, 0xFF	; 255
    1a6e:	4f e7       	ldi	r20, 0x7F	; 127
    1a70:	57 e4       	ldi	r21, 0x47	; 71
    1a72:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1a76:	18 16       	cp	r1, r24
    1a78:	0c f0       	brlt	.+2      	; 0x1a7c <main+0x680>
    1a7a:	43 c0       	rjmp	.+134    	; 0x1b02 <main+0x706>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a7c:	fe 01       	movw	r30, r28
    1a7e:	e7 57       	subi	r30, 0x77	; 119
    1a80:	ff 4f       	sbci	r31, 0xFF	; 255
    1a82:	60 81       	ld	r22, Z
    1a84:	71 81       	ldd	r23, Z+1	; 0x01
    1a86:	82 81       	ldd	r24, Z+2	; 0x02
    1a88:	93 81       	ldd	r25, Z+3	; 0x03
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	40 e2       	ldi	r20, 0x20	; 32
    1a90:	51 e4       	ldi	r21, 0x41	; 65
    1a92:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1a96:	dc 01       	movw	r26, r24
    1a98:	cb 01       	movw	r24, r22
    1a9a:	8e 01       	movw	r16, r28
    1a9c:	0d 57       	subi	r16, 0x7D	; 125
    1a9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa0:	bc 01       	movw	r22, r24
    1aa2:	cd 01       	movw	r24, r26
    1aa4:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1aa8:	dc 01       	movw	r26, r24
    1aaa:	cb 01       	movw	r24, r22
    1aac:	f8 01       	movw	r30, r16
    1aae:	91 83       	std	Z+1, r25	; 0x01
    1ab0:	80 83       	st	Z, r24
    1ab2:	1f c0       	rjmp	.+62     	; 0x1af2 <main+0x6f6>
    1ab4:	fe 01       	movw	r30, r28
    1ab6:	ef 57       	subi	r30, 0x7F	; 127
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	89 e1       	ldi	r24, 0x19	; 25
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	91 83       	std	Z+1, r25	; 0x01
    1ac0:	80 83       	st	Z, r24
    1ac2:	fe 01       	movw	r30, r28
    1ac4:	ef 57       	subi	r30, 0x7F	; 127
    1ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac8:	80 81       	ld	r24, Z
    1aca:	91 81       	ldd	r25, Z+1	; 0x01
    1acc:	01 97       	sbiw	r24, 0x01	; 1
    1ace:	f1 f7       	brne	.-4      	; 0x1acc <main+0x6d0>
    1ad0:	fe 01       	movw	r30, r28
    1ad2:	ef 57       	subi	r30, 0x7F	; 127
    1ad4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad6:	91 83       	std	Z+1, r25	; 0x01
    1ad8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ada:	de 01       	movw	r26, r28
    1adc:	ad 57       	subi	r26, 0x7D	; 125
    1ade:	bf 4f       	sbci	r27, 0xFF	; 255
    1ae0:	fe 01       	movw	r30, r28
    1ae2:	ed 57       	subi	r30, 0x7D	; 125
    1ae4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae6:	80 81       	ld	r24, Z
    1ae8:	91 81       	ldd	r25, Z+1	; 0x01
    1aea:	01 97       	sbiw	r24, 0x01	; 1
    1aec:	11 96       	adiw	r26, 0x01	; 1
    1aee:	9c 93       	st	X, r25
    1af0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1af2:	fe 01       	movw	r30, r28
    1af4:	ed 57       	subi	r30, 0x7D	; 125
    1af6:	ff 4f       	sbci	r31, 0xFF	; 255
    1af8:	80 81       	ld	r24, Z
    1afa:	91 81       	ldd	r25, Z+1	; 0x01
    1afc:	00 97       	sbiw	r24, 0x00	; 0
    1afe:	d1 f6       	brne	.-76     	; 0x1ab4 <main+0x6b8>
    1b00:	28 c0       	rjmp	.+80     	; 0x1b52 <main+0x756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b02:	8e 01       	movw	r16, r28
    1b04:	0d 57       	subi	r16, 0x7D	; 125
    1b06:	1f 4f       	sbci	r17, 0xFF	; 255
    1b08:	fe 01       	movw	r30, r28
    1b0a:	eb 57       	subi	r30, 0x7B	; 123
    1b0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0e:	60 81       	ld	r22, Z
    1b10:	71 81       	ldd	r23, Z+1	; 0x01
    1b12:	82 81       	ldd	r24, Z+2	; 0x02
    1b14:	93 81       	ldd	r25, Z+3	; 0x03
    1b16:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	cb 01       	movw	r24, r22
    1b1e:	f8 01       	movw	r30, r16
    1b20:	91 83       	std	Z+1, r25	; 0x01
    1b22:	80 83       	st	Z, r24
    1b24:	de 01       	movw	r26, r28
    1b26:	a1 58       	subi	r26, 0x81	; 129
    1b28:	bf 4f       	sbci	r27, 0xFF	; 255
    1b2a:	fe 01       	movw	r30, r28
    1b2c:	ed 57       	subi	r30, 0x7D	; 125
    1b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b30:	80 81       	ld	r24, Z
    1b32:	91 81       	ldd	r25, Z+1	; 0x01
    1b34:	11 96       	adiw	r26, 0x01	; 1
    1b36:	9c 93       	st	X, r25
    1b38:	8e 93       	st	-X, r24
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	e1 58       	subi	r30, 0x81	; 129
    1b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b40:	80 81       	ld	r24, Z
    1b42:	91 81       	ldd	r25, Z+1	; 0x01
    1b44:	01 97       	sbiw	r24, 0x01	; 1
    1b46:	f1 f7       	brne	.-4      	; 0x1b44 <main+0x748>
    1b48:	fe 01       	movw	r30, r28
    1b4a:	e1 58       	subi	r30, 0x81	; 129
    1b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4e:	91 83       	std	Z+1, r25	; 0x01
    1b50:	80 83       	st	Z, r24
_delay_ms(20);

if (pass == SUCCESS)
    1b52:	80 91 78 00 	lds	r24, 0x0078
    1b56:	81 30       	cpi	r24, 0x01	; 1
    1b58:	39 f4       	brne	.+14     	; 0x1b68 <main+0x76c>
	{
		LCD_clearScreen();
    1b5a:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
		LCD_displayString("SUCCESS");
    1b5e:	82 e6       	ldi	r24, 0x62	; 98
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_displayString>
    1b66:	0a c0       	rjmp	.+20     	; 0x1b7c <main+0x780>
	}
	else if (pass == ERROR)
    1b68:	80 91 78 00 	lds	r24, 0x0078
    1b6c:	88 23       	and	r24, r24
    1b6e:	31 f4       	brne	.+12     	; 0x1b7c <main+0x780>
	{
		LCD_clearScreen();
    1b70:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
		LCD_displayString("ERROR");
    1b74:	8a e6       	ldi	r24, 0x6A	; 106
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_displayString>
    1b7c:	fe 01       	movw	r30, r28
    1b7e:	e5 58       	subi	r30, 0x85	; 133
    1b80:	ff 4f       	sbci	r31, 0xFF	; 255
    1b82:	80 e0       	ldi	r24, 0x00	; 0
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	aa e7       	ldi	r26, 0x7A	; 122
    1b88:	b4 e4       	ldi	r27, 0x44	; 68
    1b8a:	80 83       	st	Z, r24
    1b8c:	91 83       	std	Z+1, r25	; 0x01
    1b8e:	a2 83       	std	Z+2, r26	; 0x02
    1b90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b92:	8e 01       	movw	r16, r28
    1b94:	09 58       	subi	r16, 0x89	; 137
    1b96:	1f 4f       	sbci	r17, 0xFF	; 255
    1b98:	fe 01       	movw	r30, r28
    1b9a:	e5 58       	subi	r30, 0x85	; 133
    1b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9e:	60 81       	ld	r22, Z
    1ba0:	71 81       	ldd	r23, Z+1	; 0x01
    1ba2:	82 81       	ldd	r24, Z+2	; 0x02
    1ba4:	93 81       	ldd	r25, Z+3	; 0x03
    1ba6:	20 e0       	ldi	r18, 0x00	; 0
    1ba8:	30 e0       	ldi	r19, 0x00	; 0
    1baa:	4a e7       	ldi	r20, 0x7A	; 122
    1bac:	53 e4       	ldi	r21, 0x43	; 67
    1bae:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1bb2:	dc 01       	movw	r26, r24
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	f8 01       	movw	r30, r16
    1bb8:	80 83       	st	Z, r24
    1bba:	91 83       	std	Z+1, r25	; 0x01
    1bbc:	a2 83       	std	Z+2, r26	; 0x02
    1bbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	e9 58       	subi	r30, 0x89	; 137
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	60 81       	ld	r22, Z
    1bc8:	71 81       	ldd	r23, Z+1	; 0x01
    1bca:	82 81       	ldd	r24, Z+2	; 0x02
    1bcc:	93 81       	ldd	r25, Z+3	; 0x03
    1bce:	20 e0       	ldi	r18, 0x00	; 0
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	40 e8       	ldi	r20, 0x80	; 128
    1bd4:	5f e3       	ldi	r21, 0x3F	; 63
    1bd6:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    1bda:	88 23       	and	r24, r24
    1bdc:	44 f4       	brge	.+16     	; 0x1bee <main+0x7f2>
		__ticks = 1;
    1bde:	fe 01       	movw	r30, r28
    1be0:	eb 58       	subi	r30, 0x8B	; 139
    1be2:	ff 4f       	sbci	r31, 0xFF	; 255
    1be4:	81 e0       	ldi	r24, 0x01	; 1
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	91 83       	std	Z+1, r25	; 0x01
    1bea:	80 83       	st	Z, r24
    1bec:	64 c0       	rjmp	.+200    	; 0x1cb6 <main+0x8ba>
	else if (__tmp > 65535)
    1bee:	fe 01       	movw	r30, r28
    1bf0:	e9 58       	subi	r30, 0x89	; 137
    1bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf4:	60 81       	ld	r22, Z
    1bf6:	71 81       	ldd	r23, Z+1	; 0x01
    1bf8:	82 81       	ldd	r24, Z+2	; 0x02
    1bfa:	93 81       	ldd	r25, Z+3	; 0x03
    1bfc:	20 e0       	ldi	r18, 0x00	; 0
    1bfe:	3f ef       	ldi	r19, 0xFF	; 255
    1c00:	4f e7       	ldi	r20, 0x7F	; 127
    1c02:	57 e4       	ldi	r21, 0x47	; 71
    1c04:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1c08:	18 16       	cp	r1, r24
    1c0a:	0c f0       	brlt	.+2      	; 0x1c0e <main+0x812>
    1c0c:	43 c0       	rjmp	.+134    	; 0x1c94 <main+0x898>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c0e:	fe 01       	movw	r30, r28
    1c10:	e5 58       	subi	r30, 0x85	; 133
    1c12:	ff 4f       	sbci	r31, 0xFF	; 255
    1c14:	60 81       	ld	r22, Z
    1c16:	71 81       	ldd	r23, Z+1	; 0x01
    1c18:	82 81       	ldd	r24, Z+2	; 0x02
    1c1a:	93 81       	ldd	r25, Z+3	; 0x03
    1c1c:	20 e0       	ldi	r18, 0x00	; 0
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	40 e2       	ldi	r20, 0x20	; 32
    1c22:	51 e4       	ldi	r21, 0x41	; 65
    1c24:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1c28:	dc 01       	movw	r26, r24
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	8e 01       	movw	r16, r28
    1c2e:	0b 58       	subi	r16, 0x8B	; 139
    1c30:	1f 4f       	sbci	r17, 0xFF	; 255
    1c32:	bc 01       	movw	r22, r24
    1c34:	cd 01       	movw	r24, r26
    1c36:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1c3a:	dc 01       	movw	r26, r24
    1c3c:	cb 01       	movw	r24, r22
    1c3e:	f8 01       	movw	r30, r16
    1c40:	91 83       	std	Z+1, r25	; 0x01
    1c42:	80 83       	st	Z, r24
    1c44:	1f c0       	rjmp	.+62     	; 0x1c84 <main+0x888>
    1c46:	fe 01       	movw	r30, r28
    1c48:	ed 58       	subi	r30, 0x8D	; 141
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	89 e1       	ldi	r24, 0x19	; 25
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	91 83       	std	Z+1, r25	; 0x01
    1c52:	80 83       	st	Z, r24
    1c54:	fe 01       	movw	r30, r28
    1c56:	ed 58       	subi	r30, 0x8D	; 141
    1c58:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5a:	80 81       	ld	r24, Z
    1c5c:	91 81       	ldd	r25, Z+1	; 0x01
    1c5e:	01 97       	sbiw	r24, 0x01	; 1
    1c60:	f1 f7       	brne	.-4      	; 0x1c5e <main+0x862>
    1c62:	fe 01       	movw	r30, r28
    1c64:	ed 58       	subi	r30, 0x8D	; 141
    1c66:	ff 4f       	sbci	r31, 0xFF	; 255
    1c68:	91 83       	std	Z+1, r25	; 0x01
    1c6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c6c:	de 01       	movw	r26, r28
    1c6e:	ab 58       	subi	r26, 0x8B	; 139
    1c70:	bf 4f       	sbci	r27, 0xFF	; 255
    1c72:	fe 01       	movw	r30, r28
    1c74:	eb 58       	subi	r30, 0x8B	; 139
    1c76:	ff 4f       	sbci	r31, 0xFF	; 255
    1c78:	80 81       	ld	r24, Z
    1c7a:	91 81       	ldd	r25, Z+1	; 0x01
    1c7c:	01 97       	sbiw	r24, 0x01	; 1
    1c7e:	11 96       	adiw	r26, 0x01	; 1
    1c80:	9c 93       	st	X, r25
    1c82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c84:	fe 01       	movw	r30, r28
    1c86:	eb 58       	subi	r30, 0x8B	; 139
    1c88:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8a:	80 81       	ld	r24, Z
    1c8c:	91 81       	ldd	r25, Z+1	; 0x01
    1c8e:	00 97       	sbiw	r24, 0x00	; 0
    1c90:	d1 f6       	brne	.-76     	; 0x1c46 <main+0x84a>
    1c92:	27 c0       	rjmp	.+78     	; 0x1ce2 <main+0x8e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c94:	8e 01       	movw	r16, r28
    1c96:	0b 58       	subi	r16, 0x8B	; 139
    1c98:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9a:	fe 01       	movw	r30, r28
    1c9c:	e9 58       	subi	r30, 0x89	; 137
    1c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca0:	60 81       	ld	r22, Z
    1ca2:	71 81       	ldd	r23, Z+1	; 0x01
    1ca4:	82 81       	ldd	r24, Z+2	; 0x02
    1ca6:	93 81       	ldd	r25, Z+3	; 0x03
    1ca8:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1cac:	dc 01       	movw	r26, r24
    1cae:	cb 01       	movw	r24, r22
    1cb0:	f8 01       	movw	r30, r16
    1cb2:	91 83       	std	Z+1, r25	; 0x01
    1cb4:	80 83       	st	Z, r24
    1cb6:	de 01       	movw	r26, r28
    1cb8:	af 58       	subi	r26, 0x8F	; 143
    1cba:	bf 4f       	sbci	r27, 0xFF	; 255
    1cbc:	fe 01       	movw	r30, r28
    1cbe:	eb 58       	subi	r30, 0x8B	; 139
    1cc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc2:	80 81       	ld	r24, Z
    1cc4:	91 81       	ldd	r25, Z+1	; 0x01
    1cc6:	8d 93       	st	X+, r24
    1cc8:	9c 93       	st	X, r25
    1cca:	fe 01       	movw	r30, r28
    1ccc:	ef 58       	subi	r30, 0x8F	; 143
    1cce:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd0:	80 81       	ld	r24, Z
    1cd2:	91 81       	ldd	r25, Z+1	; 0x01
    1cd4:	01 97       	sbiw	r24, 0x01	; 1
    1cd6:	f1 f7       	brne	.-4      	; 0x1cd4 <main+0x8d8>
    1cd8:	fe 01       	movw	r30, r28
    1cda:	ef 58       	subi	r30, 0x8F	; 143
    1cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cde:	91 83       	std	Z+1, r25	; 0x01
    1ce0:	80 83       	st	Z, r24
	}
	_delay_ms(1000);

	// Reading---------------------
	pass = eeprom16_read(0,&data);
    1ce2:	21 e6       	ldi	r18, 0x61	; 97
    1ce4:	30 e0       	ldi	r19, 0x00	; 0
    1ce6:	80 e0       	ldi	r24, 0x00	; 0
    1ce8:	b9 01       	movw	r22, r18
    1cea:	0e 94 4b 13 	call	0x2696	; 0x2696 <eeprom16_read>
    1cee:	80 93 78 00 	sts	0x0078, r24
    1cf2:	fe 01       	movw	r30, r28
    1cf4:	e3 59       	subi	r30, 0x93	; 147
    1cf6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	a0 ea       	ldi	r26, 0xA0	; 160
    1cfe:	b1 e4       	ldi	r27, 0x41	; 65
    1d00:	80 83       	st	Z, r24
    1d02:	91 83       	std	Z+1, r25	; 0x01
    1d04:	a2 83       	std	Z+2, r26	; 0x02
    1d06:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d08:	8e 01       	movw	r16, r28
    1d0a:	07 59       	subi	r16, 0x97	; 151
    1d0c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d0e:	fe 01       	movw	r30, r28
    1d10:	e3 59       	subi	r30, 0x93	; 147
    1d12:	ff 4f       	sbci	r31, 0xFF	; 255
    1d14:	60 81       	ld	r22, Z
    1d16:	71 81       	ldd	r23, Z+1	; 0x01
    1d18:	82 81       	ldd	r24, Z+2	; 0x02
    1d1a:	93 81       	ldd	r25, Z+3	; 0x03
    1d1c:	20 e0       	ldi	r18, 0x00	; 0
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	4a e7       	ldi	r20, 0x7A	; 122
    1d22:	53 e4       	ldi	r21, 0x43	; 67
    1d24:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	f8 01       	movw	r30, r16
    1d2e:	80 83       	st	Z, r24
    1d30:	91 83       	std	Z+1, r25	; 0x01
    1d32:	a2 83       	std	Z+2, r26	; 0x02
    1d34:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d36:	fe 01       	movw	r30, r28
    1d38:	e7 59       	subi	r30, 0x97	; 151
    1d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d3c:	60 81       	ld	r22, Z
    1d3e:	71 81       	ldd	r23, Z+1	; 0x01
    1d40:	82 81       	ldd	r24, Z+2	; 0x02
    1d42:	93 81       	ldd	r25, Z+3	; 0x03
    1d44:	20 e0       	ldi	r18, 0x00	; 0
    1d46:	30 e0       	ldi	r19, 0x00	; 0
    1d48:	40 e8       	ldi	r20, 0x80	; 128
    1d4a:	5f e3       	ldi	r21, 0x3F	; 63
    1d4c:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    1d50:	88 23       	and	r24, r24
    1d52:	44 f4       	brge	.+16     	; 0x1d64 <main+0x968>
		__ticks = 1;
    1d54:	fe 01       	movw	r30, r28
    1d56:	e9 59       	subi	r30, 0x99	; 153
    1d58:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5a:	81 e0       	ldi	r24, 0x01	; 1
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	91 83       	std	Z+1, r25	; 0x01
    1d60:	80 83       	st	Z, r24
    1d62:	64 c0       	rjmp	.+200    	; 0x1e2c <main+0xa30>
	else if (__tmp > 65535)
    1d64:	fe 01       	movw	r30, r28
    1d66:	e7 59       	subi	r30, 0x97	; 151
    1d68:	ff 4f       	sbci	r31, 0xFF	; 255
    1d6a:	60 81       	ld	r22, Z
    1d6c:	71 81       	ldd	r23, Z+1	; 0x01
    1d6e:	82 81       	ldd	r24, Z+2	; 0x02
    1d70:	93 81       	ldd	r25, Z+3	; 0x03
    1d72:	20 e0       	ldi	r18, 0x00	; 0
    1d74:	3f ef       	ldi	r19, 0xFF	; 255
    1d76:	4f e7       	ldi	r20, 0x7F	; 127
    1d78:	57 e4       	ldi	r21, 0x47	; 71
    1d7a:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1d7e:	18 16       	cp	r1, r24
    1d80:	0c f0       	brlt	.+2      	; 0x1d84 <main+0x988>
    1d82:	43 c0       	rjmp	.+134    	; 0x1e0a <main+0xa0e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d84:	fe 01       	movw	r30, r28
    1d86:	e3 59       	subi	r30, 0x93	; 147
    1d88:	ff 4f       	sbci	r31, 0xFF	; 255
    1d8a:	60 81       	ld	r22, Z
    1d8c:	71 81       	ldd	r23, Z+1	; 0x01
    1d8e:	82 81       	ldd	r24, Z+2	; 0x02
    1d90:	93 81       	ldd	r25, Z+3	; 0x03
    1d92:	20 e0       	ldi	r18, 0x00	; 0
    1d94:	30 e0       	ldi	r19, 0x00	; 0
    1d96:	40 e2       	ldi	r20, 0x20	; 32
    1d98:	51 e4       	ldi	r21, 0x41	; 65
    1d9a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1d9e:	dc 01       	movw	r26, r24
    1da0:	cb 01       	movw	r24, r22
    1da2:	8e 01       	movw	r16, r28
    1da4:	09 59       	subi	r16, 0x99	; 153
    1da6:	1f 4f       	sbci	r17, 0xFF	; 255
    1da8:	bc 01       	movw	r22, r24
    1daa:	cd 01       	movw	r24, r26
    1dac:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1db0:	dc 01       	movw	r26, r24
    1db2:	cb 01       	movw	r24, r22
    1db4:	f8 01       	movw	r30, r16
    1db6:	91 83       	std	Z+1, r25	; 0x01
    1db8:	80 83       	st	Z, r24
    1dba:	1f c0       	rjmp	.+62     	; 0x1dfa <main+0x9fe>
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	eb 59       	subi	r30, 0x9B	; 155
    1dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc2:	89 e1       	ldi	r24, 0x19	; 25
    1dc4:	90 e0       	ldi	r25, 0x00	; 0
    1dc6:	91 83       	std	Z+1, r25	; 0x01
    1dc8:	80 83       	st	Z, r24
    1dca:	fe 01       	movw	r30, r28
    1dcc:	eb 59       	subi	r30, 0x9B	; 155
    1dce:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd0:	80 81       	ld	r24, Z
    1dd2:	91 81       	ldd	r25, Z+1	; 0x01
    1dd4:	01 97       	sbiw	r24, 0x01	; 1
    1dd6:	f1 f7       	brne	.-4      	; 0x1dd4 <main+0x9d8>
    1dd8:	fe 01       	movw	r30, r28
    1dda:	eb 59       	subi	r30, 0x9B	; 155
    1ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1de2:	de 01       	movw	r26, r28
    1de4:	a9 59       	subi	r26, 0x99	; 153
    1de6:	bf 4f       	sbci	r27, 0xFF	; 255
    1de8:	fe 01       	movw	r30, r28
    1dea:	e9 59       	subi	r30, 0x99	; 153
    1dec:	ff 4f       	sbci	r31, 0xFF	; 255
    1dee:	80 81       	ld	r24, Z
    1df0:	91 81       	ldd	r25, Z+1	; 0x01
    1df2:	01 97       	sbiw	r24, 0x01	; 1
    1df4:	11 96       	adiw	r26, 0x01	; 1
    1df6:	9c 93       	st	X, r25
    1df8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dfa:	fe 01       	movw	r30, r28
    1dfc:	e9 59       	subi	r30, 0x99	; 153
    1dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    1e00:	80 81       	ld	r24, Z
    1e02:	91 81       	ldd	r25, Z+1	; 0x01
    1e04:	00 97       	sbiw	r24, 0x00	; 0
    1e06:	d1 f6       	brne	.-76     	; 0x1dbc <main+0x9c0>
    1e08:	28 c0       	rjmp	.+80     	; 0x1e5a <main+0xa5e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e0a:	8e 01       	movw	r16, r28
    1e0c:	09 59       	subi	r16, 0x99	; 153
    1e0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e10:	fe 01       	movw	r30, r28
    1e12:	e7 59       	subi	r30, 0x97	; 151
    1e14:	ff 4f       	sbci	r31, 0xFF	; 255
    1e16:	60 81       	ld	r22, Z
    1e18:	71 81       	ldd	r23, Z+1	; 0x01
    1e1a:	82 81       	ldd	r24, Z+2	; 0x02
    1e1c:	93 81       	ldd	r25, Z+3	; 0x03
    1e1e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1e22:	dc 01       	movw	r26, r24
    1e24:	cb 01       	movw	r24, r22
    1e26:	f8 01       	movw	r30, r16
    1e28:	91 83       	std	Z+1, r25	; 0x01
    1e2a:	80 83       	st	Z, r24
    1e2c:	de 01       	movw	r26, r28
    1e2e:	ad 59       	subi	r26, 0x9D	; 157
    1e30:	bf 4f       	sbci	r27, 0xFF	; 255
    1e32:	fe 01       	movw	r30, r28
    1e34:	e9 59       	subi	r30, 0x99	; 153
    1e36:	ff 4f       	sbci	r31, 0xFF	; 255
    1e38:	80 81       	ld	r24, Z
    1e3a:	91 81       	ldd	r25, Z+1	; 0x01
    1e3c:	11 96       	adiw	r26, 0x01	; 1
    1e3e:	9c 93       	st	X, r25
    1e40:	8e 93       	st	-X, r24
    1e42:	fe 01       	movw	r30, r28
    1e44:	ed 59       	subi	r30, 0x9D	; 157
    1e46:	ff 4f       	sbci	r31, 0xFF	; 255
    1e48:	80 81       	ld	r24, Z
    1e4a:	91 81       	ldd	r25, Z+1	; 0x01
    1e4c:	01 97       	sbiw	r24, 0x01	; 1
    1e4e:	f1 f7       	brne	.-4      	; 0x1e4c <main+0xa50>
    1e50:	fe 01       	movw	r30, r28
    1e52:	ed 59       	subi	r30, 0x9D	; 157
    1e54:	ff 4f       	sbci	r31, 0xFF	; 255
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	80 83       	st	Z, r24
	_delay_ms(20);
	if (pass == SUCCESS)
    1e5a:	80 91 78 00 	lds	r24, 0x0078
    1e5e:	81 30       	cpi	r24, 0x01	; 1
    1e60:	39 f4       	brne	.+14     	; 0x1e70 <main+0xa74>
	{
		LCD_clearScreen();
    1e62:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
		LCD_displayString("SUCCESS");
    1e66:	82 e6       	ldi	r24, 0x62	; 98
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_displayString>
    1e6e:	0a c0       	rjmp	.+20     	; 0x1e84 <main+0xa88>
	}
	else if (pass == ERROR)
    1e70:	80 91 78 00 	lds	r24, 0x0078
    1e74:	88 23       	and	r24, r24
    1e76:	31 f4       	brne	.+12     	; 0x1e84 <main+0xa88>
	{
		LCD_clearScreen();
    1e78:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
		LCD_displayString("ERROR");
    1e7c:	8a e6       	ldi	r24, 0x6A	; 106
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	0e 94 4d 09 	call	0x129a	; 0x129a <LCD_displayString>
    1e84:	fe 01       	movw	r30, r28
    1e86:	e1 5a       	subi	r30, 0xA1	; 161
    1e88:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	aa e7       	ldi	r26, 0x7A	; 122
    1e90:	b4 e4       	ldi	r27, 0x44	; 68
    1e92:	80 83       	st	Z, r24
    1e94:	91 83       	std	Z+1, r25	; 0x01
    1e96:	a2 83       	std	Z+2, r26	; 0x02
    1e98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e9a:	8e 01       	movw	r16, r28
    1e9c:	05 5a       	subi	r16, 0xA5	; 165
    1e9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	e1 5a       	subi	r30, 0xA1	; 161
    1ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea6:	60 81       	ld	r22, Z
    1ea8:	71 81       	ldd	r23, Z+1	; 0x01
    1eaa:	82 81       	ldd	r24, Z+2	; 0x02
    1eac:	93 81       	ldd	r25, Z+3	; 0x03
    1eae:	20 e0       	ldi	r18, 0x00	; 0
    1eb0:	30 e0       	ldi	r19, 0x00	; 0
    1eb2:	4a e7       	ldi	r20, 0x7A	; 122
    1eb4:	53 e4       	ldi	r21, 0x43	; 67
    1eb6:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1eba:	dc 01       	movw	r26, r24
    1ebc:	cb 01       	movw	r24, r22
    1ebe:	f8 01       	movw	r30, r16
    1ec0:	80 83       	st	Z, r24
    1ec2:	91 83       	std	Z+1, r25	; 0x01
    1ec4:	a2 83       	std	Z+2, r26	; 0x02
    1ec6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ec8:	fe 01       	movw	r30, r28
    1eca:	e5 5a       	subi	r30, 0xA5	; 165
    1ecc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ece:	60 81       	ld	r22, Z
    1ed0:	71 81       	ldd	r23, Z+1	; 0x01
    1ed2:	82 81       	ldd	r24, Z+2	; 0x02
    1ed4:	93 81       	ldd	r25, Z+3	; 0x03
    1ed6:	20 e0       	ldi	r18, 0x00	; 0
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	40 e8       	ldi	r20, 0x80	; 128
    1edc:	5f e3       	ldi	r21, 0x3F	; 63
    1ede:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    1ee2:	88 23       	and	r24, r24
    1ee4:	44 f4       	brge	.+16     	; 0x1ef6 <main+0xafa>
		__ticks = 1;
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	e7 5a       	subi	r30, 0xA7	; 167
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	81 e0       	ldi	r24, 0x01	; 1
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	91 83       	std	Z+1, r25	; 0x01
    1ef2:	80 83       	st	Z, r24
    1ef4:	64 c0       	rjmp	.+200    	; 0x1fbe <main+0xbc2>
	else if (__tmp > 65535)
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	e5 5a       	subi	r30, 0xA5	; 165
    1efa:	ff 4f       	sbci	r31, 0xFF	; 255
    1efc:	60 81       	ld	r22, Z
    1efe:	71 81       	ldd	r23, Z+1	; 0x01
    1f00:	82 81       	ldd	r24, Z+2	; 0x02
    1f02:	93 81       	ldd	r25, Z+3	; 0x03
    1f04:	20 e0       	ldi	r18, 0x00	; 0
    1f06:	3f ef       	ldi	r19, 0xFF	; 255
    1f08:	4f e7       	ldi	r20, 0x7F	; 127
    1f0a:	57 e4       	ldi	r21, 0x47	; 71
    1f0c:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    1f10:	18 16       	cp	r1, r24
    1f12:	0c f0       	brlt	.+2      	; 0x1f16 <main+0xb1a>
    1f14:	43 c0       	rjmp	.+134    	; 0x1f9c <main+0xba0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f16:	fe 01       	movw	r30, r28
    1f18:	e1 5a       	subi	r30, 0xA1	; 161
    1f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1c:	60 81       	ld	r22, Z
    1f1e:	71 81       	ldd	r23, Z+1	; 0x01
    1f20:	82 81       	ldd	r24, Z+2	; 0x02
    1f22:	93 81       	ldd	r25, Z+3	; 0x03
    1f24:	20 e0       	ldi	r18, 0x00	; 0
    1f26:	30 e0       	ldi	r19, 0x00	; 0
    1f28:	40 e2       	ldi	r20, 0x20	; 32
    1f2a:	51 e4       	ldi	r21, 0x41	; 65
    1f2c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    1f30:	dc 01       	movw	r26, r24
    1f32:	cb 01       	movw	r24, r22
    1f34:	8e 01       	movw	r16, r28
    1f36:	07 5a       	subi	r16, 0xA7	; 167
    1f38:	1f 4f       	sbci	r17, 0xFF	; 255
    1f3a:	bc 01       	movw	r22, r24
    1f3c:	cd 01       	movw	r24, r26
    1f3e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1f42:	dc 01       	movw	r26, r24
    1f44:	cb 01       	movw	r24, r22
    1f46:	f8 01       	movw	r30, r16
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	80 83       	st	Z, r24
    1f4c:	1f c0       	rjmp	.+62     	; 0x1f8c <main+0xb90>
    1f4e:	fe 01       	movw	r30, r28
    1f50:	e9 5a       	subi	r30, 0xA9	; 169
    1f52:	ff 4f       	sbci	r31, 0xFF	; 255
    1f54:	89 e1       	ldi	r24, 0x19	; 25
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	91 83       	std	Z+1, r25	; 0x01
    1f5a:	80 83       	st	Z, r24
    1f5c:	fe 01       	movw	r30, r28
    1f5e:	e9 5a       	subi	r30, 0xA9	; 169
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	80 81       	ld	r24, Z
    1f64:	91 81       	ldd	r25, Z+1	; 0x01
    1f66:	01 97       	sbiw	r24, 0x01	; 1
    1f68:	f1 f7       	brne	.-4      	; 0x1f66 <main+0xb6a>
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	e9 5a       	subi	r30, 0xA9	; 169
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	91 83       	std	Z+1, r25	; 0x01
    1f72:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f74:	de 01       	movw	r26, r28
    1f76:	a7 5a       	subi	r26, 0xA7	; 167
    1f78:	bf 4f       	sbci	r27, 0xFF	; 255
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e7 5a       	subi	r30, 0xA7	; 167
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	80 81       	ld	r24, Z
    1f82:	91 81       	ldd	r25, Z+1	; 0x01
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	11 96       	adiw	r26, 0x01	; 1
    1f88:	9c 93       	st	X, r25
    1f8a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f8c:	fe 01       	movw	r30, r28
    1f8e:	e7 5a       	subi	r30, 0xA7	; 167
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	80 81       	ld	r24, Z
    1f94:	91 81       	ldd	r25, Z+1	; 0x01
    1f96:	00 97       	sbiw	r24, 0x00	; 0
    1f98:	d1 f6       	brne	.-76     	; 0x1f4e <main+0xb52>
    1f9a:	27 c0       	rjmp	.+78     	; 0x1fea <main+0xbee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f9c:	8e 01       	movw	r16, r28
    1f9e:	07 5a       	subi	r16, 0xA7	; 167
    1fa0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	e5 5a       	subi	r30, 0xA5	; 165
    1fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa8:	60 81       	ld	r22, Z
    1faa:	71 81       	ldd	r23, Z+1	; 0x01
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    1fb4:	dc 01       	movw	r26, r24
    1fb6:	cb 01       	movw	r24, r22
    1fb8:	f8 01       	movw	r30, r16
    1fba:	91 83       	std	Z+1, r25	; 0x01
    1fbc:	80 83       	st	Z, r24
    1fbe:	de 01       	movw	r26, r28
    1fc0:	ab 5a       	subi	r26, 0xAB	; 171
    1fc2:	bf 4f       	sbci	r27, 0xFF	; 255
    1fc4:	fe 01       	movw	r30, r28
    1fc6:	e7 5a       	subi	r30, 0xA7	; 167
    1fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fca:	80 81       	ld	r24, Z
    1fcc:	91 81       	ldd	r25, Z+1	; 0x01
    1fce:	8d 93       	st	X+, r24
    1fd0:	9c 93       	st	X, r25
    1fd2:	fe 01       	movw	r30, r28
    1fd4:	eb 5a       	subi	r30, 0xAB	; 171
    1fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd8:	80 81       	ld	r24, Z
    1fda:	91 81       	ldd	r25, Z+1	; 0x01
    1fdc:	01 97       	sbiw	r24, 0x01	; 1
    1fde:	f1 f7       	brne	.-4      	; 0x1fdc <main+0xbe0>
    1fe0:	fe 01       	movw	r30, r28
    1fe2:	eb 5a       	subi	r30, 0xAB	; 171
    1fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	80 83       	st	Z, r24
	}
	_delay_ms(1000);

	LCD_clearScreen();
    1fea:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
	LCD_displayCharacter(counts);
    1fee:	80 91 60 00 	lds	r24, 0x0060
    1ff2:	88 2f       	mov	r24, r24
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	0e 94 7f 04 	call	0x8fe	; 0x8fe <LCD_displayCharacter>
    1ffa:	fe 01       	movw	r30, r28
    1ffc:	ef 5a       	subi	r30, 0xAF	; 175
    1ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    2000:	80 e0       	ldi	r24, 0x00	; 0
    2002:	90 e0       	ldi	r25, 0x00	; 0
    2004:	aa e7       	ldi	r26, 0x7A	; 122
    2006:	b4 e4       	ldi	r27, 0x44	; 68
    2008:	80 83       	st	Z, r24
    200a:	91 83       	std	Z+1, r25	; 0x01
    200c:	a2 83       	std	Z+2, r26	; 0x02
    200e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2010:	8e 01       	movw	r16, r28
    2012:	03 5b       	subi	r16, 0xB3	; 179
    2014:	1f 4f       	sbci	r17, 0xFF	; 255
    2016:	fe 01       	movw	r30, r28
    2018:	ef 5a       	subi	r30, 0xAF	; 175
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	60 81       	ld	r22, Z
    201e:	71 81       	ldd	r23, Z+1	; 0x01
    2020:	82 81       	ldd	r24, Z+2	; 0x02
    2022:	93 81       	ldd	r25, Z+3	; 0x03
    2024:	20 e0       	ldi	r18, 0x00	; 0
    2026:	30 e0       	ldi	r19, 0x00	; 0
    2028:	4a e7       	ldi	r20, 0x7A	; 122
    202a:	53 e4       	ldi	r21, 0x43	; 67
    202c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    2030:	dc 01       	movw	r26, r24
    2032:	cb 01       	movw	r24, r22
    2034:	f8 01       	movw	r30, r16
    2036:	80 83       	st	Z, r24
    2038:	91 83       	std	Z+1, r25	; 0x01
    203a:	a2 83       	std	Z+2, r26	; 0x02
    203c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    203e:	fe 01       	movw	r30, r28
    2040:	e3 5b       	subi	r30, 0xB3	; 179
    2042:	ff 4f       	sbci	r31, 0xFF	; 255
    2044:	60 81       	ld	r22, Z
    2046:	71 81       	ldd	r23, Z+1	; 0x01
    2048:	82 81       	ldd	r24, Z+2	; 0x02
    204a:	93 81       	ldd	r25, Z+3	; 0x03
    204c:	20 e0       	ldi	r18, 0x00	; 0
    204e:	30 e0       	ldi	r19, 0x00	; 0
    2050:	40 e8       	ldi	r20, 0x80	; 128
    2052:	5f e3       	ldi	r21, 0x3F	; 63
    2054:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    2058:	88 23       	and	r24, r24
    205a:	44 f4       	brge	.+16     	; 0x206c <main+0xc70>
		__ticks = 1;
    205c:	fe 01       	movw	r30, r28
    205e:	e5 5b       	subi	r30, 0xB5	; 181
    2060:	ff 4f       	sbci	r31, 0xFF	; 255
    2062:	81 e0       	ldi	r24, 0x01	; 1
    2064:	90 e0       	ldi	r25, 0x00	; 0
    2066:	91 83       	std	Z+1, r25	; 0x01
    2068:	80 83       	st	Z, r24
    206a:	64 c0       	rjmp	.+200    	; 0x2134 <main+0xd38>
	else if (__tmp > 65535)
    206c:	fe 01       	movw	r30, r28
    206e:	e3 5b       	subi	r30, 0xB3	; 179
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	60 81       	ld	r22, Z
    2074:	71 81       	ldd	r23, Z+1	; 0x01
    2076:	82 81       	ldd	r24, Z+2	; 0x02
    2078:	93 81       	ldd	r25, Z+3	; 0x03
    207a:	20 e0       	ldi	r18, 0x00	; 0
    207c:	3f ef       	ldi	r19, 0xFF	; 255
    207e:	4f e7       	ldi	r20, 0x7F	; 127
    2080:	57 e4       	ldi	r21, 0x47	; 71
    2082:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    2086:	18 16       	cp	r1, r24
    2088:	0c f0       	brlt	.+2      	; 0x208c <main+0xc90>
    208a:	43 c0       	rjmp	.+134    	; 0x2112 <main+0xd16>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    208c:	fe 01       	movw	r30, r28
    208e:	ef 5a       	subi	r30, 0xAF	; 175
    2090:	ff 4f       	sbci	r31, 0xFF	; 255
    2092:	60 81       	ld	r22, Z
    2094:	71 81       	ldd	r23, Z+1	; 0x01
    2096:	82 81       	ldd	r24, Z+2	; 0x02
    2098:	93 81       	ldd	r25, Z+3	; 0x03
    209a:	20 e0       	ldi	r18, 0x00	; 0
    209c:	30 e0       	ldi	r19, 0x00	; 0
    209e:	40 e2       	ldi	r20, 0x20	; 32
    20a0:	51 e4       	ldi	r21, 0x41	; 65
    20a2:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    20a6:	dc 01       	movw	r26, r24
    20a8:	cb 01       	movw	r24, r22
    20aa:	8e 01       	movw	r16, r28
    20ac:	05 5b       	subi	r16, 0xB5	; 181
    20ae:	1f 4f       	sbci	r17, 0xFF	; 255
    20b0:	bc 01       	movw	r22, r24
    20b2:	cd 01       	movw	r24, r26
    20b4:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    20b8:	dc 01       	movw	r26, r24
    20ba:	cb 01       	movw	r24, r22
    20bc:	f8 01       	movw	r30, r16
    20be:	91 83       	std	Z+1, r25	; 0x01
    20c0:	80 83       	st	Z, r24
    20c2:	1f c0       	rjmp	.+62     	; 0x2102 <main+0xd06>
    20c4:	fe 01       	movw	r30, r28
    20c6:	e7 5b       	subi	r30, 0xB7	; 183
    20c8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ca:	89 e1       	ldi	r24, 0x19	; 25
    20cc:	90 e0       	ldi	r25, 0x00	; 0
    20ce:	91 83       	std	Z+1, r25	; 0x01
    20d0:	80 83       	st	Z, r24
    20d2:	fe 01       	movw	r30, r28
    20d4:	e7 5b       	subi	r30, 0xB7	; 183
    20d6:	ff 4f       	sbci	r31, 0xFF	; 255
    20d8:	80 81       	ld	r24, Z
    20da:	91 81       	ldd	r25, Z+1	; 0x01
    20dc:	01 97       	sbiw	r24, 0x01	; 1
    20de:	f1 f7       	brne	.-4      	; 0x20dc <main+0xce0>
    20e0:	fe 01       	movw	r30, r28
    20e2:	e7 5b       	subi	r30, 0xB7	; 183
    20e4:	ff 4f       	sbci	r31, 0xFF	; 255
    20e6:	91 83       	std	Z+1, r25	; 0x01
    20e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ea:	de 01       	movw	r26, r28
    20ec:	a5 5b       	subi	r26, 0xB5	; 181
    20ee:	bf 4f       	sbci	r27, 0xFF	; 255
    20f0:	fe 01       	movw	r30, r28
    20f2:	e5 5b       	subi	r30, 0xB5	; 181
    20f4:	ff 4f       	sbci	r31, 0xFF	; 255
    20f6:	80 81       	ld	r24, Z
    20f8:	91 81       	ldd	r25, Z+1	; 0x01
    20fa:	01 97       	sbiw	r24, 0x01	; 1
    20fc:	11 96       	adiw	r26, 0x01	; 1
    20fe:	9c 93       	st	X, r25
    2100:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2102:	fe 01       	movw	r30, r28
    2104:	e5 5b       	subi	r30, 0xB5	; 181
    2106:	ff 4f       	sbci	r31, 0xFF	; 255
    2108:	80 81       	ld	r24, Z
    210a:	91 81       	ldd	r25, Z+1	; 0x01
    210c:	00 97       	sbiw	r24, 0x00	; 0
    210e:	d1 f6       	brne	.-76     	; 0x20c4 <main+0xcc8>
    2110:	27 c0       	rjmp	.+78     	; 0x2160 <main+0xd64>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2112:	8e 01       	movw	r16, r28
    2114:	05 5b       	subi	r16, 0xB5	; 181
    2116:	1f 4f       	sbci	r17, 0xFF	; 255
    2118:	fe 01       	movw	r30, r28
    211a:	e3 5b       	subi	r30, 0xB3	; 179
    211c:	ff 4f       	sbci	r31, 0xFF	; 255
    211e:	60 81       	ld	r22, Z
    2120:	71 81       	ldd	r23, Z+1	; 0x01
    2122:	82 81       	ldd	r24, Z+2	; 0x02
    2124:	93 81       	ldd	r25, Z+3	; 0x03
    2126:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    212a:	dc 01       	movw	r26, r24
    212c:	cb 01       	movw	r24, r22
    212e:	f8 01       	movw	r30, r16
    2130:	91 83       	std	Z+1, r25	; 0x01
    2132:	80 83       	st	Z, r24
    2134:	de 01       	movw	r26, r28
    2136:	a9 5b       	subi	r26, 0xB9	; 185
    2138:	bf 4f       	sbci	r27, 0xFF	; 255
    213a:	fe 01       	movw	r30, r28
    213c:	e5 5b       	subi	r30, 0xB5	; 181
    213e:	ff 4f       	sbci	r31, 0xFF	; 255
    2140:	80 81       	ld	r24, Z
    2142:	91 81       	ldd	r25, Z+1	; 0x01
    2144:	8d 93       	st	X+, r24
    2146:	9c 93       	st	X, r25
    2148:	fe 01       	movw	r30, r28
    214a:	e9 5b       	subi	r30, 0xB9	; 185
    214c:	ff 4f       	sbci	r31, 0xFF	; 255
    214e:	80 81       	ld	r24, Z
    2150:	91 81       	ldd	r25, Z+1	; 0x01
    2152:	01 97       	sbiw	r24, 0x01	; 1
    2154:	f1 f7       	brne	.-4      	; 0x2152 <main+0xd56>
    2156:	fe 01       	movw	r30, r28
    2158:	e9 5b       	subi	r30, 0xB9	; 185
    215a:	ff 4f       	sbci	r31, 0xFF	; 255
    215c:	91 83       	std	Z+1, r25	; 0x01
    215e:	80 83       	st	Z, r24
	_delay_ms(1000);

	LCD_clearScreen();
    2160:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
    2164:	fe 01       	movw	r30, r28
    2166:	ed 5b       	subi	r30, 0xBD	; 189
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	80 e0       	ldi	r24, 0x00	; 0
    216c:	90 e0       	ldi	r25, 0x00	; 0
    216e:	aa e7       	ldi	r26, 0x7A	; 122
    2170:	b4 e4       	ldi	r27, 0x44	; 68
    2172:	80 83       	st	Z, r24
    2174:	91 83       	std	Z+1, r25	; 0x01
    2176:	a2 83       	std	Z+2, r26	; 0x02
    2178:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    217a:	8e 01       	movw	r16, r28
    217c:	01 5c       	subi	r16, 0xC1	; 193
    217e:	1f 4f       	sbci	r17, 0xFF	; 255
    2180:	fe 01       	movw	r30, r28
    2182:	ed 5b       	subi	r30, 0xBD	; 189
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	60 81       	ld	r22, Z
    2188:	71 81       	ldd	r23, Z+1	; 0x01
    218a:	82 81       	ldd	r24, Z+2	; 0x02
    218c:	93 81       	ldd	r25, Z+3	; 0x03
    218e:	20 e0       	ldi	r18, 0x00	; 0
    2190:	30 e0       	ldi	r19, 0x00	; 0
    2192:	4a e7       	ldi	r20, 0x7A	; 122
    2194:	53 e4       	ldi	r21, 0x43	; 67
    2196:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    219a:	dc 01       	movw	r26, r24
    219c:	cb 01       	movw	r24, r22
    219e:	f8 01       	movw	r30, r16
    21a0:	80 83       	st	Z, r24
    21a2:	91 83       	std	Z+1, r25	; 0x01
    21a4:	a2 83       	std	Z+2, r26	; 0x02
    21a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21a8:	fe 01       	movw	r30, r28
    21aa:	ff 96       	adiw	r30, 0x3f	; 63
    21ac:	60 81       	ld	r22, Z
    21ae:	71 81       	ldd	r23, Z+1	; 0x01
    21b0:	82 81       	ldd	r24, Z+2	; 0x02
    21b2:	93 81       	ldd	r25, Z+3	; 0x03
    21b4:	20 e0       	ldi	r18, 0x00	; 0
    21b6:	30 e0       	ldi	r19, 0x00	; 0
    21b8:	40 e8       	ldi	r20, 0x80	; 128
    21ba:	5f e3       	ldi	r21, 0x3F	; 63
    21bc:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    21c0:	88 23       	and	r24, r24
    21c2:	2c f4       	brge	.+10     	; 0x21ce <main+0xdd2>
		__ticks = 1;
    21c4:	81 e0       	ldi	r24, 0x01	; 1
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	9e af       	std	Y+62, r25	; 0x3e
    21ca:	8d af       	std	Y+61, r24	; 0x3d
    21cc:	46 c0       	rjmp	.+140    	; 0x225a <main+0xe5e>
	else if (__tmp > 65535)
    21ce:	fe 01       	movw	r30, r28
    21d0:	ff 96       	adiw	r30, 0x3f	; 63
    21d2:	60 81       	ld	r22, Z
    21d4:	71 81       	ldd	r23, Z+1	; 0x01
    21d6:	82 81       	ldd	r24, Z+2	; 0x02
    21d8:	93 81       	ldd	r25, Z+3	; 0x03
    21da:	20 e0       	ldi	r18, 0x00	; 0
    21dc:	3f ef       	ldi	r19, 0xFF	; 255
    21de:	4f e7       	ldi	r20, 0x7F	; 127
    21e0:	57 e4       	ldi	r21, 0x47	; 71
    21e2:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    21e6:	18 16       	cp	r1, r24
    21e8:	64 f5       	brge	.+88     	; 0x2242 <main+0xe46>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21ea:	fe 01       	movw	r30, r28
    21ec:	ed 5b       	subi	r30, 0xBD	; 189
    21ee:	ff 4f       	sbci	r31, 0xFF	; 255
    21f0:	60 81       	ld	r22, Z
    21f2:	71 81       	ldd	r23, Z+1	; 0x01
    21f4:	82 81       	ldd	r24, Z+2	; 0x02
    21f6:	93 81       	ldd	r25, Z+3	; 0x03
    21f8:	20 e0       	ldi	r18, 0x00	; 0
    21fa:	30 e0       	ldi	r19, 0x00	; 0
    21fc:	40 e2       	ldi	r20, 0x20	; 32
    21fe:	51 e4       	ldi	r21, 0x41	; 65
    2200:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    2204:	dc 01       	movw	r26, r24
    2206:	cb 01       	movw	r24, r22
    2208:	bc 01       	movw	r22, r24
    220a:	cd 01       	movw	r24, r26
    220c:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    2210:	dc 01       	movw	r26, r24
    2212:	cb 01       	movw	r24, r22
    2214:	9e af       	std	Y+62, r25	; 0x3e
    2216:	8d af       	std	Y+61, r24	; 0x3d
    2218:	0f c0       	rjmp	.+30     	; 0x2238 <main+0xe3c>
    221a:	89 e1       	ldi	r24, 0x19	; 25
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	9c af       	std	Y+60, r25	; 0x3c
    2220:	8b af       	std	Y+59, r24	; 0x3b
    2222:	8b ad       	ldd	r24, Y+59	; 0x3b
    2224:	9c ad       	ldd	r25, Y+60	; 0x3c
    2226:	01 97       	sbiw	r24, 0x01	; 1
    2228:	f1 f7       	brne	.-4      	; 0x2226 <main+0xe2a>
    222a:	9c af       	std	Y+60, r25	; 0x3c
    222c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    222e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2230:	9e ad       	ldd	r25, Y+62	; 0x3e
    2232:	01 97       	sbiw	r24, 0x01	; 1
    2234:	9e af       	std	Y+62, r25	; 0x3e
    2236:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2238:	8d ad       	ldd	r24, Y+61	; 0x3d
    223a:	9e ad       	ldd	r25, Y+62	; 0x3e
    223c:	00 97       	sbiw	r24, 0x00	; 0
    223e:	69 f7       	brne	.-38     	; 0x221a <main+0xe1e>
    2240:	16 c0       	rjmp	.+44     	; 0x226e <main+0xe72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2242:	fe 01       	movw	r30, r28
    2244:	ff 96       	adiw	r30, 0x3f	; 63
    2246:	60 81       	ld	r22, Z
    2248:	71 81       	ldd	r23, Z+1	; 0x01
    224a:	82 81       	ldd	r24, Z+2	; 0x02
    224c:	93 81       	ldd	r25, Z+3	; 0x03
    224e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    2252:	dc 01       	movw	r26, r24
    2254:	cb 01       	movw	r24, r22
    2256:	9e af       	std	Y+62, r25	; 0x3e
    2258:	8d af       	std	Y+61, r24	; 0x3d
    225a:	8d ad       	ldd	r24, Y+61	; 0x3d
    225c:	9e ad       	ldd	r25, Y+62	; 0x3e
    225e:	9a af       	std	Y+58, r25	; 0x3a
    2260:	89 af       	std	Y+57, r24	; 0x39
    2262:	89 ad       	ldd	r24, Y+57	; 0x39
    2264:	9a ad       	ldd	r25, Y+58	; 0x3a
    2266:	01 97       	sbiw	r24, 0x01	; 1
    2268:	f1 f7       	brne	.-4      	; 0x2266 <main+0xe6a>
    226a:	9a af       	std	Y+58, r25	; 0x3a
    226c:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1000);
	LCD_displayCharacter(data);
    226e:	80 91 61 00 	lds	r24, 0x0061
    2272:	88 2f       	mov	r24, r24
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	0e 94 7f 04 	call	0x8fe	; 0x8fe <LCD_displayCharacter>
    227a:	80 e0       	ldi	r24, 0x00	; 0
    227c:	90 e0       	ldi	r25, 0x00	; 0
    227e:	aa e7       	ldi	r26, 0x7A	; 122
    2280:	b4 e4       	ldi	r27, 0x44	; 68
    2282:	8d ab       	std	Y+53, r24	; 0x35
    2284:	9e ab       	std	Y+54, r25	; 0x36
    2286:	af ab       	std	Y+55, r26	; 0x37
    2288:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    228a:	6d a9       	ldd	r22, Y+53	; 0x35
    228c:	7e a9       	ldd	r23, Y+54	; 0x36
    228e:	8f a9       	ldd	r24, Y+55	; 0x37
    2290:	98 ad       	ldd	r25, Y+56	; 0x38
    2292:	20 e0       	ldi	r18, 0x00	; 0
    2294:	30 e0       	ldi	r19, 0x00	; 0
    2296:	4a e7       	ldi	r20, 0x7A	; 122
    2298:	53 e4       	ldi	r21, 0x43	; 67
    229a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    229e:	dc 01       	movw	r26, r24
    22a0:	cb 01       	movw	r24, r22
    22a2:	89 ab       	std	Y+49, r24	; 0x31
    22a4:	9a ab       	std	Y+50, r25	; 0x32
    22a6:	ab ab       	std	Y+51, r26	; 0x33
    22a8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    22aa:	69 a9       	ldd	r22, Y+49	; 0x31
    22ac:	7a a9       	ldd	r23, Y+50	; 0x32
    22ae:	8b a9       	ldd	r24, Y+51	; 0x33
    22b0:	9c a9       	ldd	r25, Y+52	; 0x34
    22b2:	20 e0       	ldi	r18, 0x00	; 0
    22b4:	30 e0       	ldi	r19, 0x00	; 0
    22b6:	40 e8       	ldi	r20, 0x80	; 128
    22b8:	5f e3       	ldi	r21, 0x3F	; 63
    22ba:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    22be:	88 23       	and	r24, r24
    22c0:	2c f4       	brge	.+10     	; 0x22cc <main+0xed0>
		__ticks = 1;
    22c2:	81 e0       	ldi	r24, 0x01	; 1
    22c4:	90 e0       	ldi	r25, 0x00	; 0
    22c6:	98 ab       	std	Y+48, r25	; 0x30
    22c8:	8f a7       	std	Y+47, r24	; 0x2f
    22ca:	3f c0       	rjmp	.+126    	; 0x234a <main+0xf4e>
	else if (__tmp > 65535)
    22cc:	69 a9       	ldd	r22, Y+49	; 0x31
    22ce:	7a a9       	ldd	r23, Y+50	; 0x32
    22d0:	8b a9       	ldd	r24, Y+51	; 0x33
    22d2:	9c a9       	ldd	r25, Y+52	; 0x34
    22d4:	20 e0       	ldi	r18, 0x00	; 0
    22d6:	3f ef       	ldi	r19, 0xFF	; 255
    22d8:	4f e7       	ldi	r20, 0x7F	; 127
    22da:	57 e4       	ldi	r21, 0x47	; 71
    22dc:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    22e0:	18 16       	cp	r1, r24
    22e2:	4c f5       	brge	.+82     	; 0x2336 <main+0xf3a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22e4:	6d a9       	ldd	r22, Y+53	; 0x35
    22e6:	7e a9       	ldd	r23, Y+54	; 0x36
    22e8:	8f a9       	ldd	r24, Y+55	; 0x37
    22ea:	98 ad       	ldd	r25, Y+56	; 0x38
    22ec:	20 e0       	ldi	r18, 0x00	; 0
    22ee:	30 e0       	ldi	r19, 0x00	; 0
    22f0:	40 e2       	ldi	r20, 0x20	; 32
    22f2:	51 e4       	ldi	r21, 0x41	; 65
    22f4:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    22f8:	dc 01       	movw	r26, r24
    22fa:	cb 01       	movw	r24, r22
    22fc:	bc 01       	movw	r22, r24
    22fe:	cd 01       	movw	r24, r26
    2300:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    2304:	dc 01       	movw	r26, r24
    2306:	cb 01       	movw	r24, r22
    2308:	98 ab       	std	Y+48, r25	; 0x30
    230a:	8f a7       	std	Y+47, r24	; 0x2f
    230c:	0f c0       	rjmp	.+30     	; 0x232c <main+0xf30>
    230e:	89 e1       	ldi	r24, 0x19	; 25
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	9e a7       	std	Y+46, r25	; 0x2e
    2314:	8d a7       	std	Y+45, r24	; 0x2d
    2316:	8d a5       	ldd	r24, Y+45	; 0x2d
    2318:	9e a5       	ldd	r25, Y+46	; 0x2e
    231a:	01 97       	sbiw	r24, 0x01	; 1
    231c:	f1 f7       	brne	.-4      	; 0x231a <main+0xf1e>
    231e:	9e a7       	std	Y+46, r25	; 0x2e
    2320:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2322:	8f a5       	ldd	r24, Y+47	; 0x2f
    2324:	98 a9       	ldd	r25, Y+48	; 0x30
    2326:	01 97       	sbiw	r24, 0x01	; 1
    2328:	98 ab       	std	Y+48, r25	; 0x30
    232a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    232c:	8f a5       	ldd	r24, Y+47	; 0x2f
    232e:	98 a9       	ldd	r25, Y+48	; 0x30
    2330:	00 97       	sbiw	r24, 0x00	; 0
    2332:	69 f7       	brne	.-38     	; 0x230e <main+0xf12>
    2334:	14 c0       	rjmp	.+40     	; 0x235e <main+0xf62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2336:	69 a9       	ldd	r22, Y+49	; 0x31
    2338:	7a a9       	ldd	r23, Y+50	; 0x32
    233a:	8b a9       	ldd	r24, Y+51	; 0x33
    233c:	9c a9       	ldd	r25, Y+52	; 0x34
    233e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    2342:	dc 01       	movw	r26, r24
    2344:	cb 01       	movw	r24, r22
    2346:	98 ab       	std	Y+48, r25	; 0x30
    2348:	8f a7       	std	Y+47, r24	; 0x2f
    234a:	8f a5       	ldd	r24, Y+47	; 0x2f
    234c:	98 a9       	ldd	r25, Y+48	; 0x30
    234e:	9c a7       	std	Y+44, r25	; 0x2c
    2350:	8b a7       	std	Y+43, r24	; 0x2b
    2352:	8b a5       	ldd	r24, Y+43	; 0x2b
    2354:	9c a5       	ldd	r25, Y+44	; 0x2c
    2356:	01 97       	sbiw	r24, 0x01	; 1
    2358:	f1 f7       	brne	.-4      	; 0x2356 <main+0xf5a>
    235a:	9c a7       	std	Y+44, r25	; 0x2c
    235c:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(1000);

	LCD_clearScreen();
    235e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <LCD_clearScreen>
	LCD_displayCharacter(counts);
    2362:	80 91 60 00 	lds	r24, 0x0060
    2366:	88 2f       	mov	r24, r24
    2368:	90 e0       	ldi	r25, 0x00	; 0
    236a:	0e 94 7f 04 	call	0x8fe	; 0x8fe <LCD_displayCharacter>
    236e:	80 e0       	ldi	r24, 0x00	; 0
    2370:	90 e0       	ldi	r25, 0x00	; 0
    2372:	aa e7       	ldi	r26, 0x7A	; 122
    2374:	b4 e4       	ldi	r27, 0x44	; 68
    2376:	8f a3       	std	Y+39, r24	; 0x27
    2378:	98 a7       	std	Y+40, r25	; 0x28
    237a:	a9 a7       	std	Y+41, r26	; 0x29
    237c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    237e:	6f a1       	ldd	r22, Y+39	; 0x27
    2380:	78 a5       	ldd	r23, Y+40	; 0x28
    2382:	89 a5       	ldd	r24, Y+41	; 0x29
    2384:	9a a5       	ldd	r25, Y+42	; 0x2a
    2386:	20 e0       	ldi	r18, 0x00	; 0
    2388:	30 e0       	ldi	r19, 0x00	; 0
    238a:	4a e7       	ldi	r20, 0x7A	; 122
    238c:	53 e4       	ldi	r21, 0x43	; 67
    238e:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    2392:	dc 01       	movw	r26, r24
    2394:	cb 01       	movw	r24, r22
    2396:	8b a3       	std	Y+35, r24	; 0x23
    2398:	9c a3       	std	Y+36, r25	; 0x24
    239a:	ad a3       	std	Y+37, r26	; 0x25
    239c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    239e:	6b a1       	ldd	r22, Y+35	; 0x23
    23a0:	7c a1       	ldd	r23, Y+36	; 0x24
    23a2:	8d a1       	ldd	r24, Y+37	; 0x25
    23a4:	9e a1       	ldd	r25, Y+38	; 0x26
    23a6:	20 e0       	ldi	r18, 0x00	; 0
    23a8:	30 e0       	ldi	r19, 0x00	; 0
    23aa:	40 e8       	ldi	r20, 0x80	; 128
    23ac:	5f e3       	ldi	r21, 0x3F	; 63
    23ae:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    23b2:	88 23       	and	r24, r24
    23b4:	2c f4       	brge	.+10     	; 0x23c0 <main+0xfc4>
		__ticks = 1;
    23b6:	81 e0       	ldi	r24, 0x01	; 1
    23b8:	90 e0       	ldi	r25, 0x00	; 0
    23ba:	9a a3       	std	Y+34, r25	; 0x22
    23bc:	89 a3       	std	Y+33, r24	; 0x21
    23be:	3f c0       	rjmp	.+126    	; 0x243e <main+0x1042>
	else if (__tmp > 65535)
    23c0:	6b a1       	ldd	r22, Y+35	; 0x23
    23c2:	7c a1       	ldd	r23, Y+36	; 0x24
    23c4:	8d a1       	ldd	r24, Y+37	; 0x25
    23c6:	9e a1       	ldd	r25, Y+38	; 0x26
    23c8:	20 e0       	ldi	r18, 0x00	; 0
    23ca:	3f ef       	ldi	r19, 0xFF	; 255
    23cc:	4f e7       	ldi	r20, 0x7F	; 127
    23ce:	57 e4       	ldi	r21, 0x47	; 71
    23d0:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    23d4:	18 16       	cp	r1, r24
    23d6:	4c f5       	brge	.+82     	; 0x242a <main+0x102e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23d8:	6f a1       	ldd	r22, Y+39	; 0x27
    23da:	78 a5       	ldd	r23, Y+40	; 0x28
    23dc:	89 a5       	ldd	r24, Y+41	; 0x29
    23de:	9a a5       	ldd	r25, Y+42	; 0x2a
    23e0:	20 e0       	ldi	r18, 0x00	; 0
    23e2:	30 e0       	ldi	r19, 0x00	; 0
    23e4:	40 e2       	ldi	r20, 0x20	; 32
    23e6:	51 e4       	ldi	r21, 0x41	; 65
    23e8:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    23ec:	dc 01       	movw	r26, r24
    23ee:	cb 01       	movw	r24, r22
    23f0:	bc 01       	movw	r22, r24
    23f2:	cd 01       	movw	r24, r26
    23f4:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    23f8:	dc 01       	movw	r26, r24
    23fa:	cb 01       	movw	r24, r22
    23fc:	9a a3       	std	Y+34, r25	; 0x22
    23fe:	89 a3       	std	Y+33, r24	; 0x21
    2400:	0f c0       	rjmp	.+30     	; 0x2420 <main+0x1024>
    2402:	89 e1       	ldi	r24, 0x19	; 25
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	98 a3       	std	Y+32, r25	; 0x20
    2408:	8f 8f       	std	Y+31, r24	; 0x1f
    240a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    240c:	98 a1       	ldd	r25, Y+32	; 0x20
    240e:	01 97       	sbiw	r24, 0x01	; 1
    2410:	f1 f7       	brne	.-4      	; 0x240e <main+0x1012>
    2412:	98 a3       	std	Y+32, r25	; 0x20
    2414:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2416:	89 a1       	ldd	r24, Y+33	; 0x21
    2418:	9a a1       	ldd	r25, Y+34	; 0x22
    241a:	01 97       	sbiw	r24, 0x01	; 1
    241c:	9a a3       	std	Y+34, r25	; 0x22
    241e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2420:	89 a1       	ldd	r24, Y+33	; 0x21
    2422:	9a a1       	ldd	r25, Y+34	; 0x22
    2424:	00 97       	sbiw	r24, 0x00	; 0
    2426:	69 f7       	brne	.-38     	; 0x2402 <main+0x1006>
    2428:	14 c0       	rjmp	.+40     	; 0x2452 <main+0x1056>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    242a:	6b a1       	ldd	r22, Y+35	; 0x23
    242c:	7c a1       	ldd	r23, Y+36	; 0x24
    242e:	8d a1       	ldd	r24, Y+37	; 0x25
    2430:	9e a1       	ldd	r25, Y+38	; 0x26
    2432:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    2436:	dc 01       	movw	r26, r24
    2438:	cb 01       	movw	r24, r22
    243a:	9a a3       	std	Y+34, r25	; 0x22
    243c:	89 a3       	std	Y+33, r24	; 0x21
    243e:	89 a1       	ldd	r24, Y+33	; 0x21
    2440:	9a a1       	ldd	r25, Y+34	; 0x22
    2442:	9e 8f       	std	Y+30, r25	; 0x1e
    2444:	8d 8f       	std	Y+29, r24	; 0x1d
    2446:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2448:	9e 8d       	ldd	r25, Y+30	; 0x1e
    244a:	01 97       	sbiw	r24, 0x01	; 1
    244c:	f1 f7       	brne	.-4      	; 0x244a <main+0x104e>
    244e:	9e 8f       	std	Y+30, r25	; 0x1e
    2450:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1000);

    while(1)
    {
        PORTD = 0xFF;
    2452:	e2 e3       	ldi	r30, 0x32	; 50
    2454:	f0 e0       	ldi	r31, 0x00	; 0
    2456:	8f ef       	ldi	r24, 0xFF	; 255
    2458:	80 83       	st	Z, r24
    245a:	80 e0       	ldi	r24, 0x00	; 0
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	aa e7       	ldi	r26, 0x7A	; 122
    2460:	b4 e4       	ldi	r27, 0x44	; 68
    2462:	89 8f       	std	Y+25, r24	; 0x19
    2464:	9a 8f       	std	Y+26, r25	; 0x1a
    2466:	ab 8f       	std	Y+27, r26	; 0x1b
    2468:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    246a:	69 8d       	ldd	r22, Y+25	; 0x19
    246c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    246e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2470:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2472:	20 e0       	ldi	r18, 0x00	; 0
    2474:	30 e0       	ldi	r19, 0x00	; 0
    2476:	4a e7       	ldi	r20, 0x7A	; 122
    2478:	53 e4       	ldi	r21, 0x43	; 67
    247a:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    247e:	dc 01       	movw	r26, r24
    2480:	cb 01       	movw	r24, r22
    2482:	8d 8b       	std	Y+21, r24	; 0x15
    2484:	9e 8b       	std	Y+22, r25	; 0x16
    2486:	af 8b       	std	Y+23, r26	; 0x17
    2488:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    248a:	6d 89       	ldd	r22, Y+21	; 0x15
    248c:	7e 89       	ldd	r23, Y+22	; 0x16
    248e:	8f 89       	ldd	r24, Y+23	; 0x17
    2490:	98 8d       	ldd	r25, Y+24	; 0x18
    2492:	20 e0       	ldi	r18, 0x00	; 0
    2494:	30 e0       	ldi	r19, 0x00	; 0
    2496:	40 e8       	ldi	r20, 0x80	; 128
    2498:	5f e3       	ldi	r21, 0x3F	; 63
    249a:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    249e:	88 23       	and	r24, r24
    24a0:	2c f4       	brge	.+10     	; 0x24ac <main+0x10b0>
		__ticks = 1;
    24a2:	81 e0       	ldi	r24, 0x01	; 1
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	9c 8b       	std	Y+20, r25	; 0x14
    24a8:	8b 8b       	std	Y+19, r24	; 0x13
    24aa:	3f c0       	rjmp	.+126    	; 0x252a <main+0x112e>
	else if (__tmp > 65535)
    24ac:	6d 89       	ldd	r22, Y+21	; 0x15
    24ae:	7e 89       	ldd	r23, Y+22	; 0x16
    24b0:	8f 89       	ldd	r24, Y+23	; 0x17
    24b2:	98 8d       	ldd	r25, Y+24	; 0x18
    24b4:	20 e0       	ldi	r18, 0x00	; 0
    24b6:	3f ef       	ldi	r19, 0xFF	; 255
    24b8:	4f e7       	ldi	r20, 0x7F	; 127
    24ba:	57 e4       	ldi	r21, 0x47	; 71
    24bc:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    24c0:	18 16       	cp	r1, r24
    24c2:	4c f5       	brge	.+82     	; 0x2516 <main+0x111a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24c4:	69 8d       	ldd	r22, Y+25	; 0x19
    24c6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    24c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    24ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    24cc:	20 e0       	ldi	r18, 0x00	; 0
    24ce:	30 e0       	ldi	r19, 0x00	; 0
    24d0:	40 e2       	ldi	r20, 0x20	; 32
    24d2:	51 e4       	ldi	r21, 0x41	; 65
    24d4:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    24d8:	dc 01       	movw	r26, r24
    24da:	cb 01       	movw	r24, r22
    24dc:	bc 01       	movw	r22, r24
    24de:	cd 01       	movw	r24, r26
    24e0:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    24e4:	dc 01       	movw	r26, r24
    24e6:	cb 01       	movw	r24, r22
    24e8:	9c 8b       	std	Y+20, r25	; 0x14
    24ea:	8b 8b       	std	Y+19, r24	; 0x13
    24ec:	0f c0       	rjmp	.+30     	; 0x250c <main+0x1110>
    24ee:	89 e1       	ldi	r24, 0x19	; 25
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	9a 8b       	std	Y+18, r25	; 0x12
    24f4:	89 8b       	std	Y+17, r24	; 0x11
    24f6:	89 89       	ldd	r24, Y+17	; 0x11
    24f8:	9a 89       	ldd	r25, Y+18	; 0x12
    24fa:	01 97       	sbiw	r24, 0x01	; 1
    24fc:	f1 f7       	brne	.-4      	; 0x24fa <main+0x10fe>
    24fe:	9a 8b       	std	Y+18, r25	; 0x12
    2500:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2502:	8b 89       	ldd	r24, Y+19	; 0x13
    2504:	9c 89       	ldd	r25, Y+20	; 0x14
    2506:	01 97       	sbiw	r24, 0x01	; 1
    2508:	9c 8b       	std	Y+20, r25	; 0x14
    250a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    250c:	8b 89       	ldd	r24, Y+19	; 0x13
    250e:	9c 89       	ldd	r25, Y+20	; 0x14
    2510:	00 97       	sbiw	r24, 0x00	; 0
    2512:	69 f7       	brne	.-38     	; 0x24ee <main+0x10f2>
    2514:	14 c0       	rjmp	.+40     	; 0x253e <main+0x1142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2516:	6d 89       	ldd	r22, Y+21	; 0x15
    2518:	7e 89       	ldd	r23, Y+22	; 0x16
    251a:	8f 89       	ldd	r24, Y+23	; 0x17
    251c:	98 8d       	ldd	r25, Y+24	; 0x18
    251e:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    2522:	dc 01       	movw	r26, r24
    2524:	cb 01       	movw	r24, r22
    2526:	9c 8b       	std	Y+20, r25	; 0x14
    2528:	8b 8b       	std	Y+19, r24	; 0x13
    252a:	8b 89       	ldd	r24, Y+19	; 0x13
    252c:	9c 89       	ldd	r25, Y+20	; 0x14
    252e:	98 8b       	std	Y+16, r25	; 0x10
    2530:	8f 87       	std	Y+15, r24	; 0x0f
    2532:	8f 85       	ldd	r24, Y+15	; 0x0f
    2534:	98 89       	ldd	r25, Y+16	; 0x10
    2536:	01 97       	sbiw	r24, 0x01	; 1
    2538:	f1 f7       	brne	.-4      	; 0x2536 <main+0x113a>
    253a:	98 8b       	std	Y+16, r25	; 0x10
    253c:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(1000);
        PORTD = 0x00;
    253e:	e2 e3       	ldi	r30, 0x32	; 50
    2540:	f0 e0       	ldi	r31, 0x00	; 0
    2542:	10 82       	st	Z, r1
    2544:	80 e0       	ldi	r24, 0x00	; 0
    2546:	90 e0       	ldi	r25, 0x00	; 0
    2548:	aa e7       	ldi	r26, 0x7A	; 122
    254a:	b4 e4       	ldi	r27, 0x44	; 68
    254c:	8b 87       	std	Y+11, r24	; 0x0b
    254e:	9c 87       	std	Y+12, r25	; 0x0c
    2550:	ad 87       	std	Y+13, r26	; 0x0d
    2552:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2554:	6b 85       	ldd	r22, Y+11	; 0x0b
    2556:	7c 85       	ldd	r23, Y+12	; 0x0c
    2558:	8d 85       	ldd	r24, Y+13	; 0x0d
    255a:	9e 85       	ldd	r25, Y+14	; 0x0e
    255c:	20 e0       	ldi	r18, 0x00	; 0
    255e:	30 e0       	ldi	r19, 0x00	; 0
    2560:	4a e7       	ldi	r20, 0x7A	; 122
    2562:	53 e4       	ldi	r21, 0x43	; 67
    2564:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    2568:	dc 01       	movw	r26, r24
    256a:	cb 01       	movw	r24, r22
    256c:	8f 83       	std	Y+7, r24	; 0x07
    256e:	98 87       	std	Y+8, r25	; 0x08
    2570:	a9 87       	std	Y+9, r26	; 0x09
    2572:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2574:	6f 81       	ldd	r22, Y+7	; 0x07
    2576:	78 85       	ldd	r23, Y+8	; 0x08
    2578:	89 85       	ldd	r24, Y+9	; 0x09
    257a:	9a 85       	ldd	r25, Y+10	; 0x0a
    257c:	20 e0       	ldi	r18, 0x00	; 0
    257e:	30 e0       	ldi	r19, 0x00	; 0
    2580:	40 e8       	ldi	r20, 0x80	; 128
    2582:	5f e3       	ldi	r21, 0x3F	; 63
    2584:	0e 94 5d 17 	call	0x2eba	; 0x2eba <__ltsf2>
    2588:	88 23       	and	r24, r24
    258a:	2c f4       	brge	.+10     	; 0x2596 <main+0x119a>
		__ticks = 1;
    258c:	81 e0       	ldi	r24, 0x01	; 1
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	9e 83       	std	Y+6, r25	; 0x06
    2592:	8d 83       	std	Y+5, r24	; 0x05
    2594:	3f c0       	rjmp	.+126    	; 0x2614 <main+0x1218>
	else if (__tmp > 65535)
    2596:	6f 81       	ldd	r22, Y+7	; 0x07
    2598:	78 85       	ldd	r23, Y+8	; 0x08
    259a:	89 85       	ldd	r24, Y+9	; 0x09
    259c:	9a 85       	ldd	r25, Y+10	; 0x0a
    259e:	20 e0       	ldi	r18, 0x00	; 0
    25a0:	3f ef       	ldi	r19, 0xFF	; 255
    25a2:	4f e7       	ldi	r20, 0x7F	; 127
    25a4:	57 e4       	ldi	r21, 0x47	; 71
    25a6:	0e 94 fd 16 	call	0x2dfa	; 0x2dfa <__gtsf2>
    25aa:	18 16       	cp	r1, r24
    25ac:	4c f5       	brge	.+82     	; 0x2600 <main+0x1204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25ae:	6b 85       	ldd	r22, Y+11	; 0x0b
    25b0:	7c 85       	ldd	r23, Y+12	; 0x0c
    25b2:	8d 85       	ldd	r24, Y+13	; 0x0d
    25b4:	9e 85       	ldd	r25, Y+14	; 0x0e
    25b6:	20 e0       	ldi	r18, 0x00	; 0
    25b8:	30 e0       	ldi	r19, 0x00	; 0
    25ba:	40 e2       	ldi	r20, 0x20	; 32
    25bc:	51 e4       	ldi	r21, 0x41	; 65
    25be:	0e 94 03 16 	call	0x2c06	; 0x2c06 <__mulsf3>
    25c2:	dc 01       	movw	r26, r24
    25c4:	cb 01       	movw	r24, r22
    25c6:	bc 01       	movw	r22, r24
    25c8:	cd 01       	movw	r24, r26
    25ca:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    25ce:	dc 01       	movw	r26, r24
    25d0:	cb 01       	movw	r24, r22
    25d2:	9e 83       	std	Y+6, r25	; 0x06
    25d4:	8d 83       	std	Y+5, r24	; 0x05
    25d6:	0f c0       	rjmp	.+30     	; 0x25f6 <main+0x11fa>
    25d8:	89 e1       	ldi	r24, 0x19	; 25
    25da:	90 e0       	ldi	r25, 0x00	; 0
    25dc:	9c 83       	std	Y+4, r25	; 0x04
    25de:	8b 83       	std	Y+3, r24	; 0x03
    25e0:	8b 81       	ldd	r24, Y+3	; 0x03
    25e2:	9c 81       	ldd	r25, Y+4	; 0x04
    25e4:	01 97       	sbiw	r24, 0x01	; 1
    25e6:	f1 f7       	brne	.-4      	; 0x25e4 <main+0x11e8>
    25e8:	9c 83       	std	Y+4, r25	; 0x04
    25ea:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25ec:	8d 81       	ldd	r24, Y+5	; 0x05
    25ee:	9e 81       	ldd	r25, Y+6	; 0x06
    25f0:	01 97       	sbiw	r24, 0x01	; 1
    25f2:	9e 83       	std	Y+6, r25	; 0x06
    25f4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25f6:	8d 81       	ldd	r24, Y+5	; 0x05
    25f8:	9e 81       	ldd	r25, Y+6	; 0x06
    25fa:	00 97       	sbiw	r24, 0x00	; 0
    25fc:	69 f7       	brne	.-38     	; 0x25d8 <main+0x11dc>
    25fe:	29 cf       	rjmp	.-430    	; 0x2452 <main+0x1056>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2600:	6f 81       	ldd	r22, Y+7	; 0x07
    2602:	78 85       	ldd	r23, Y+8	; 0x08
    2604:	89 85       	ldd	r24, Y+9	; 0x09
    2606:	9a 85       	ldd	r25, Y+10	; 0x0a
    2608:	0e 94 2d 14 	call	0x285a	; 0x285a <__fixunssfsi>
    260c:	dc 01       	movw	r26, r24
    260e:	cb 01       	movw	r24, r22
    2610:	9e 83       	std	Y+6, r25	; 0x06
    2612:	8d 83       	std	Y+5, r24	; 0x05
    2614:	8d 81       	ldd	r24, Y+5	; 0x05
    2616:	9e 81       	ldd	r25, Y+6	; 0x06
    2618:	9a 83       	std	Y+2, r25	; 0x02
    261a:	89 83       	std	Y+1, r24	; 0x01
    261c:	89 81       	ldd	r24, Y+1	; 0x01
    261e:	9a 81       	ldd	r25, Y+2	; 0x02
    2620:	01 97       	sbiw	r24, 0x01	; 1
    2622:	f1 f7       	brne	.-4      	; 0x2620 <main+0x1224>
    2624:	9a 83       	std	Y+2, r25	; 0x02
    2626:	89 83       	std	Y+1, r24	; 0x01
    2628:	14 cf       	rjmp	.-472    	; 0x2452 <main+0x1056>

0000262a <eeprom16_write>:
    return 0;
}


unsigned char eeprom16_write(unsigned char add,unsigned char data)
{
    262a:	df 93       	push	r29
    262c:	cf 93       	push	r28
    262e:	00 d0       	rcall	.+0      	; 0x2630 <eeprom16_write+0x6>
    2630:	0f 92       	push	r0
    2632:	cd b7       	in	r28, 0x3d	; 61
    2634:	de b7       	in	r29, 0x3e	; 62
    2636:	89 83       	std	Y+1, r24	; 0x01
    2638:	6a 83       	std	Y+2, r22	; 0x02
    i2c_start();
    263a:	0e 94 af 13 	call	0x275e	; 0x275e <i2c_start>
    if(i2c_status() != ACK_START)  return ERROR;
    263e:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    2642:	88 30       	cpi	r24, 0x08	; 8
    2644:	11 f0       	breq	.+4      	; 0x264a <eeprom16_write+0x20>
    2646:	1b 82       	std	Y+3, r1	; 0x03
    2648:	1f c0       	rjmp	.+62     	; 0x2688 <eeprom16_write+0x5e>

    i2c_write(EEPROM_ADDRESS_WR);
    264a:	80 ea       	ldi	r24, 0xA0	; 160
    264c:	0e 94 e6 13 	call	0x27cc	; 0x27cc <i2c_write>
    if(i2c_status() != ACK_FIRST_TRANS)  return ERROR;
    2650:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    2654:	88 31       	cpi	r24, 0x18	; 24
    2656:	11 f0       	breq	.+4      	; 0x265c <eeprom16_write+0x32>
    2658:	1b 82       	std	Y+3, r1	; 0x03
    265a:	16 c0       	rjmp	.+44     	; 0x2688 <eeprom16_write+0x5e>

    i2c_write(add);
    265c:	89 81       	ldd	r24, Y+1	; 0x01
    265e:	0e 94 e6 13 	call	0x27cc	; 0x27cc <i2c_write>
    if(i2c_status() != ACK_TRANSMIT) return ERROR;
    2662:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    2666:	88 32       	cpi	r24, 0x28	; 40
    2668:	11 f0       	breq	.+4      	; 0x266e <eeprom16_write+0x44>
    266a:	1b 82       	std	Y+3, r1	; 0x03
    266c:	0d c0       	rjmp	.+26     	; 0x2688 <eeprom16_write+0x5e>

    i2c_write(data);
    266e:	8a 81       	ldd	r24, Y+2	; 0x02
    2670:	0e 94 e6 13 	call	0x27cc	; 0x27cc <i2c_write>
    if(i2c_status() != ACK_TRANSMIT) return ERROR;
    2674:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    2678:	88 32       	cpi	r24, 0x28	; 40
    267a:	11 f0       	breq	.+4      	; 0x2680 <eeprom16_write+0x56>
    267c:	1b 82       	std	Y+3, r1	; 0x03
    267e:	04 c0       	rjmp	.+8      	; 0x2688 <eeprom16_write+0x5e>

    i2c_stop();
    2680:	0e 94 cd 13 	call	0x279a	; 0x279a <i2c_stop>
    return SUCCESS;
    2684:	81 e0       	ldi	r24, 0x01	; 1
    2686:	8b 83       	std	Y+3, r24	; 0x03
    2688:	8b 81       	ldd	r24, Y+3	; 0x03
}
    268a:	0f 90       	pop	r0
    268c:	0f 90       	pop	r0
    268e:	0f 90       	pop	r0
    2690:	cf 91       	pop	r28
    2692:	df 91       	pop	r29
    2694:	08 95       	ret

00002696 <eeprom16_read>:

unsigned char eeprom16_read(unsigned char add,unsigned char *data)
{
    2696:	df 93       	push	r29
    2698:	cf 93       	push	r28
    269a:	00 d0       	rcall	.+0      	; 0x269c <eeprom16_read+0x6>
    269c:	00 d0       	rcall	.+0      	; 0x269e <eeprom16_read+0x8>
    269e:	cd b7       	in	r28, 0x3d	; 61
    26a0:	de b7       	in	r29, 0x3e	; 62
    26a2:	89 83       	std	Y+1, r24	; 0x01
    26a4:	7b 83       	std	Y+3, r23	; 0x03
    26a6:	6a 83       	std	Y+2, r22	; 0x02
    i2c_start();
    26a8:	0e 94 af 13 	call	0x275e	; 0x275e <i2c_start>
	if(i2c_status() != ACK_START)  return ERROR;
    26ac:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    26b0:	88 30       	cpi	r24, 0x08	; 8
    26b2:	11 f0       	breq	.+4      	; 0x26b8 <eeprom16_read+0x22>
    26b4:	1c 82       	std	Y+4, r1	; 0x04
    26b6:	32 c0       	rjmp	.+100    	; 0x271c <eeprom16_read+0x86>

	i2c_write(EEPROM_ADDRESS_WR);
    26b8:	80 ea       	ldi	r24, 0xA0	; 160
    26ba:	0e 94 e6 13 	call	0x27cc	; 0x27cc <i2c_write>
	if(i2c_status() != ACK_FIRST_TRANS)  return ERROR;
    26be:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    26c2:	88 31       	cpi	r24, 0x18	; 24
    26c4:	11 f0       	breq	.+4      	; 0x26ca <eeprom16_read+0x34>
    26c6:	1c 82       	std	Y+4, r1	; 0x04
    26c8:	29 c0       	rjmp	.+82     	; 0x271c <eeprom16_read+0x86>

	i2c_write(add);
    26ca:	89 81       	ldd	r24, Y+1	; 0x01
    26cc:	0e 94 e6 13 	call	0x27cc	; 0x27cc <i2c_write>
	if(i2c_status() != ACK_TRANSMIT)  return ERROR;
    26d0:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    26d4:	88 32       	cpi	r24, 0x28	; 40
    26d6:	11 f0       	breq	.+4      	; 0x26dc <eeprom16_read+0x46>
    26d8:	1c 82       	std	Y+4, r1	; 0x04
    26da:	20 c0       	rjmp	.+64     	; 0x271c <eeprom16_read+0x86>

	i2c_start();
    26dc:	0e 94 af 13 	call	0x275e	; 0x275e <i2c_start>
	if(i2c_status() != ACK_RESTART)  return ERROR;
    26e0:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    26e4:	80 31       	cpi	r24, 0x10	; 16
    26e6:	11 f0       	breq	.+4      	; 0x26ec <eeprom16_read+0x56>
    26e8:	1c 82       	std	Y+4, r1	; 0x04
    26ea:	18 c0       	rjmp	.+48     	; 0x271c <eeprom16_read+0x86>

	i2c_write(EEPROM_ADDRESS_RE);
    26ec:	81 ea       	ldi	r24, 0xA1	; 161
    26ee:	0e 94 e6 13 	call	0x27cc	; 0x27cc <i2c_write>
	if(i2c_status() != ACK_FIRST_REC)  return ERROR;
    26f2:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    26f6:	80 34       	cpi	r24, 0x40	; 64
    26f8:	11 f0       	breq	.+4      	; 0x26fe <eeprom16_read+0x68>
    26fa:	1c 82       	std	Y+4, r1	; 0x04
    26fc:	0f c0       	rjmp	.+30     	; 0x271c <eeprom16_read+0x86>

	*data = i2c_read();
    26fe:	0e 94 04 14 	call	0x2808	; 0x2808 <i2c_read>
    2702:	ea 81       	ldd	r30, Y+2	; 0x02
    2704:	fb 81       	ldd	r31, Y+3	; 0x03
    2706:	80 83       	st	Z, r24
	if(i2c_status() != ACK_RECEIVE)  return ERROR;
    2708:	0e 94 1e 14 	call	0x283c	; 0x283c <i2c_status>
    270c:	88 35       	cpi	r24, 0x58	; 88
    270e:	11 f0       	breq	.+4      	; 0x2714 <eeprom16_read+0x7e>
    2710:	1c 82       	std	Y+4, r1	; 0x04
    2712:	04 c0       	rjmp	.+8      	; 0x271c <eeprom16_read+0x86>

	i2c_stop();
    2714:	0e 94 cd 13 	call	0x279a	; 0x279a <i2c_stop>
	return SUCCESS;
    2718:	81 e0       	ldi	r24, 0x01	; 1
    271a:	8c 83       	std	Y+4, r24	; 0x04
    271c:	8c 81       	ldd	r24, Y+4	; 0x04
}
    271e:	0f 90       	pop	r0
    2720:	0f 90       	pop	r0
    2722:	0f 90       	pop	r0
    2724:	0f 90       	pop	r0
    2726:	cf 91       	pop	r28
    2728:	df 91       	pop	r29
    272a:	08 95       	ret

0000272c <i2c_init>:


void i2c_init()
{
    272c:	df 93       	push	r29
    272e:	cf 93       	push	r28
    2730:	cd b7       	in	r28, 0x3d	; 61
    2732:	de b7       	in	r29, 0x3e	; 62
    TWCR = (1U<<TWEA);
    2734:	e6 e5       	ldi	r30, 0x56	; 86
    2736:	f0 e0       	ldi	r31, 0x00	; 0
    2738:	80 e4       	ldi	r24, 0x40	; 64
    273a:	80 83       	st	Z, r24
    TWBR = 0x02;
    273c:	e0 e2       	ldi	r30, 0x20	; 32
    273e:	f0 e0       	ldi	r31, 0x00	; 0
    2740:	82 e0       	ldi	r24, 0x02	; 2
    2742:	80 83       	st	Z, r24
    TWSR = 0x00;
    2744:	e1 e2       	ldi	r30, 0x21	; 33
    2746:	f0 e0       	ldi	r31, 0x00	; 0
    2748:	10 82       	st	Z, r1
    TWCR |= (1U<<TWEN);
    274a:	a6 e5       	ldi	r26, 0x56	; 86
    274c:	b0 e0       	ldi	r27, 0x00	; 0
    274e:	e6 e5       	ldi	r30, 0x56	; 86
    2750:	f0 e0       	ldi	r31, 0x00	; 0
    2752:	80 81       	ld	r24, Z
    2754:	84 60       	ori	r24, 0x04	; 4
    2756:	8c 93       	st	X, r24
}
    2758:	cf 91       	pop	r28
    275a:	df 91       	pop	r29
    275c:	08 95       	ret

0000275e <i2c_start>:

void i2c_start()
{
    275e:	df 93       	push	r29
    2760:	cf 93       	push	r28
    2762:	cd b7       	in	r28, 0x3d	; 61
    2764:	de b7       	in	r29, 0x3e	; 62
	TWCR  = (1U<<TWEN);
    2766:	e6 e5       	ldi	r30, 0x56	; 86
    2768:	f0 e0       	ldi	r31, 0x00	; 0
    276a:	84 e0       	ldi	r24, 0x04	; 4
    276c:	80 83       	st	Z, r24
	TWCR |= (1U<<TWSTA);
    276e:	a6 e5       	ldi	r26, 0x56	; 86
    2770:	b0 e0       	ldi	r27, 0x00	; 0
    2772:	e6 e5       	ldi	r30, 0x56	; 86
    2774:	f0 e0       	ldi	r31, 0x00	; 0
    2776:	80 81       	ld	r24, Z
    2778:	80 62       	ori	r24, 0x20	; 32
    277a:	8c 93       	st	X, r24
	TWCR |= (1U<<TWINT);
    277c:	a6 e5       	ldi	r26, 0x56	; 86
    277e:	b0 e0       	ldi	r27, 0x00	; 0
    2780:	e6 e5       	ldi	r30, 0x56	; 86
    2782:	f0 e0       	ldi	r31, 0x00	; 0
    2784:	80 81       	ld	r24, Z
    2786:	80 68       	ori	r24, 0x80	; 128
    2788:	8c 93       	st	X, r24
	while((TWCR & (1<<TWINT)) == 0);
    278a:	e6 e5       	ldi	r30, 0x56	; 86
    278c:	f0 e0       	ldi	r31, 0x00	; 0
    278e:	80 81       	ld	r24, Z
    2790:	88 23       	and	r24, r24
    2792:	dc f7       	brge	.-10     	; 0x278a <i2c_start+0x2c>
}
    2794:	cf 91       	pop	r28
    2796:	df 91       	pop	r29
    2798:	08 95       	ret

0000279a <i2c_stop>:

void i2c_stop()
{
    279a:	df 93       	push	r29
    279c:	cf 93       	push	r28
    279e:	cd b7       	in	r28, 0x3d	; 61
    27a0:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1U<<TWEN);
    27a2:	e6 e5       	ldi	r30, 0x56	; 86
    27a4:	f0 e0       	ldi	r31, 0x00	; 0
    27a6:	84 e0       	ldi	r24, 0x04	; 4
    27a8:	80 83       	st	Z, r24
	TWCR |= (1U<<TWSTO);
    27aa:	a6 e5       	ldi	r26, 0x56	; 86
    27ac:	b0 e0       	ldi	r27, 0x00	; 0
    27ae:	e6 e5       	ldi	r30, 0x56	; 86
    27b0:	f0 e0       	ldi	r31, 0x00	; 0
    27b2:	80 81       	ld	r24, Z
    27b4:	80 61       	ori	r24, 0x10	; 16
    27b6:	8c 93       	st	X, r24
	TWCR |= (1U<<TWINT);
    27b8:	a6 e5       	ldi	r26, 0x56	; 86
    27ba:	b0 e0       	ldi	r27, 0x00	; 0
    27bc:	e6 e5       	ldi	r30, 0x56	; 86
    27be:	f0 e0       	ldi	r31, 0x00	; 0
    27c0:	80 81       	ld	r24, Z
    27c2:	80 68       	ori	r24, 0x80	; 128
    27c4:	8c 93       	st	X, r24
}
    27c6:	cf 91       	pop	r28
    27c8:	df 91       	pop	r29
    27ca:	08 95       	ret

000027cc <i2c_write>:

void i2c_write(unsigned char data)
{
    27cc:	df 93       	push	r29
    27ce:	cf 93       	push	r28
    27d0:	0f 92       	push	r0
    27d2:	cd b7       	in	r28, 0x3d	; 61
    27d4:	de b7       	in	r29, 0x3e	; 62
    27d6:	89 83       	std	Y+1, r24	; 0x01
    TWDR = data;
    27d8:	e3 e2       	ldi	r30, 0x23	; 35
    27da:	f0 e0       	ldi	r31, 0x00	; 0
    27dc:	89 81       	ldd	r24, Y+1	; 0x01
    27de:	80 83       	st	Z, r24
	TWCR = (1U<<TWEN);
    27e0:	e6 e5       	ldi	r30, 0x56	; 86
    27e2:	f0 e0       	ldi	r31, 0x00	; 0
    27e4:	84 e0       	ldi	r24, 0x04	; 4
    27e6:	80 83       	st	Z, r24
	TWCR |= (1U<<TWINT);
    27e8:	a6 e5       	ldi	r26, 0x56	; 86
    27ea:	b0 e0       	ldi	r27, 0x00	; 0
    27ec:	e6 e5       	ldi	r30, 0x56	; 86
    27ee:	f0 e0       	ldi	r31, 0x00	; 0
    27f0:	80 81       	ld	r24, Z
    27f2:	80 68       	ori	r24, 0x80	; 128
    27f4:	8c 93       	st	X, r24
	while ( (TWCR & (1U<<TWINT)) == 0);
    27f6:	e6 e5       	ldi	r30, 0x56	; 86
    27f8:	f0 e0       	ldi	r31, 0x00	; 0
    27fa:	80 81       	ld	r24, Z
    27fc:	88 23       	and	r24, r24
    27fe:	dc f7       	brge	.-10     	; 0x27f6 <i2c_write+0x2a>
}
    2800:	0f 90       	pop	r0
    2802:	cf 91       	pop	r28
    2804:	df 91       	pop	r29
    2806:	08 95       	ret

00002808 <i2c_read>:

unsigned char i2c_read()
{
    2808:	df 93       	push	r29
    280a:	cf 93       	push	r28
    280c:	cd b7       	in	r28, 0x3d	; 61
    280e:	de b7       	in	r29, 0x3e	; 62
	TWCR = (1U<<TWEN);
    2810:	e6 e5       	ldi	r30, 0x56	; 86
    2812:	f0 e0       	ldi	r31, 0x00	; 0
    2814:	84 e0       	ldi	r24, 0x04	; 4
    2816:	80 83       	st	Z, r24
	TWCR |= (1U<<TWINT);
    2818:	a6 e5       	ldi	r26, 0x56	; 86
    281a:	b0 e0       	ldi	r27, 0x00	; 0
    281c:	e6 e5       	ldi	r30, 0x56	; 86
    281e:	f0 e0       	ldi	r31, 0x00	; 0
    2820:	80 81       	ld	r24, Z
    2822:	80 68       	ori	r24, 0x80	; 128
    2824:	8c 93       	st	X, r24
	while ( (TWCR & (1U<<TWINT)) == 0);
    2826:	e6 e5       	ldi	r30, 0x56	; 86
    2828:	f0 e0       	ldi	r31, 0x00	; 0
    282a:	80 81       	ld	r24, Z
    282c:	88 23       	and	r24, r24
    282e:	dc f7       	brge	.-10     	; 0x2826 <i2c_read+0x1e>
	return TWDR;
    2830:	e3 e2       	ldi	r30, 0x23	; 35
    2832:	f0 e0       	ldi	r31, 0x00	; 0
    2834:	80 81       	ld	r24, Z
}
    2836:	cf 91       	pop	r28
    2838:	df 91       	pop	r29
    283a:	08 95       	ret

0000283c <i2c_status>:

unsigned char i2c_status()
{
    283c:	df 93       	push	r29
    283e:	cf 93       	push	r28
    2840:	0f 92       	push	r0
    2842:	cd b7       	in	r28, 0x3d	; 61
    2844:	de b7       	in	r29, 0x3e	; 62
    unsigned char status;
	status = (TWSR & 0xF8);
    2846:	e1 e2       	ldi	r30, 0x21	; 33
    2848:	f0 e0       	ldi	r31, 0x00	; 0
    284a:	80 81       	ld	r24, Z
    284c:	88 7f       	andi	r24, 0xF8	; 248
    284e:	89 83       	std	Y+1, r24	; 0x01
	return status;
    2850:	89 81       	ldd	r24, Y+1	; 0x01
}
    2852:	0f 90       	pop	r0
    2854:	cf 91       	pop	r28
    2856:	df 91       	pop	r29
    2858:	08 95       	ret

0000285a <__fixunssfsi>:
    285a:	ef 92       	push	r14
    285c:	ff 92       	push	r15
    285e:	0f 93       	push	r16
    2860:	1f 93       	push	r17
    2862:	7b 01       	movw	r14, r22
    2864:	8c 01       	movw	r16, r24
    2866:	20 e0       	ldi	r18, 0x00	; 0
    2868:	30 e0       	ldi	r19, 0x00	; 0
    286a:	40 e0       	ldi	r20, 0x00	; 0
    286c:	5f e4       	ldi	r21, 0x4F	; 79
    286e:	0e 94 2d 17 	call	0x2e5a	; 0x2e5a <__gesf2>
    2872:	88 23       	and	r24, r24
    2874:	8c f0       	brlt	.+34     	; 0x2898 <__fixunssfsi+0x3e>
    2876:	c8 01       	movw	r24, r16
    2878:	b7 01       	movw	r22, r14
    287a:	20 e0       	ldi	r18, 0x00	; 0
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	40 e0       	ldi	r20, 0x00	; 0
    2880:	5f e4       	ldi	r21, 0x4F	; 79
    2882:	0e 94 a5 15 	call	0x2b4a	; 0x2b4a <__subsf3>
    2886:	0e 94 8d 17 	call	0x2f1a	; 0x2f1a <__fixsfsi>
    288a:	9b 01       	movw	r18, r22
    288c:	ac 01       	movw	r20, r24
    288e:	20 50       	subi	r18, 0x00	; 0
    2890:	30 40       	sbci	r19, 0x00	; 0
    2892:	40 40       	sbci	r20, 0x00	; 0
    2894:	50 48       	sbci	r21, 0x80	; 128
    2896:	06 c0       	rjmp	.+12     	; 0x28a4 <__fixunssfsi+0x4a>
    2898:	c8 01       	movw	r24, r16
    289a:	b7 01       	movw	r22, r14
    289c:	0e 94 8d 17 	call	0x2f1a	; 0x2f1a <__fixsfsi>
    28a0:	9b 01       	movw	r18, r22
    28a2:	ac 01       	movw	r20, r24
    28a4:	b9 01       	movw	r22, r18
    28a6:	ca 01       	movw	r24, r20
    28a8:	1f 91       	pop	r17
    28aa:	0f 91       	pop	r16
    28ac:	ff 90       	pop	r15
    28ae:	ef 90       	pop	r14
    28b0:	08 95       	ret

000028b2 <_fpadd_parts>:
    28b2:	a0 e0       	ldi	r26, 0x00	; 0
    28b4:	b0 e0       	ldi	r27, 0x00	; 0
    28b6:	ef e5       	ldi	r30, 0x5F	; 95
    28b8:	f4 e1       	ldi	r31, 0x14	; 20
    28ba:	0c 94 87 19 	jmp	0x330e	; 0x330e <__prologue_saves__>
    28be:	dc 01       	movw	r26, r24
    28c0:	2b 01       	movw	r4, r22
    28c2:	fa 01       	movw	r30, r20
    28c4:	9c 91       	ld	r25, X
    28c6:	92 30       	cpi	r25, 0x02	; 2
    28c8:	08 f4       	brcc	.+2      	; 0x28cc <_fpadd_parts+0x1a>
    28ca:	39 c1       	rjmp	.+626    	; 0x2b3e <_fpadd_parts+0x28c>
    28cc:	eb 01       	movw	r28, r22
    28ce:	88 81       	ld	r24, Y
    28d0:	82 30       	cpi	r24, 0x02	; 2
    28d2:	08 f4       	brcc	.+2      	; 0x28d6 <_fpadd_parts+0x24>
    28d4:	33 c1       	rjmp	.+614    	; 0x2b3c <_fpadd_parts+0x28a>
    28d6:	94 30       	cpi	r25, 0x04	; 4
    28d8:	69 f4       	brne	.+26     	; 0x28f4 <_fpadd_parts+0x42>
    28da:	84 30       	cpi	r24, 0x04	; 4
    28dc:	09 f0       	breq	.+2      	; 0x28e0 <_fpadd_parts+0x2e>
    28de:	2f c1       	rjmp	.+606    	; 0x2b3e <_fpadd_parts+0x28c>
    28e0:	11 96       	adiw	r26, 0x01	; 1
    28e2:	9c 91       	ld	r25, X
    28e4:	11 97       	sbiw	r26, 0x01	; 1
    28e6:	89 81       	ldd	r24, Y+1	; 0x01
    28e8:	98 17       	cp	r25, r24
    28ea:	09 f4       	brne	.+2      	; 0x28ee <_fpadd_parts+0x3c>
    28ec:	28 c1       	rjmp	.+592    	; 0x2b3e <_fpadd_parts+0x28c>
    28ee:	a0 e7       	ldi	r26, 0x70	; 112
    28f0:	b0 e0       	ldi	r27, 0x00	; 0
    28f2:	25 c1       	rjmp	.+586    	; 0x2b3e <_fpadd_parts+0x28c>
    28f4:	84 30       	cpi	r24, 0x04	; 4
    28f6:	09 f4       	brne	.+2      	; 0x28fa <_fpadd_parts+0x48>
    28f8:	21 c1       	rjmp	.+578    	; 0x2b3c <_fpadd_parts+0x28a>
    28fa:	82 30       	cpi	r24, 0x02	; 2
    28fc:	a9 f4       	brne	.+42     	; 0x2928 <_fpadd_parts+0x76>
    28fe:	92 30       	cpi	r25, 0x02	; 2
    2900:	09 f0       	breq	.+2      	; 0x2904 <_fpadd_parts+0x52>
    2902:	1d c1       	rjmp	.+570    	; 0x2b3e <_fpadd_parts+0x28c>
    2904:	9a 01       	movw	r18, r20
    2906:	ad 01       	movw	r20, r26
    2908:	88 e0       	ldi	r24, 0x08	; 8
    290a:	ea 01       	movw	r28, r20
    290c:	09 90       	ld	r0, Y+
    290e:	ae 01       	movw	r20, r28
    2910:	e9 01       	movw	r28, r18
    2912:	09 92       	st	Y+, r0
    2914:	9e 01       	movw	r18, r28
    2916:	81 50       	subi	r24, 0x01	; 1
    2918:	c1 f7       	brne	.-16     	; 0x290a <_fpadd_parts+0x58>
    291a:	e2 01       	movw	r28, r4
    291c:	89 81       	ldd	r24, Y+1	; 0x01
    291e:	11 96       	adiw	r26, 0x01	; 1
    2920:	9c 91       	ld	r25, X
    2922:	89 23       	and	r24, r25
    2924:	81 83       	std	Z+1, r24	; 0x01
    2926:	08 c1       	rjmp	.+528    	; 0x2b38 <_fpadd_parts+0x286>
    2928:	92 30       	cpi	r25, 0x02	; 2
    292a:	09 f4       	brne	.+2      	; 0x292e <_fpadd_parts+0x7c>
    292c:	07 c1       	rjmp	.+526    	; 0x2b3c <_fpadd_parts+0x28a>
    292e:	12 96       	adiw	r26, 0x02	; 2
    2930:	2d 90       	ld	r2, X+
    2932:	3c 90       	ld	r3, X
    2934:	13 97       	sbiw	r26, 0x03	; 3
    2936:	eb 01       	movw	r28, r22
    2938:	8a 81       	ldd	r24, Y+2	; 0x02
    293a:	9b 81       	ldd	r25, Y+3	; 0x03
    293c:	14 96       	adiw	r26, 0x04	; 4
    293e:	ad 90       	ld	r10, X+
    2940:	bd 90       	ld	r11, X+
    2942:	cd 90       	ld	r12, X+
    2944:	dc 90       	ld	r13, X
    2946:	17 97       	sbiw	r26, 0x07	; 7
    2948:	ec 80       	ldd	r14, Y+4	; 0x04
    294a:	fd 80       	ldd	r15, Y+5	; 0x05
    294c:	0e 81       	ldd	r16, Y+6	; 0x06
    294e:	1f 81       	ldd	r17, Y+7	; 0x07
    2950:	91 01       	movw	r18, r2
    2952:	28 1b       	sub	r18, r24
    2954:	39 0b       	sbc	r19, r25
    2956:	b9 01       	movw	r22, r18
    2958:	37 ff       	sbrs	r19, 7
    295a:	04 c0       	rjmp	.+8      	; 0x2964 <_fpadd_parts+0xb2>
    295c:	66 27       	eor	r22, r22
    295e:	77 27       	eor	r23, r23
    2960:	62 1b       	sub	r22, r18
    2962:	73 0b       	sbc	r23, r19
    2964:	60 32       	cpi	r22, 0x20	; 32
    2966:	71 05       	cpc	r23, r1
    2968:	0c f0       	brlt	.+2      	; 0x296c <_fpadd_parts+0xba>
    296a:	61 c0       	rjmp	.+194    	; 0x2a2e <_fpadd_parts+0x17c>
    296c:	12 16       	cp	r1, r18
    296e:	13 06       	cpc	r1, r19
    2970:	6c f5       	brge	.+90     	; 0x29cc <_fpadd_parts+0x11a>
    2972:	37 01       	movw	r6, r14
    2974:	48 01       	movw	r8, r16
    2976:	06 2e       	mov	r0, r22
    2978:	04 c0       	rjmp	.+8      	; 0x2982 <_fpadd_parts+0xd0>
    297a:	96 94       	lsr	r9
    297c:	87 94       	ror	r8
    297e:	77 94       	ror	r7
    2980:	67 94       	ror	r6
    2982:	0a 94       	dec	r0
    2984:	d2 f7       	brpl	.-12     	; 0x297a <_fpadd_parts+0xc8>
    2986:	21 e0       	ldi	r18, 0x01	; 1
    2988:	30 e0       	ldi	r19, 0x00	; 0
    298a:	40 e0       	ldi	r20, 0x00	; 0
    298c:	50 e0       	ldi	r21, 0x00	; 0
    298e:	04 c0       	rjmp	.+8      	; 0x2998 <_fpadd_parts+0xe6>
    2990:	22 0f       	add	r18, r18
    2992:	33 1f       	adc	r19, r19
    2994:	44 1f       	adc	r20, r20
    2996:	55 1f       	adc	r21, r21
    2998:	6a 95       	dec	r22
    299a:	d2 f7       	brpl	.-12     	; 0x2990 <_fpadd_parts+0xde>
    299c:	21 50       	subi	r18, 0x01	; 1
    299e:	30 40       	sbci	r19, 0x00	; 0
    29a0:	40 40       	sbci	r20, 0x00	; 0
    29a2:	50 40       	sbci	r21, 0x00	; 0
    29a4:	2e 21       	and	r18, r14
    29a6:	3f 21       	and	r19, r15
    29a8:	40 23       	and	r20, r16
    29aa:	51 23       	and	r21, r17
    29ac:	21 15       	cp	r18, r1
    29ae:	31 05       	cpc	r19, r1
    29b0:	41 05       	cpc	r20, r1
    29b2:	51 05       	cpc	r21, r1
    29b4:	21 f0       	breq	.+8      	; 0x29be <_fpadd_parts+0x10c>
    29b6:	21 e0       	ldi	r18, 0x01	; 1
    29b8:	30 e0       	ldi	r19, 0x00	; 0
    29ba:	40 e0       	ldi	r20, 0x00	; 0
    29bc:	50 e0       	ldi	r21, 0x00	; 0
    29be:	79 01       	movw	r14, r18
    29c0:	8a 01       	movw	r16, r20
    29c2:	e6 28       	or	r14, r6
    29c4:	f7 28       	or	r15, r7
    29c6:	08 29       	or	r16, r8
    29c8:	19 29       	or	r17, r9
    29ca:	3c c0       	rjmp	.+120    	; 0x2a44 <_fpadd_parts+0x192>
    29cc:	23 2b       	or	r18, r19
    29ce:	d1 f1       	breq	.+116    	; 0x2a44 <_fpadd_parts+0x192>
    29d0:	26 0e       	add	r2, r22
    29d2:	37 1e       	adc	r3, r23
    29d4:	35 01       	movw	r6, r10
    29d6:	46 01       	movw	r8, r12
    29d8:	06 2e       	mov	r0, r22
    29da:	04 c0       	rjmp	.+8      	; 0x29e4 <_fpadd_parts+0x132>
    29dc:	96 94       	lsr	r9
    29de:	87 94       	ror	r8
    29e0:	77 94       	ror	r7
    29e2:	67 94       	ror	r6
    29e4:	0a 94       	dec	r0
    29e6:	d2 f7       	brpl	.-12     	; 0x29dc <_fpadd_parts+0x12a>
    29e8:	21 e0       	ldi	r18, 0x01	; 1
    29ea:	30 e0       	ldi	r19, 0x00	; 0
    29ec:	40 e0       	ldi	r20, 0x00	; 0
    29ee:	50 e0       	ldi	r21, 0x00	; 0
    29f0:	04 c0       	rjmp	.+8      	; 0x29fa <_fpadd_parts+0x148>
    29f2:	22 0f       	add	r18, r18
    29f4:	33 1f       	adc	r19, r19
    29f6:	44 1f       	adc	r20, r20
    29f8:	55 1f       	adc	r21, r21
    29fa:	6a 95       	dec	r22
    29fc:	d2 f7       	brpl	.-12     	; 0x29f2 <_fpadd_parts+0x140>
    29fe:	21 50       	subi	r18, 0x01	; 1
    2a00:	30 40       	sbci	r19, 0x00	; 0
    2a02:	40 40       	sbci	r20, 0x00	; 0
    2a04:	50 40       	sbci	r21, 0x00	; 0
    2a06:	2a 21       	and	r18, r10
    2a08:	3b 21       	and	r19, r11
    2a0a:	4c 21       	and	r20, r12
    2a0c:	5d 21       	and	r21, r13
    2a0e:	21 15       	cp	r18, r1
    2a10:	31 05       	cpc	r19, r1
    2a12:	41 05       	cpc	r20, r1
    2a14:	51 05       	cpc	r21, r1
    2a16:	21 f0       	breq	.+8      	; 0x2a20 <_fpadd_parts+0x16e>
    2a18:	21 e0       	ldi	r18, 0x01	; 1
    2a1a:	30 e0       	ldi	r19, 0x00	; 0
    2a1c:	40 e0       	ldi	r20, 0x00	; 0
    2a1e:	50 e0       	ldi	r21, 0x00	; 0
    2a20:	59 01       	movw	r10, r18
    2a22:	6a 01       	movw	r12, r20
    2a24:	a6 28       	or	r10, r6
    2a26:	b7 28       	or	r11, r7
    2a28:	c8 28       	or	r12, r8
    2a2a:	d9 28       	or	r13, r9
    2a2c:	0b c0       	rjmp	.+22     	; 0x2a44 <_fpadd_parts+0x192>
    2a2e:	82 15       	cp	r24, r2
    2a30:	93 05       	cpc	r25, r3
    2a32:	2c f0       	brlt	.+10     	; 0x2a3e <_fpadd_parts+0x18c>
    2a34:	1c 01       	movw	r2, r24
    2a36:	aa 24       	eor	r10, r10
    2a38:	bb 24       	eor	r11, r11
    2a3a:	65 01       	movw	r12, r10
    2a3c:	03 c0       	rjmp	.+6      	; 0x2a44 <_fpadd_parts+0x192>
    2a3e:	ee 24       	eor	r14, r14
    2a40:	ff 24       	eor	r15, r15
    2a42:	87 01       	movw	r16, r14
    2a44:	11 96       	adiw	r26, 0x01	; 1
    2a46:	9c 91       	ld	r25, X
    2a48:	d2 01       	movw	r26, r4
    2a4a:	11 96       	adiw	r26, 0x01	; 1
    2a4c:	8c 91       	ld	r24, X
    2a4e:	98 17       	cp	r25, r24
    2a50:	09 f4       	brne	.+2      	; 0x2a54 <_fpadd_parts+0x1a2>
    2a52:	45 c0       	rjmp	.+138    	; 0x2ade <_fpadd_parts+0x22c>
    2a54:	99 23       	and	r25, r25
    2a56:	39 f0       	breq	.+14     	; 0x2a66 <_fpadd_parts+0x1b4>
    2a58:	a8 01       	movw	r20, r16
    2a5a:	97 01       	movw	r18, r14
    2a5c:	2a 19       	sub	r18, r10
    2a5e:	3b 09       	sbc	r19, r11
    2a60:	4c 09       	sbc	r20, r12
    2a62:	5d 09       	sbc	r21, r13
    2a64:	06 c0       	rjmp	.+12     	; 0x2a72 <_fpadd_parts+0x1c0>
    2a66:	a6 01       	movw	r20, r12
    2a68:	95 01       	movw	r18, r10
    2a6a:	2e 19       	sub	r18, r14
    2a6c:	3f 09       	sbc	r19, r15
    2a6e:	40 0b       	sbc	r20, r16
    2a70:	51 0b       	sbc	r21, r17
    2a72:	57 fd       	sbrc	r21, 7
    2a74:	08 c0       	rjmp	.+16     	; 0x2a86 <_fpadd_parts+0x1d4>
    2a76:	11 82       	std	Z+1, r1	; 0x01
    2a78:	33 82       	std	Z+3, r3	; 0x03
    2a7a:	22 82       	std	Z+2, r2	; 0x02
    2a7c:	24 83       	std	Z+4, r18	; 0x04
    2a7e:	35 83       	std	Z+5, r19	; 0x05
    2a80:	46 83       	std	Z+6, r20	; 0x06
    2a82:	57 83       	std	Z+7, r21	; 0x07
    2a84:	1d c0       	rjmp	.+58     	; 0x2ac0 <_fpadd_parts+0x20e>
    2a86:	81 e0       	ldi	r24, 0x01	; 1
    2a88:	81 83       	std	Z+1, r24	; 0x01
    2a8a:	33 82       	std	Z+3, r3	; 0x03
    2a8c:	22 82       	std	Z+2, r2	; 0x02
    2a8e:	88 27       	eor	r24, r24
    2a90:	99 27       	eor	r25, r25
    2a92:	dc 01       	movw	r26, r24
    2a94:	82 1b       	sub	r24, r18
    2a96:	93 0b       	sbc	r25, r19
    2a98:	a4 0b       	sbc	r26, r20
    2a9a:	b5 0b       	sbc	r27, r21
    2a9c:	84 83       	std	Z+4, r24	; 0x04
    2a9e:	95 83       	std	Z+5, r25	; 0x05
    2aa0:	a6 83       	std	Z+6, r26	; 0x06
    2aa2:	b7 83       	std	Z+7, r27	; 0x07
    2aa4:	0d c0       	rjmp	.+26     	; 0x2ac0 <_fpadd_parts+0x20e>
    2aa6:	22 0f       	add	r18, r18
    2aa8:	33 1f       	adc	r19, r19
    2aaa:	44 1f       	adc	r20, r20
    2aac:	55 1f       	adc	r21, r21
    2aae:	24 83       	std	Z+4, r18	; 0x04
    2ab0:	35 83       	std	Z+5, r19	; 0x05
    2ab2:	46 83       	std	Z+6, r20	; 0x06
    2ab4:	57 83       	std	Z+7, r21	; 0x07
    2ab6:	82 81       	ldd	r24, Z+2	; 0x02
    2ab8:	93 81       	ldd	r25, Z+3	; 0x03
    2aba:	01 97       	sbiw	r24, 0x01	; 1
    2abc:	93 83       	std	Z+3, r25	; 0x03
    2abe:	82 83       	std	Z+2, r24	; 0x02
    2ac0:	24 81       	ldd	r18, Z+4	; 0x04
    2ac2:	35 81       	ldd	r19, Z+5	; 0x05
    2ac4:	46 81       	ldd	r20, Z+6	; 0x06
    2ac6:	57 81       	ldd	r21, Z+7	; 0x07
    2ac8:	da 01       	movw	r26, r20
    2aca:	c9 01       	movw	r24, r18
    2acc:	01 97       	sbiw	r24, 0x01	; 1
    2ace:	a1 09       	sbc	r26, r1
    2ad0:	b1 09       	sbc	r27, r1
    2ad2:	8f 5f       	subi	r24, 0xFF	; 255
    2ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    2ad6:	af 4f       	sbci	r26, 0xFF	; 255
    2ad8:	bf 43       	sbci	r27, 0x3F	; 63
    2ada:	28 f3       	brcs	.-54     	; 0x2aa6 <_fpadd_parts+0x1f4>
    2adc:	0b c0       	rjmp	.+22     	; 0x2af4 <_fpadd_parts+0x242>
    2ade:	91 83       	std	Z+1, r25	; 0x01
    2ae0:	33 82       	std	Z+3, r3	; 0x03
    2ae2:	22 82       	std	Z+2, r2	; 0x02
    2ae4:	ea 0c       	add	r14, r10
    2ae6:	fb 1c       	adc	r15, r11
    2ae8:	0c 1d       	adc	r16, r12
    2aea:	1d 1d       	adc	r17, r13
    2aec:	e4 82       	std	Z+4, r14	; 0x04
    2aee:	f5 82       	std	Z+5, r15	; 0x05
    2af0:	06 83       	std	Z+6, r16	; 0x06
    2af2:	17 83       	std	Z+7, r17	; 0x07
    2af4:	83 e0       	ldi	r24, 0x03	; 3
    2af6:	80 83       	st	Z, r24
    2af8:	24 81       	ldd	r18, Z+4	; 0x04
    2afa:	35 81       	ldd	r19, Z+5	; 0x05
    2afc:	46 81       	ldd	r20, Z+6	; 0x06
    2afe:	57 81       	ldd	r21, Z+7	; 0x07
    2b00:	57 ff       	sbrs	r21, 7
    2b02:	1a c0       	rjmp	.+52     	; 0x2b38 <_fpadd_parts+0x286>
    2b04:	c9 01       	movw	r24, r18
    2b06:	aa 27       	eor	r26, r26
    2b08:	97 fd       	sbrc	r25, 7
    2b0a:	a0 95       	com	r26
    2b0c:	ba 2f       	mov	r27, r26
    2b0e:	81 70       	andi	r24, 0x01	; 1
    2b10:	90 70       	andi	r25, 0x00	; 0
    2b12:	a0 70       	andi	r26, 0x00	; 0
    2b14:	b0 70       	andi	r27, 0x00	; 0
    2b16:	56 95       	lsr	r21
    2b18:	47 95       	ror	r20
    2b1a:	37 95       	ror	r19
    2b1c:	27 95       	ror	r18
    2b1e:	82 2b       	or	r24, r18
    2b20:	93 2b       	or	r25, r19
    2b22:	a4 2b       	or	r26, r20
    2b24:	b5 2b       	or	r27, r21
    2b26:	84 83       	std	Z+4, r24	; 0x04
    2b28:	95 83       	std	Z+5, r25	; 0x05
    2b2a:	a6 83       	std	Z+6, r26	; 0x06
    2b2c:	b7 83       	std	Z+7, r27	; 0x07
    2b2e:	82 81       	ldd	r24, Z+2	; 0x02
    2b30:	93 81       	ldd	r25, Z+3	; 0x03
    2b32:	01 96       	adiw	r24, 0x01	; 1
    2b34:	93 83       	std	Z+3, r25	; 0x03
    2b36:	82 83       	std	Z+2, r24	; 0x02
    2b38:	df 01       	movw	r26, r30
    2b3a:	01 c0       	rjmp	.+2      	; 0x2b3e <_fpadd_parts+0x28c>
    2b3c:	d2 01       	movw	r26, r4
    2b3e:	cd 01       	movw	r24, r26
    2b40:	cd b7       	in	r28, 0x3d	; 61
    2b42:	de b7       	in	r29, 0x3e	; 62
    2b44:	e2 e1       	ldi	r30, 0x12	; 18
    2b46:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__epilogue_restores__>

00002b4a <__subsf3>:
    2b4a:	a0 e2       	ldi	r26, 0x20	; 32
    2b4c:	b0 e0       	ldi	r27, 0x00	; 0
    2b4e:	eb ea       	ldi	r30, 0xAB	; 171
    2b50:	f5 e1       	ldi	r31, 0x15	; 21
    2b52:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
    2b56:	69 83       	std	Y+1, r22	; 0x01
    2b58:	7a 83       	std	Y+2, r23	; 0x02
    2b5a:	8b 83       	std	Y+3, r24	; 0x03
    2b5c:	9c 83       	std	Y+4, r25	; 0x04
    2b5e:	2d 83       	std	Y+5, r18	; 0x05
    2b60:	3e 83       	std	Y+6, r19	; 0x06
    2b62:	4f 83       	std	Y+7, r20	; 0x07
    2b64:	58 87       	std	Y+8, r21	; 0x08
    2b66:	e9 e0       	ldi	r30, 0x09	; 9
    2b68:	ee 2e       	mov	r14, r30
    2b6a:	f1 2c       	mov	r15, r1
    2b6c:	ec 0e       	add	r14, r28
    2b6e:	fd 1e       	adc	r15, r29
    2b70:	ce 01       	movw	r24, r28
    2b72:	01 96       	adiw	r24, 0x01	; 1
    2b74:	b7 01       	movw	r22, r14
    2b76:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2b7a:	8e 01       	movw	r16, r28
    2b7c:	0f 5e       	subi	r16, 0xEF	; 239
    2b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b80:	ce 01       	movw	r24, r28
    2b82:	05 96       	adiw	r24, 0x05	; 5
    2b84:	b8 01       	movw	r22, r16
    2b86:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2b8a:	8a 89       	ldd	r24, Y+18	; 0x12
    2b8c:	91 e0       	ldi	r25, 0x01	; 1
    2b8e:	89 27       	eor	r24, r25
    2b90:	8a 8b       	std	Y+18, r24	; 0x12
    2b92:	c7 01       	movw	r24, r14
    2b94:	b8 01       	movw	r22, r16
    2b96:	ae 01       	movw	r20, r28
    2b98:	47 5e       	subi	r20, 0xE7	; 231
    2b9a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b9c:	0e 94 59 14 	call	0x28b2	; 0x28b2 <_fpadd_parts>
    2ba0:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__pack_f>
    2ba4:	a0 96       	adiw	r28, 0x20	; 32
    2ba6:	e6 e0       	ldi	r30, 0x06	; 6
    2ba8:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00002bac <__addsf3>:
    2bac:	a0 e2       	ldi	r26, 0x20	; 32
    2bae:	b0 e0       	ldi	r27, 0x00	; 0
    2bb0:	ec ed       	ldi	r30, 0xDC	; 220
    2bb2:	f5 e1       	ldi	r31, 0x15	; 21
    2bb4:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
    2bb8:	69 83       	std	Y+1, r22	; 0x01
    2bba:	7a 83       	std	Y+2, r23	; 0x02
    2bbc:	8b 83       	std	Y+3, r24	; 0x03
    2bbe:	9c 83       	std	Y+4, r25	; 0x04
    2bc0:	2d 83       	std	Y+5, r18	; 0x05
    2bc2:	3e 83       	std	Y+6, r19	; 0x06
    2bc4:	4f 83       	std	Y+7, r20	; 0x07
    2bc6:	58 87       	std	Y+8, r21	; 0x08
    2bc8:	f9 e0       	ldi	r31, 0x09	; 9
    2bca:	ef 2e       	mov	r14, r31
    2bcc:	f1 2c       	mov	r15, r1
    2bce:	ec 0e       	add	r14, r28
    2bd0:	fd 1e       	adc	r15, r29
    2bd2:	ce 01       	movw	r24, r28
    2bd4:	01 96       	adiw	r24, 0x01	; 1
    2bd6:	b7 01       	movw	r22, r14
    2bd8:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2bdc:	8e 01       	movw	r16, r28
    2bde:	0f 5e       	subi	r16, 0xEF	; 239
    2be0:	1f 4f       	sbci	r17, 0xFF	; 255
    2be2:	ce 01       	movw	r24, r28
    2be4:	05 96       	adiw	r24, 0x05	; 5
    2be6:	b8 01       	movw	r22, r16
    2be8:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2bec:	c7 01       	movw	r24, r14
    2bee:	b8 01       	movw	r22, r16
    2bf0:	ae 01       	movw	r20, r28
    2bf2:	47 5e       	subi	r20, 0xE7	; 231
    2bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    2bf6:	0e 94 59 14 	call	0x28b2	; 0x28b2 <_fpadd_parts>
    2bfa:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__pack_f>
    2bfe:	a0 96       	adiw	r28, 0x20	; 32
    2c00:	e6 e0       	ldi	r30, 0x06	; 6
    2c02:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00002c06 <__mulsf3>:
    2c06:	a0 e2       	ldi	r26, 0x20	; 32
    2c08:	b0 e0       	ldi	r27, 0x00	; 0
    2c0a:	e9 e0       	ldi	r30, 0x09	; 9
    2c0c:	f6 e1       	ldi	r31, 0x16	; 22
    2c0e:	0c 94 87 19 	jmp	0x330e	; 0x330e <__prologue_saves__>
    2c12:	69 83       	std	Y+1, r22	; 0x01
    2c14:	7a 83       	std	Y+2, r23	; 0x02
    2c16:	8b 83       	std	Y+3, r24	; 0x03
    2c18:	9c 83       	std	Y+4, r25	; 0x04
    2c1a:	2d 83       	std	Y+5, r18	; 0x05
    2c1c:	3e 83       	std	Y+6, r19	; 0x06
    2c1e:	4f 83       	std	Y+7, r20	; 0x07
    2c20:	58 87       	std	Y+8, r21	; 0x08
    2c22:	ce 01       	movw	r24, r28
    2c24:	01 96       	adiw	r24, 0x01	; 1
    2c26:	be 01       	movw	r22, r28
    2c28:	67 5f       	subi	r22, 0xF7	; 247
    2c2a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c2c:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2c30:	ce 01       	movw	r24, r28
    2c32:	05 96       	adiw	r24, 0x05	; 5
    2c34:	be 01       	movw	r22, r28
    2c36:	6f 5e       	subi	r22, 0xEF	; 239
    2c38:	7f 4f       	sbci	r23, 0xFF	; 255
    2c3a:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2c3e:	99 85       	ldd	r25, Y+9	; 0x09
    2c40:	92 30       	cpi	r25, 0x02	; 2
    2c42:	88 f0       	brcs	.+34     	; 0x2c66 <__mulsf3+0x60>
    2c44:	89 89       	ldd	r24, Y+17	; 0x11
    2c46:	82 30       	cpi	r24, 0x02	; 2
    2c48:	c8 f0       	brcs	.+50     	; 0x2c7c <__mulsf3+0x76>
    2c4a:	94 30       	cpi	r25, 0x04	; 4
    2c4c:	19 f4       	brne	.+6      	; 0x2c54 <__mulsf3+0x4e>
    2c4e:	82 30       	cpi	r24, 0x02	; 2
    2c50:	51 f4       	brne	.+20     	; 0x2c66 <__mulsf3+0x60>
    2c52:	04 c0       	rjmp	.+8      	; 0x2c5c <__mulsf3+0x56>
    2c54:	84 30       	cpi	r24, 0x04	; 4
    2c56:	29 f4       	brne	.+10     	; 0x2c62 <__mulsf3+0x5c>
    2c58:	92 30       	cpi	r25, 0x02	; 2
    2c5a:	81 f4       	brne	.+32     	; 0x2c7c <__mulsf3+0x76>
    2c5c:	80 e7       	ldi	r24, 0x70	; 112
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	c6 c0       	rjmp	.+396    	; 0x2dee <__mulsf3+0x1e8>
    2c62:	92 30       	cpi	r25, 0x02	; 2
    2c64:	49 f4       	brne	.+18     	; 0x2c78 <__mulsf3+0x72>
    2c66:	20 e0       	ldi	r18, 0x00	; 0
    2c68:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c6a:	8a 89       	ldd	r24, Y+18	; 0x12
    2c6c:	98 13       	cpse	r25, r24
    2c6e:	21 e0       	ldi	r18, 0x01	; 1
    2c70:	2a 87       	std	Y+10, r18	; 0x0a
    2c72:	ce 01       	movw	r24, r28
    2c74:	09 96       	adiw	r24, 0x09	; 9
    2c76:	bb c0       	rjmp	.+374    	; 0x2dee <__mulsf3+0x1e8>
    2c78:	82 30       	cpi	r24, 0x02	; 2
    2c7a:	49 f4       	brne	.+18     	; 0x2c8e <__mulsf3+0x88>
    2c7c:	20 e0       	ldi	r18, 0x00	; 0
    2c7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c80:	8a 89       	ldd	r24, Y+18	; 0x12
    2c82:	98 13       	cpse	r25, r24
    2c84:	21 e0       	ldi	r18, 0x01	; 1
    2c86:	2a 8b       	std	Y+18, r18	; 0x12
    2c88:	ce 01       	movw	r24, r28
    2c8a:	41 96       	adiw	r24, 0x11	; 17
    2c8c:	b0 c0       	rjmp	.+352    	; 0x2dee <__mulsf3+0x1e8>
    2c8e:	2d 84       	ldd	r2, Y+13	; 0x0d
    2c90:	3e 84       	ldd	r3, Y+14	; 0x0e
    2c92:	4f 84       	ldd	r4, Y+15	; 0x0f
    2c94:	58 88       	ldd	r5, Y+16	; 0x10
    2c96:	6d 88       	ldd	r6, Y+21	; 0x15
    2c98:	7e 88       	ldd	r7, Y+22	; 0x16
    2c9a:	8f 88       	ldd	r8, Y+23	; 0x17
    2c9c:	98 8c       	ldd	r9, Y+24	; 0x18
    2c9e:	ee 24       	eor	r14, r14
    2ca0:	ff 24       	eor	r15, r15
    2ca2:	87 01       	movw	r16, r14
    2ca4:	aa 24       	eor	r10, r10
    2ca6:	bb 24       	eor	r11, r11
    2ca8:	65 01       	movw	r12, r10
    2caa:	40 e0       	ldi	r20, 0x00	; 0
    2cac:	50 e0       	ldi	r21, 0x00	; 0
    2cae:	60 e0       	ldi	r22, 0x00	; 0
    2cb0:	70 e0       	ldi	r23, 0x00	; 0
    2cb2:	e0 e0       	ldi	r30, 0x00	; 0
    2cb4:	f0 e0       	ldi	r31, 0x00	; 0
    2cb6:	c1 01       	movw	r24, r2
    2cb8:	81 70       	andi	r24, 0x01	; 1
    2cba:	90 70       	andi	r25, 0x00	; 0
    2cbc:	89 2b       	or	r24, r25
    2cbe:	e9 f0       	breq	.+58     	; 0x2cfa <__mulsf3+0xf4>
    2cc0:	e6 0c       	add	r14, r6
    2cc2:	f7 1c       	adc	r15, r7
    2cc4:	08 1d       	adc	r16, r8
    2cc6:	19 1d       	adc	r17, r9
    2cc8:	9a 01       	movw	r18, r20
    2cca:	ab 01       	movw	r20, r22
    2ccc:	2a 0d       	add	r18, r10
    2cce:	3b 1d       	adc	r19, r11
    2cd0:	4c 1d       	adc	r20, r12
    2cd2:	5d 1d       	adc	r21, r13
    2cd4:	80 e0       	ldi	r24, 0x00	; 0
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	a0 e0       	ldi	r26, 0x00	; 0
    2cda:	b0 e0       	ldi	r27, 0x00	; 0
    2cdc:	e6 14       	cp	r14, r6
    2cde:	f7 04       	cpc	r15, r7
    2ce0:	08 05       	cpc	r16, r8
    2ce2:	19 05       	cpc	r17, r9
    2ce4:	20 f4       	brcc	.+8      	; 0x2cee <__mulsf3+0xe8>
    2ce6:	81 e0       	ldi	r24, 0x01	; 1
    2ce8:	90 e0       	ldi	r25, 0x00	; 0
    2cea:	a0 e0       	ldi	r26, 0x00	; 0
    2cec:	b0 e0       	ldi	r27, 0x00	; 0
    2cee:	ba 01       	movw	r22, r20
    2cf0:	a9 01       	movw	r20, r18
    2cf2:	48 0f       	add	r20, r24
    2cf4:	59 1f       	adc	r21, r25
    2cf6:	6a 1f       	adc	r22, r26
    2cf8:	7b 1f       	adc	r23, r27
    2cfa:	aa 0c       	add	r10, r10
    2cfc:	bb 1c       	adc	r11, r11
    2cfe:	cc 1c       	adc	r12, r12
    2d00:	dd 1c       	adc	r13, r13
    2d02:	97 fe       	sbrs	r9, 7
    2d04:	08 c0       	rjmp	.+16     	; 0x2d16 <__mulsf3+0x110>
    2d06:	81 e0       	ldi	r24, 0x01	; 1
    2d08:	90 e0       	ldi	r25, 0x00	; 0
    2d0a:	a0 e0       	ldi	r26, 0x00	; 0
    2d0c:	b0 e0       	ldi	r27, 0x00	; 0
    2d0e:	a8 2a       	or	r10, r24
    2d10:	b9 2a       	or	r11, r25
    2d12:	ca 2a       	or	r12, r26
    2d14:	db 2a       	or	r13, r27
    2d16:	31 96       	adiw	r30, 0x01	; 1
    2d18:	e0 32       	cpi	r30, 0x20	; 32
    2d1a:	f1 05       	cpc	r31, r1
    2d1c:	49 f0       	breq	.+18     	; 0x2d30 <__mulsf3+0x12a>
    2d1e:	66 0c       	add	r6, r6
    2d20:	77 1c       	adc	r7, r7
    2d22:	88 1c       	adc	r8, r8
    2d24:	99 1c       	adc	r9, r9
    2d26:	56 94       	lsr	r5
    2d28:	47 94       	ror	r4
    2d2a:	37 94       	ror	r3
    2d2c:	27 94       	ror	r2
    2d2e:	c3 cf       	rjmp	.-122    	; 0x2cb6 <__mulsf3+0xb0>
    2d30:	fa 85       	ldd	r31, Y+10	; 0x0a
    2d32:	ea 89       	ldd	r30, Y+18	; 0x12
    2d34:	2b 89       	ldd	r18, Y+19	; 0x13
    2d36:	3c 89       	ldd	r19, Y+20	; 0x14
    2d38:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d3a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d3c:	28 0f       	add	r18, r24
    2d3e:	39 1f       	adc	r19, r25
    2d40:	2e 5f       	subi	r18, 0xFE	; 254
    2d42:	3f 4f       	sbci	r19, 0xFF	; 255
    2d44:	17 c0       	rjmp	.+46     	; 0x2d74 <__mulsf3+0x16e>
    2d46:	ca 01       	movw	r24, r20
    2d48:	81 70       	andi	r24, 0x01	; 1
    2d4a:	90 70       	andi	r25, 0x00	; 0
    2d4c:	89 2b       	or	r24, r25
    2d4e:	61 f0       	breq	.+24     	; 0x2d68 <__mulsf3+0x162>
    2d50:	16 95       	lsr	r17
    2d52:	07 95       	ror	r16
    2d54:	f7 94       	ror	r15
    2d56:	e7 94       	ror	r14
    2d58:	80 e0       	ldi	r24, 0x00	; 0
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	a0 e0       	ldi	r26, 0x00	; 0
    2d5e:	b0 e8       	ldi	r27, 0x80	; 128
    2d60:	e8 2a       	or	r14, r24
    2d62:	f9 2a       	or	r15, r25
    2d64:	0a 2b       	or	r16, r26
    2d66:	1b 2b       	or	r17, r27
    2d68:	76 95       	lsr	r23
    2d6a:	67 95       	ror	r22
    2d6c:	57 95       	ror	r21
    2d6e:	47 95       	ror	r20
    2d70:	2f 5f       	subi	r18, 0xFF	; 255
    2d72:	3f 4f       	sbci	r19, 0xFF	; 255
    2d74:	77 fd       	sbrc	r23, 7
    2d76:	e7 cf       	rjmp	.-50     	; 0x2d46 <__mulsf3+0x140>
    2d78:	0c c0       	rjmp	.+24     	; 0x2d92 <__mulsf3+0x18c>
    2d7a:	44 0f       	add	r20, r20
    2d7c:	55 1f       	adc	r21, r21
    2d7e:	66 1f       	adc	r22, r22
    2d80:	77 1f       	adc	r23, r23
    2d82:	17 fd       	sbrc	r17, 7
    2d84:	41 60       	ori	r20, 0x01	; 1
    2d86:	ee 0c       	add	r14, r14
    2d88:	ff 1c       	adc	r15, r15
    2d8a:	00 1f       	adc	r16, r16
    2d8c:	11 1f       	adc	r17, r17
    2d8e:	21 50       	subi	r18, 0x01	; 1
    2d90:	30 40       	sbci	r19, 0x00	; 0
    2d92:	40 30       	cpi	r20, 0x00	; 0
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	59 07       	cpc	r21, r25
    2d98:	90 e0       	ldi	r25, 0x00	; 0
    2d9a:	69 07       	cpc	r22, r25
    2d9c:	90 e4       	ldi	r25, 0x40	; 64
    2d9e:	79 07       	cpc	r23, r25
    2da0:	60 f3       	brcs	.-40     	; 0x2d7a <__mulsf3+0x174>
    2da2:	2b 8f       	std	Y+27, r18	; 0x1b
    2da4:	3c 8f       	std	Y+28, r19	; 0x1c
    2da6:	db 01       	movw	r26, r22
    2da8:	ca 01       	movw	r24, r20
    2daa:	8f 77       	andi	r24, 0x7F	; 127
    2dac:	90 70       	andi	r25, 0x00	; 0
    2dae:	a0 70       	andi	r26, 0x00	; 0
    2db0:	b0 70       	andi	r27, 0x00	; 0
    2db2:	80 34       	cpi	r24, 0x40	; 64
    2db4:	91 05       	cpc	r25, r1
    2db6:	a1 05       	cpc	r26, r1
    2db8:	b1 05       	cpc	r27, r1
    2dba:	61 f4       	brne	.+24     	; 0x2dd4 <__mulsf3+0x1ce>
    2dbc:	47 fd       	sbrc	r20, 7
    2dbe:	0a c0       	rjmp	.+20     	; 0x2dd4 <__mulsf3+0x1ce>
    2dc0:	e1 14       	cp	r14, r1
    2dc2:	f1 04       	cpc	r15, r1
    2dc4:	01 05       	cpc	r16, r1
    2dc6:	11 05       	cpc	r17, r1
    2dc8:	29 f0       	breq	.+10     	; 0x2dd4 <__mulsf3+0x1ce>
    2dca:	40 5c       	subi	r20, 0xC0	; 192
    2dcc:	5f 4f       	sbci	r21, 0xFF	; 255
    2dce:	6f 4f       	sbci	r22, 0xFF	; 255
    2dd0:	7f 4f       	sbci	r23, 0xFF	; 255
    2dd2:	40 78       	andi	r20, 0x80	; 128
    2dd4:	1a 8e       	std	Y+26, r1	; 0x1a
    2dd6:	fe 17       	cp	r31, r30
    2dd8:	11 f0       	breq	.+4      	; 0x2dde <__mulsf3+0x1d8>
    2dda:	81 e0       	ldi	r24, 0x01	; 1
    2ddc:	8a 8f       	std	Y+26, r24	; 0x1a
    2dde:	4d 8f       	std	Y+29, r20	; 0x1d
    2de0:	5e 8f       	std	Y+30, r21	; 0x1e
    2de2:	6f 8f       	std	Y+31, r22	; 0x1f
    2de4:	78 a3       	std	Y+32, r23	; 0x20
    2de6:	83 e0       	ldi	r24, 0x03	; 3
    2de8:	89 8f       	std	Y+25, r24	; 0x19
    2dea:	ce 01       	movw	r24, r28
    2dec:	49 96       	adiw	r24, 0x19	; 25
    2dee:	0e 94 e1 17 	call	0x2fc2	; 0x2fc2 <__pack_f>
    2df2:	a0 96       	adiw	r28, 0x20	; 32
    2df4:	e2 e1       	ldi	r30, 0x12	; 18
    2df6:	0c 94 a3 19 	jmp	0x3346	; 0x3346 <__epilogue_restores__>

00002dfa <__gtsf2>:
    2dfa:	a8 e1       	ldi	r26, 0x18	; 24
    2dfc:	b0 e0       	ldi	r27, 0x00	; 0
    2dfe:	e3 e0       	ldi	r30, 0x03	; 3
    2e00:	f7 e1       	ldi	r31, 0x17	; 23
    2e02:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
    2e06:	69 83       	std	Y+1, r22	; 0x01
    2e08:	7a 83       	std	Y+2, r23	; 0x02
    2e0a:	8b 83       	std	Y+3, r24	; 0x03
    2e0c:	9c 83       	std	Y+4, r25	; 0x04
    2e0e:	2d 83       	std	Y+5, r18	; 0x05
    2e10:	3e 83       	std	Y+6, r19	; 0x06
    2e12:	4f 83       	std	Y+7, r20	; 0x07
    2e14:	58 87       	std	Y+8, r21	; 0x08
    2e16:	89 e0       	ldi	r24, 0x09	; 9
    2e18:	e8 2e       	mov	r14, r24
    2e1a:	f1 2c       	mov	r15, r1
    2e1c:	ec 0e       	add	r14, r28
    2e1e:	fd 1e       	adc	r15, r29
    2e20:	ce 01       	movw	r24, r28
    2e22:	01 96       	adiw	r24, 0x01	; 1
    2e24:	b7 01       	movw	r22, r14
    2e26:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2e2a:	8e 01       	movw	r16, r28
    2e2c:	0f 5e       	subi	r16, 0xEF	; 239
    2e2e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e30:	ce 01       	movw	r24, r28
    2e32:	05 96       	adiw	r24, 0x05	; 5
    2e34:	b8 01       	movw	r22, r16
    2e36:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2e3a:	89 85       	ldd	r24, Y+9	; 0x09
    2e3c:	82 30       	cpi	r24, 0x02	; 2
    2e3e:	40 f0       	brcs	.+16     	; 0x2e50 <__gtsf2+0x56>
    2e40:	89 89       	ldd	r24, Y+17	; 0x11
    2e42:	82 30       	cpi	r24, 0x02	; 2
    2e44:	28 f0       	brcs	.+10     	; 0x2e50 <__gtsf2+0x56>
    2e46:	c7 01       	movw	r24, r14
    2e48:	b8 01       	movw	r22, r16
    2e4a:	0e 94 2e 19 	call	0x325c	; 0x325c <__fpcmp_parts_f>
    2e4e:	01 c0       	rjmp	.+2      	; 0x2e52 <__gtsf2+0x58>
    2e50:	8f ef       	ldi	r24, 0xFF	; 255
    2e52:	68 96       	adiw	r28, 0x18	; 24
    2e54:	e6 e0       	ldi	r30, 0x06	; 6
    2e56:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00002e5a <__gesf2>:
    2e5a:	a8 e1       	ldi	r26, 0x18	; 24
    2e5c:	b0 e0       	ldi	r27, 0x00	; 0
    2e5e:	e3 e3       	ldi	r30, 0x33	; 51
    2e60:	f7 e1       	ldi	r31, 0x17	; 23
    2e62:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
    2e66:	69 83       	std	Y+1, r22	; 0x01
    2e68:	7a 83       	std	Y+2, r23	; 0x02
    2e6a:	8b 83       	std	Y+3, r24	; 0x03
    2e6c:	9c 83       	std	Y+4, r25	; 0x04
    2e6e:	2d 83       	std	Y+5, r18	; 0x05
    2e70:	3e 83       	std	Y+6, r19	; 0x06
    2e72:	4f 83       	std	Y+7, r20	; 0x07
    2e74:	58 87       	std	Y+8, r21	; 0x08
    2e76:	89 e0       	ldi	r24, 0x09	; 9
    2e78:	e8 2e       	mov	r14, r24
    2e7a:	f1 2c       	mov	r15, r1
    2e7c:	ec 0e       	add	r14, r28
    2e7e:	fd 1e       	adc	r15, r29
    2e80:	ce 01       	movw	r24, r28
    2e82:	01 96       	adiw	r24, 0x01	; 1
    2e84:	b7 01       	movw	r22, r14
    2e86:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2e8a:	8e 01       	movw	r16, r28
    2e8c:	0f 5e       	subi	r16, 0xEF	; 239
    2e8e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e90:	ce 01       	movw	r24, r28
    2e92:	05 96       	adiw	r24, 0x05	; 5
    2e94:	b8 01       	movw	r22, r16
    2e96:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2e9a:	89 85       	ldd	r24, Y+9	; 0x09
    2e9c:	82 30       	cpi	r24, 0x02	; 2
    2e9e:	40 f0       	brcs	.+16     	; 0x2eb0 <__gesf2+0x56>
    2ea0:	89 89       	ldd	r24, Y+17	; 0x11
    2ea2:	82 30       	cpi	r24, 0x02	; 2
    2ea4:	28 f0       	brcs	.+10     	; 0x2eb0 <__gesf2+0x56>
    2ea6:	c7 01       	movw	r24, r14
    2ea8:	b8 01       	movw	r22, r16
    2eaa:	0e 94 2e 19 	call	0x325c	; 0x325c <__fpcmp_parts_f>
    2eae:	01 c0       	rjmp	.+2      	; 0x2eb2 <__gesf2+0x58>
    2eb0:	8f ef       	ldi	r24, 0xFF	; 255
    2eb2:	68 96       	adiw	r28, 0x18	; 24
    2eb4:	e6 e0       	ldi	r30, 0x06	; 6
    2eb6:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00002eba <__ltsf2>:
    2eba:	a8 e1       	ldi	r26, 0x18	; 24
    2ebc:	b0 e0       	ldi	r27, 0x00	; 0
    2ebe:	e3 e6       	ldi	r30, 0x63	; 99
    2ec0:	f7 e1       	ldi	r31, 0x17	; 23
    2ec2:	0c 94 93 19 	jmp	0x3326	; 0x3326 <__prologue_saves__+0x18>
    2ec6:	69 83       	std	Y+1, r22	; 0x01
    2ec8:	7a 83       	std	Y+2, r23	; 0x02
    2eca:	8b 83       	std	Y+3, r24	; 0x03
    2ecc:	9c 83       	std	Y+4, r25	; 0x04
    2ece:	2d 83       	std	Y+5, r18	; 0x05
    2ed0:	3e 83       	std	Y+6, r19	; 0x06
    2ed2:	4f 83       	std	Y+7, r20	; 0x07
    2ed4:	58 87       	std	Y+8, r21	; 0x08
    2ed6:	89 e0       	ldi	r24, 0x09	; 9
    2ed8:	e8 2e       	mov	r14, r24
    2eda:	f1 2c       	mov	r15, r1
    2edc:	ec 0e       	add	r14, r28
    2ede:	fd 1e       	adc	r15, r29
    2ee0:	ce 01       	movw	r24, r28
    2ee2:	01 96       	adiw	r24, 0x01	; 1
    2ee4:	b7 01       	movw	r22, r14
    2ee6:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2eea:	8e 01       	movw	r16, r28
    2eec:	0f 5e       	subi	r16, 0xEF	; 239
    2eee:	1f 4f       	sbci	r17, 0xFF	; 255
    2ef0:	ce 01       	movw	r24, r28
    2ef2:	05 96       	adiw	r24, 0x05	; 5
    2ef4:	b8 01       	movw	r22, r16
    2ef6:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2efa:	89 85       	ldd	r24, Y+9	; 0x09
    2efc:	82 30       	cpi	r24, 0x02	; 2
    2efe:	40 f0       	brcs	.+16     	; 0x2f10 <__ltsf2+0x56>
    2f00:	89 89       	ldd	r24, Y+17	; 0x11
    2f02:	82 30       	cpi	r24, 0x02	; 2
    2f04:	28 f0       	brcs	.+10     	; 0x2f10 <__ltsf2+0x56>
    2f06:	c7 01       	movw	r24, r14
    2f08:	b8 01       	movw	r22, r16
    2f0a:	0e 94 2e 19 	call	0x325c	; 0x325c <__fpcmp_parts_f>
    2f0e:	01 c0       	rjmp	.+2      	; 0x2f12 <__ltsf2+0x58>
    2f10:	81 e0       	ldi	r24, 0x01	; 1
    2f12:	68 96       	adiw	r28, 0x18	; 24
    2f14:	e6 e0       	ldi	r30, 0x06	; 6
    2f16:	0c 94 af 19 	jmp	0x335e	; 0x335e <__epilogue_restores__+0x18>

00002f1a <__fixsfsi>:
    2f1a:	ac e0       	ldi	r26, 0x0C	; 12
    2f1c:	b0 e0       	ldi	r27, 0x00	; 0
    2f1e:	e3 e9       	ldi	r30, 0x93	; 147
    2f20:	f7 e1       	ldi	r31, 0x17	; 23
    2f22:	0c 94 97 19 	jmp	0x332e	; 0x332e <__prologue_saves__+0x20>
    2f26:	69 83       	std	Y+1, r22	; 0x01
    2f28:	7a 83       	std	Y+2, r23	; 0x02
    2f2a:	8b 83       	std	Y+3, r24	; 0x03
    2f2c:	9c 83       	std	Y+4, r25	; 0x04
    2f2e:	ce 01       	movw	r24, r28
    2f30:	01 96       	adiw	r24, 0x01	; 1
    2f32:	be 01       	movw	r22, r28
    2f34:	6b 5f       	subi	r22, 0xFB	; 251
    2f36:	7f 4f       	sbci	r23, 0xFF	; 255
    2f38:	0e 94 b6 18 	call	0x316c	; 0x316c <__unpack_f>
    2f3c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f3e:	82 30       	cpi	r24, 0x02	; 2
    2f40:	61 f1       	breq	.+88     	; 0x2f9a <__fixsfsi+0x80>
    2f42:	82 30       	cpi	r24, 0x02	; 2
    2f44:	50 f1       	brcs	.+84     	; 0x2f9a <__fixsfsi+0x80>
    2f46:	84 30       	cpi	r24, 0x04	; 4
    2f48:	21 f4       	brne	.+8      	; 0x2f52 <__fixsfsi+0x38>
    2f4a:	8e 81       	ldd	r24, Y+6	; 0x06
    2f4c:	88 23       	and	r24, r24
    2f4e:	51 f1       	breq	.+84     	; 0x2fa4 <__fixsfsi+0x8a>
    2f50:	2e c0       	rjmp	.+92     	; 0x2fae <__fixsfsi+0x94>
    2f52:	2f 81       	ldd	r18, Y+7	; 0x07
    2f54:	38 85       	ldd	r19, Y+8	; 0x08
    2f56:	37 fd       	sbrc	r19, 7
    2f58:	20 c0       	rjmp	.+64     	; 0x2f9a <__fixsfsi+0x80>
    2f5a:	6e 81       	ldd	r22, Y+6	; 0x06
    2f5c:	2f 31       	cpi	r18, 0x1F	; 31
    2f5e:	31 05       	cpc	r19, r1
    2f60:	1c f0       	brlt	.+6      	; 0x2f68 <__fixsfsi+0x4e>
    2f62:	66 23       	and	r22, r22
    2f64:	f9 f0       	breq	.+62     	; 0x2fa4 <__fixsfsi+0x8a>
    2f66:	23 c0       	rjmp	.+70     	; 0x2fae <__fixsfsi+0x94>
    2f68:	8e e1       	ldi	r24, 0x1E	; 30
    2f6a:	90 e0       	ldi	r25, 0x00	; 0
    2f6c:	82 1b       	sub	r24, r18
    2f6e:	93 0b       	sbc	r25, r19
    2f70:	29 85       	ldd	r18, Y+9	; 0x09
    2f72:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f74:	4b 85       	ldd	r20, Y+11	; 0x0b
    2f76:	5c 85       	ldd	r21, Y+12	; 0x0c
    2f78:	04 c0       	rjmp	.+8      	; 0x2f82 <__fixsfsi+0x68>
    2f7a:	56 95       	lsr	r21
    2f7c:	47 95       	ror	r20
    2f7e:	37 95       	ror	r19
    2f80:	27 95       	ror	r18
    2f82:	8a 95       	dec	r24
    2f84:	d2 f7       	brpl	.-12     	; 0x2f7a <__fixsfsi+0x60>
    2f86:	66 23       	and	r22, r22
    2f88:	b1 f0       	breq	.+44     	; 0x2fb6 <__fixsfsi+0x9c>
    2f8a:	50 95       	com	r21
    2f8c:	40 95       	com	r20
    2f8e:	30 95       	com	r19
    2f90:	21 95       	neg	r18
    2f92:	3f 4f       	sbci	r19, 0xFF	; 255
    2f94:	4f 4f       	sbci	r20, 0xFF	; 255
    2f96:	5f 4f       	sbci	r21, 0xFF	; 255
    2f98:	0e c0       	rjmp	.+28     	; 0x2fb6 <__fixsfsi+0x9c>
    2f9a:	20 e0       	ldi	r18, 0x00	; 0
    2f9c:	30 e0       	ldi	r19, 0x00	; 0
    2f9e:	40 e0       	ldi	r20, 0x00	; 0
    2fa0:	50 e0       	ldi	r21, 0x00	; 0
    2fa2:	09 c0       	rjmp	.+18     	; 0x2fb6 <__fixsfsi+0x9c>
    2fa4:	2f ef       	ldi	r18, 0xFF	; 255
    2fa6:	3f ef       	ldi	r19, 0xFF	; 255
    2fa8:	4f ef       	ldi	r20, 0xFF	; 255
    2faa:	5f e7       	ldi	r21, 0x7F	; 127
    2fac:	04 c0       	rjmp	.+8      	; 0x2fb6 <__fixsfsi+0x9c>
    2fae:	20 e0       	ldi	r18, 0x00	; 0
    2fb0:	30 e0       	ldi	r19, 0x00	; 0
    2fb2:	40 e0       	ldi	r20, 0x00	; 0
    2fb4:	50 e8       	ldi	r21, 0x80	; 128
    2fb6:	b9 01       	movw	r22, r18
    2fb8:	ca 01       	movw	r24, r20
    2fba:	2c 96       	adiw	r28, 0x0c	; 12
    2fbc:	e2 e0       	ldi	r30, 0x02	; 2
    2fbe:	0c 94 b3 19 	jmp	0x3366	; 0x3366 <__epilogue_restores__+0x20>

00002fc2 <__pack_f>:
    2fc2:	df 92       	push	r13
    2fc4:	ef 92       	push	r14
    2fc6:	ff 92       	push	r15
    2fc8:	0f 93       	push	r16
    2fca:	1f 93       	push	r17
    2fcc:	fc 01       	movw	r30, r24
    2fce:	e4 80       	ldd	r14, Z+4	; 0x04
    2fd0:	f5 80       	ldd	r15, Z+5	; 0x05
    2fd2:	06 81       	ldd	r16, Z+6	; 0x06
    2fd4:	17 81       	ldd	r17, Z+7	; 0x07
    2fd6:	d1 80       	ldd	r13, Z+1	; 0x01
    2fd8:	80 81       	ld	r24, Z
    2fda:	82 30       	cpi	r24, 0x02	; 2
    2fdc:	48 f4       	brcc	.+18     	; 0x2ff0 <__pack_f+0x2e>
    2fde:	80 e0       	ldi	r24, 0x00	; 0
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	a0 e1       	ldi	r26, 0x10	; 16
    2fe4:	b0 e0       	ldi	r27, 0x00	; 0
    2fe6:	e8 2a       	or	r14, r24
    2fe8:	f9 2a       	or	r15, r25
    2fea:	0a 2b       	or	r16, r26
    2fec:	1b 2b       	or	r17, r27
    2fee:	a5 c0       	rjmp	.+330    	; 0x313a <__pack_f+0x178>
    2ff0:	84 30       	cpi	r24, 0x04	; 4
    2ff2:	09 f4       	brne	.+2      	; 0x2ff6 <__pack_f+0x34>
    2ff4:	9f c0       	rjmp	.+318    	; 0x3134 <__pack_f+0x172>
    2ff6:	82 30       	cpi	r24, 0x02	; 2
    2ff8:	21 f4       	brne	.+8      	; 0x3002 <__pack_f+0x40>
    2ffa:	ee 24       	eor	r14, r14
    2ffc:	ff 24       	eor	r15, r15
    2ffe:	87 01       	movw	r16, r14
    3000:	05 c0       	rjmp	.+10     	; 0x300c <__pack_f+0x4a>
    3002:	e1 14       	cp	r14, r1
    3004:	f1 04       	cpc	r15, r1
    3006:	01 05       	cpc	r16, r1
    3008:	11 05       	cpc	r17, r1
    300a:	19 f4       	brne	.+6      	; 0x3012 <__pack_f+0x50>
    300c:	e0 e0       	ldi	r30, 0x00	; 0
    300e:	f0 e0       	ldi	r31, 0x00	; 0
    3010:	96 c0       	rjmp	.+300    	; 0x313e <__pack_f+0x17c>
    3012:	62 81       	ldd	r22, Z+2	; 0x02
    3014:	73 81       	ldd	r23, Z+3	; 0x03
    3016:	9f ef       	ldi	r25, 0xFF	; 255
    3018:	62 38       	cpi	r22, 0x82	; 130
    301a:	79 07       	cpc	r23, r25
    301c:	0c f0       	brlt	.+2      	; 0x3020 <__pack_f+0x5e>
    301e:	5b c0       	rjmp	.+182    	; 0x30d6 <__pack_f+0x114>
    3020:	22 e8       	ldi	r18, 0x82	; 130
    3022:	3f ef       	ldi	r19, 0xFF	; 255
    3024:	26 1b       	sub	r18, r22
    3026:	37 0b       	sbc	r19, r23
    3028:	2a 31       	cpi	r18, 0x1A	; 26
    302a:	31 05       	cpc	r19, r1
    302c:	2c f0       	brlt	.+10     	; 0x3038 <__pack_f+0x76>
    302e:	20 e0       	ldi	r18, 0x00	; 0
    3030:	30 e0       	ldi	r19, 0x00	; 0
    3032:	40 e0       	ldi	r20, 0x00	; 0
    3034:	50 e0       	ldi	r21, 0x00	; 0
    3036:	2a c0       	rjmp	.+84     	; 0x308c <__pack_f+0xca>
    3038:	b8 01       	movw	r22, r16
    303a:	a7 01       	movw	r20, r14
    303c:	02 2e       	mov	r0, r18
    303e:	04 c0       	rjmp	.+8      	; 0x3048 <__pack_f+0x86>
    3040:	76 95       	lsr	r23
    3042:	67 95       	ror	r22
    3044:	57 95       	ror	r21
    3046:	47 95       	ror	r20
    3048:	0a 94       	dec	r0
    304a:	d2 f7       	brpl	.-12     	; 0x3040 <__pack_f+0x7e>
    304c:	81 e0       	ldi	r24, 0x01	; 1
    304e:	90 e0       	ldi	r25, 0x00	; 0
    3050:	a0 e0       	ldi	r26, 0x00	; 0
    3052:	b0 e0       	ldi	r27, 0x00	; 0
    3054:	04 c0       	rjmp	.+8      	; 0x305e <__pack_f+0x9c>
    3056:	88 0f       	add	r24, r24
    3058:	99 1f       	adc	r25, r25
    305a:	aa 1f       	adc	r26, r26
    305c:	bb 1f       	adc	r27, r27
    305e:	2a 95       	dec	r18
    3060:	d2 f7       	brpl	.-12     	; 0x3056 <__pack_f+0x94>
    3062:	01 97       	sbiw	r24, 0x01	; 1
    3064:	a1 09       	sbc	r26, r1
    3066:	b1 09       	sbc	r27, r1
    3068:	8e 21       	and	r24, r14
    306a:	9f 21       	and	r25, r15
    306c:	a0 23       	and	r26, r16
    306e:	b1 23       	and	r27, r17
    3070:	00 97       	sbiw	r24, 0x00	; 0
    3072:	a1 05       	cpc	r26, r1
    3074:	b1 05       	cpc	r27, r1
    3076:	21 f0       	breq	.+8      	; 0x3080 <__pack_f+0xbe>
    3078:	81 e0       	ldi	r24, 0x01	; 1
    307a:	90 e0       	ldi	r25, 0x00	; 0
    307c:	a0 e0       	ldi	r26, 0x00	; 0
    307e:	b0 e0       	ldi	r27, 0x00	; 0
    3080:	9a 01       	movw	r18, r20
    3082:	ab 01       	movw	r20, r22
    3084:	28 2b       	or	r18, r24
    3086:	39 2b       	or	r19, r25
    3088:	4a 2b       	or	r20, r26
    308a:	5b 2b       	or	r21, r27
    308c:	da 01       	movw	r26, r20
    308e:	c9 01       	movw	r24, r18
    3090:	8f 77       	andi	r24, 0x7F	; 127
    3092:	90 70       	andi	r25, 0x00	; 0
    3094:	a0 70       	andi	r26, 0x00	; 0
    3096:	b0 70       	andi	r27, 0x00	; 0
    3098:	80 34       	cpi	r24, 0x40	; 64
    309a:	91 05       	cpc	r25, r1
    309c:	a1 05       	cpc	r26, r1
    309e:	b1 05       	cpc	r27, r1
    30a0:	39 f4       	brne	.+14     	; 0x30b0 <__pack_f+0xee>
    30a2:	27 ff       	sbrs	r18, 7
    30a4:	09 c0       	rjmp	.+18     	; 0x30b8 <__pack_f+0xf6>
    30a6:	20 5c       	subi	r18, 0xC0	; 192
    30a8:	3f 4f       	sbci	r19, 0xFF	; 255
    30aa:	4f 4f       	sbci	r20, 0xFF	; 255
    30ac:	5f 4f       	sbci	r21, 0xFF	; 255
    30ae:	04 c0       	rjmp	.+8      	; 0x30b8 <__pack_f+0xf6>
    30b0:	21 5c       	subi	r18, 0xC1	; 193
    30b2:	3f 4f       	sbci	r19, 0xFF	; 255
    30b4:	4f 4f       	sbci	r20, 0xFF	; 255
    30b6:	5f 4f       	sbci	r21, 0xFF	; 255
    30b8:	e0 e0       	ldi	r30, 0x00	; 0
    30ba:	f0 e0       	ldi	r31, 0x00	; 0
    30bc:	20 30       	cpi	r18, 0x00	; 0
    30be:	a0 e0       	ldi	r26, 0x00	; 0
    30c0:	3a 07       	cpc	r19, r26
    30c2:	a0 e0       	ldi	r26, 0x00	; 0
    30c4:	4a 07       	cpc	r20, r26
    30c6:	a0 e4       	ldi	r26, 0x40	; 64
    30c8:	5a 07       	cpc	r21, r26
    30ca:	10 f0       	brcs	.+4      	; 0x30d0 <__pack_f+0x10e>
    30cc:	e1 e0       	ldi	r30, 0x01	; 1
    30ce:	f0 e0       	ldi	r31, 0x00	; 0
    30d0:	79 01       	movw	r14, r18
    30d2:	8a 01       	movw	r16, r20
    30d4:	27 c0       	rjmp	.+78     	; 0x3124 <__pack_f+0x162>
    30d6:	60 38       	cpi	r22, 0x80	; 128
    30d8:	71 05       	cpc	r23, r1
    30da:	64 f5       	brge	.+88     	; 0x3134 <__pack_f+0x172>
    30dc:	fb 01       	movw	r30, r22
    30de:	e1 58       	subi	r30, 0x81	; 129
    30e0:	ff 4f       	sbci	r31, 0xFF	; 255
    30e2:	d8 01       	movw	r26, r16
    30e4:	c7 01       	movw	r24, r14
    30e6:	8f 77       	andi	r24, 0x7F	; 127
    30e8:	90 70       	andi	r25, 0x00	; 0
    30ea:	a0 70       	andi	r26, 0x00	; 0
    30ec:	b0 70       	andi	r27, 0x00	; 0
    30ee:	80 34       	cpi	r24, 0x40	; 64
    30f0:	91 05       	cpc	r25, r1
    30f2:	a1 05       	cpc	r26, r1
    30f4:	b1 05       	cpc	r27, r1
    30f6:	39 f4       	brne	.+14     	; 0x3106 <__pack_f+0x144>
    30f8:	e7 fe       	sbrs	r14, 7
    30fa:	0d c0       	rjmp	.+26     	; 0x3116 <__pack_f+0x154>
    30fc:	80 e4       	ldi	r24, 0x40	; 64
    30fe:	90 e0       	ldi	r25, 0x00	; 0
    3100:	a0 e0       	ldi	r26, 0x00	; 0
    3102:	b0 e0       	ldi	r27, 0x00	; 0
    3104:	04 c0       	rjmp	.+8      	; 0x310e <__pack_f+0x14c>
    3106:	8f e3       	ldi	r24, 0x3F	; 63
    3108:	90 e0       	ldi	r25, 0x00	; 0
    310a:	a0 e0       	ldi	r26, 0x00	; 0
    310c:	b0 e0       	ldi	r27, 0x00	; 0
    310e:	e8 0e       	add	r14, r24
    3110:	f9 1e       	adc	r15, r25
    3112:	0a 1f       	adc	r16, r26
    3114:	1b 1f       	adc	r17, r27
    3116:	17 ff       	sbrs	r17, 7
    3118:	05 c0       	rjmp	.+10     	; 0x3124 <__pack_f+0x162>
    311a:	16 95       	lsr	r17
    311c:	07 95       	ror	r16
    311e:	f7 94       	ror	r15
    3120:	e7 94       	ror	r14
    3122:	31 96       	adiw	r30, 0x01	; 1
    3124:	87 e0       	ldi	r24, 0x07	; 7
    3126:	16 95       	lsr	r17
    3128:	07 95       	ror	r16
    312a:	f7 94       	ror	r15
    312c:	e7 94       	ror	r14
    312e:	8a 95       	dec	r24
    3130:	d1 f7       	brne	.-12     	; 0x3126 <__pack_f+0x164>
    3132:	05 c0       	rjmp	.+10     	; 0x313e <__pack_f+0x17c>
    3134:	ee 24       	eor	r14, r14
    3136:	ff 24       	eor	r15, r15
    3138:	87 01       	movw	r16, r14
    313a:	ef ef       	ldi	r30, 0xFF	; 255
    313c:	f0 e0       	ldi	r31, 0x00	; 0
    313e:	6e 2f       	mov	r22, r30
    3140:	67 95       	ror	r22
    3142:	66 27       	eor	r22, r22
    3144:	67 95       	ror	r22
    3146:	90 2f       	mov	r25, r16
    3148:	9f 77       	andi	r25, 0x7F	; 127
    314a:	d7 94       	ror	r13
    314c:	dd 24       	eor	r13, r13
    314e:	d7 94       	ror	r13
    3150:	8e 2f       	mov	r24, r30
    3152:	86 95       	lsr	r24
    3154:	49 2f       	mov	r20, r25
    3156:	46 2b       	or	r20, r22
    3158:	58 2f       	mov	r21, r24
    315a:	5d 29       	or	r21, r13
    315c:	b7 01       	movw	r22, r14
    315e:	ca 01       	movw	r24, r20
    3160:	1f 91       	pop	r17
    3162:	0f 91       	pop	r16
    3164:	ff 90       	pop	r15
    3166:	ef 90       	pop	r14
    3168:	df 90       	pop	r13
    316a:	08 95       	ret

0000316c <__unpack_f>:
    316c:	fc 01       	movw	r30, r24
    316e:	db 01       	movw	r26, r22
    3170:	40 81       	ld	r20, Z
    3172:	51 81       	ldd	r21, Z+1	; 0x01
    3174:	22 81       	ldd	r18, Z+2	; 0x02
    3176:	62 2f       	mov	r22, r18
    3178:	6f 77       	andi	r22, 0x7F	; 127
    317a:	70 e0       	ldi	r23, 0x00	; 0
    317c:	22 1f       	adc	r18, r18
    317e:	22 27       	eor	r18, r18
    3180:	22 1f       	adc	r18, r18
    3182:	93 81       	ldd	r25, Z+3	; 0x03
    3184:	89 2f       	mov	r24, r25
    3186:	88 0f       	add	r24, r24
    3188:	82 2b       	or	r24, r18
    318a:	28 2f       	mov	r18, r24
    318c:	30 e0       	ldi	r19, 0x00	; 0
    318e:	99 1f       	adc	r25, r25
    3190:	99 27       	eor	r25, r25
    3192:	99 1f       	adc	r25, r25
    3194:	11 96       	adiw	r26, 0x01	; 1
    3196:	9c 93       	st	X, r25
    3198:	11 97       	sbiw	r26, 0x01	; 1
    319a:	21 15       	cp	r18, r1
    319c:	31 05       	cpc	r19, r1
    319e:	a9 f5       	brne	.+106    	; 0x320a <__unpack_f+0x9e>
    31a0:	41 15       	cp	r20, r1
    31a2:	51 05       	cpc	r21, r1
    31a4:	61 05       	cpc	r22, r1
    31a6:	71 05       	cpc	r23, r1
    31a8:	11 f4       	brne	.+4      	; 0x31ae <__unpack_f+0x42>
    31aa:	82 e0       	ldi	r24, 0x02	; 2
    31ac:	37 c0       	rjmp	.+110    	; 0x321c <__unpack_f+0xb0>
    31ae:	82 e8       	ldi	r24, 0x82	; 130
    31b0:	9f ef       	ldi	r25, 0xFF	; 255
    31b2:	13 96       	adiw	r26, 0x03	; 3
    31b4:	9c 93       	st	X, r25
    31b6:	8e 93       	st	-X, r24
    31b8:	12 97       	sbiw	r26, 0x02	; 2
    31ba:	9a 01       	movw	r18, r20
    31bc:	ab 01       	movw	r20, r22
    31be:	67 e0       	ldi	r22, 0x07	; 7
    31c0:	22 0f       	add	r18, r18
    31c2:	33 1f       	adc	r19, r19
    31c4:	44 1f       	adc	r20, r20
    31c6:	55 1f       	adc	r21, r21
    31c8:	6a 95       	dec	r22
    31ca:	d1 f7       	brne	.-12     	; 0x31c0 <__unpack_f+0x54>
    31cc:	83 e0       	ldi	r24, 0x03	; 3
    31ce:	8c 93       	st	X, r24
    31d0:	0d c0       	rjmp	.+26     	; 0x31ec <__unpack_f+0x80>
    31d2:	22 0f       	add	r18, r18
    31d4:	33 1f       	adc	r19, r19
    31d6:	44 1f       	adc	r20, r20
    31d8:	55 1f       	adc	r21, r21
    31da:	12 96       	adiw	r26, 0x02	; 2
    31dc:	8d 91       	ld	r24, X+
    31de:	9c 91       	ld	r25, X
    31e0:	13 97       	sbiw	r26, 0x03	; 3
    31e2:	01 97       	sbiw	r24, 0x01	; 1
    31e4:	13 96       	adiw	r26, 0x03	; 3
    31e6:	9c 93       	st	X, r25
    31e8:	8e 93       	st	-X, r24
    31ea:	12 97       	sbiw	r26, 0x02	; 2
    31ec:	20 30       	cpi	r18, 0x00	; 0
    31ee:	80 e0       	ldi	r24, 0x00	; 0
    31f0:	38 07       	cpc	r19, r24
    31f2:	80 e0       	ldi	r24, 0x00	; 0
    31f4:	48 07       	cpc	r20, r24
    31f6:	80 e4       	ldi	r24, 0x40	; 64
    31f8:	58 07       	cpc	r21, r24
    31fa:	58 f3       	brcs	.-42     	; 0x31d2 <__unpack_f+0x66>
    31fc:	14 96       	adiw	r26, 0x04	; 4
    31fe:	2d 93       	st	X+, r18
    3200:	3d 93       	st	X+, r19
    3202:	4d 93       	st	X+, r20
    3204:	5c 93       	st	X, r21
    3206:	17 97       	sbiw	r26, 0x07	; 7
    3208:	08 95       	ret
    320a:	2f 3f       	cpi	r18, 0xFF	; 255
    320c:	31 05       	cpc	r19, r1
    320e:	79 f4       	brne	.+30     	; 0x322e <__unpack_f+0xc2>
    3210:	41 15       	cp	r20, r1
    3212:	51 05       	cpc	r21, r1
    3214:	61 05       	cpc	r22, r1
    3216:	71 05       	cpc	r23, r1
    3218:	19 f4       	brne	.+6      	; 0x3220 <__unpack_f+0xb4>
    321a:	84 e0       	ldi	r24, 0x04	; 4
    321c:	8c 93       	st	X, r24
    321e:	08 95       	ret
    3220:	64 ff       	sbrs	r22, 4
    3222:	03 c0       	rjmp	.+6      	; 0x322a <__unpack_f+0xbe>
    3224:	81 e0       	ldi	r24, 0x01	; 1
    3226:	8c 93       	st	X, r24
    3228:	12 c0       	rjmp	.+36     	; 0x324e <__unpack_f+0xe2>
    322a:	1c 92       	st	X, r1
    322c:	10 c0       	rjmp	.+32     	; 0x324e <__unpack_f+0xe2>
    322e:	2f 57       	subi	r18, 0x7F	; 127
    3230:	30 40       	sbci	r19, 0x00	; 0
    3232:	13 96       	adiw	r26, 0x03	; 3
    3234:	3c 93       	st	X, r19
    3236:	2e 93       	st	-X, r18
    3238:	12 97       	sbiw	r26, 0x02	; 2
    323a:	83 e0       	ldi	r24, 0x03	; 3
    323c:	8c 93       	st	X, r24
    323e:	87 e0       	ldi	r24, 0x07	; 7
    3240:	44 0f       	add	r20, r20
    3242:	55 1f       	adc	r21, r21
    3244:	66 1f       	adc	r22, r22
    3246:	77 1f       	adc	r23, r23
    3248:	8a 95       	dec	r24
    324a:	d1 f7       	brne	.-12     	; 0x3240 <__unpack_f+0xd4>
    324c:	70 64       	ori	r23, 0x40	; 64
    324e:	14 96       	adiw	r26, 0x04	; 4
    3250:	4d 93       	st	X+, r20
    3252:	5d 93       	st	X+, r21
    3254:	6d 93       	st	X+, r22
    3256:	7c 93       	st	X, r23
    3258:	17 97       	sbiw	r26, 0x07	; 7
    325a:	08 95       	ret

0000325c <__fpcmp_parts_f>:
    325c:	1f 93       	push	r17
    325e:	dc 01       	movw	r26, r24
    3260:	fb 01       	movw	r30, r22
    3262:	9c 91       	ld	r25, X
    3264:	92 30       	cpi	r25, 0x02	; 2
    3266:	08 f4       	brcc	.+2      	; 0x326a <__fpcmp_parts_f+0xe>
    3268:	47 c0       	rjmp	.+142    	; 0x32f8 <__fpcmp_parts_f+0x9c>
    326a:	80 81       	ld	r24, Z
    326c:	82 30       	cpi	r24, 0x02	; 2
    326e:	08 f4       	brcc	.+2      	; 0x3272 <__fpcmp_parts_f+0x16>
    3270:	43 c0       	rjmp	.+134    	; 0x32f8 <__fpcmp_parts_f+0x9c>
    3272:	94 30       	cpi	r25, 0x04	; 4
    3274:	51 f4       	brne	.+20     	; 0x328a <__fpcmp_parts_f+0x2e>
    3276:	11 96       	adiw	r26, 0x01	; 1
    3278:	1c 91       	ld	r17, X
    327a:	84 30       	cpi	r24, 0x04	; 4
    327c:	99 f5       	brne	.+102    	; 0x32e4 <__fpcmp_parts_f+0x88>
    327e:	81 81       	ldd	r24, Z+1	; 0x01
    3280:	68 2f       	mov	r22, r24
    3282:	70 e0       	ldi	r23, 0x00	; 0
    3284:	61 1b       	sub	r22, r17
    3286:	71 09       	sbc	r23, r1
    3288:	3f c0       	rjmp	.+126    	; 0x3308 <__fpcmp_parts_f+0xac>
    328a:	84 30       	cpi	r24, 0x04	; 4
    328c:	21 f0       	breq	.+8      	; 0x3296 <__fpcmp_parts_f+0x3a>
    328e:	92 30       	cpi	r25, 0x02	; 2
    3290:	31 f4       	brne	.+12     	; 0x329e <__fpcmp_parts_f+0x42>
    3292:	82 30       	cpi	r24, 0x02	; 2
    3294:	b9 f1       	breq	.+110    	; 0x3304 <__fpcmp_parts_f+0xa8>
    3296:	81 81       	ldd	r24, Z+1	; 0x01
    3298:	88 23       	and	r24, r24
    329a:	89 f1       	breq	.+98     	; 0x32fe <__fpcmp_parts_f+0xa2>
    329c:	2d c0       	rjmp	.+90     	; 0x32f8 <__fpcmp_parts_f+0x9c>
    329e:	11 96       	adiw	r26, 0x01	; 1
    32a0:	1c 91       	ld	r17, X
    32a2:	11 97       	sbiw	r26, 0x01	; 1
    32a4:	82 30       	cpi	r24, 0x02	; 2
    32a6:	f1 f0       	breq	.+60     	; 0x32e4 <__fpcmp_parts_f+0x88>
    32a8:	81 81       	ldd	r24, Z+1	; 0x01
    32aa:	18 17       	cp	r17, r24
    32ac:	d9 f4       	brne	.+54     	; 0x32e4 <__fpcmp_parts_f+0x88>
    32ae:	12 96       	adiw	r26, 0x02	; 2
    32b0:	2d 91       	ld	r18, X+
    32b2:	3c 91       	ld	r19, X
    32b4:	13 97       	sbiw	r26, 0x03	; 3
    32b6:	82 81       	ldd	r24, Z+2	; 0x02
    32b8:	93 81       	ldd	r25, Z+3	; 0x03
    32ba:	82 17       	cp	r24, r18
    32bc:	93 07       	cpc	r25, r19
    32be:	94 f0       	brlt	.+36     	; 0x32e4 <__fpcmp_parts_f+0x88>
    32c0:	28 17       	cp	r18, r24
    32c2:	39 07       	cpc	r19, r25
    32c4:	bc f0       	brlt	.+46     	; 0x32f4 <__fpcmp_parts_f+0x98>
    32c6:	14 96       	adiw	r26, 0x04	; 4
    32c8:	8d 91       	ld	r24, X+
    32ca:	9d 91       	ld	r25, X+
    32cc:	0d 90       	ld	r0, X+
    32ce:	bc 91       	ld	r27, X
    32d0:	a0 2d       	mov	r26, r0
    32d2:	24 81       	ldd	r18, Z+4	; 0x04
    32d4:	35 81       	ldd	r19, Z+5	; 0x05
    32d6:	46 81       	ldd	r20, Z+6	; 0x06
    32d8:	57 81       	ldd	r21, Z+7	; 0x07
    32da:	28 17       	cp	r18, r24
    32dc:	39 07       	cpc	r19, r25
    32de:	4a 07       	cpc	r20, r26
    32e0:	5b 07       	cpc	r21, r27
    32e2:	18 f4       	brcc	.+6      	; 0x32ea <__fpcmp_parts_f+0x8e>
    32e4:	11 23       	and	r17, r17
    32e6:	41 f0       	breq	.+16     	; 0x32f8 <__fpcmp_parts_f+0x9c>
    32e8:	0a c0       	rjmp	.+20     	; 0x32fe <__fpcmp_parts_f+0xa2>
    32ea:	82 17       	cp	r24, r18
    32ec:	93 07       	cpc	r25, r19
    32ee:	a4 07       	cpc	r26, r20
    32f0:	b5 07       	cpc	r27, r21
    32f2:	40 f4       	brcc	.+16     	; 0x3304 <__fpcmp_parts_f+0xa8>
    32f4:	11 23       	and	r17, r17
    32f6:	19 f0       	breq	.+6      	; 0x32fe <__fpcmp_parts_f+0xa2>
    32f8:	61 e0       	ldi	r22, 0x01	; 1
    32fa:	70 e0       	ldi	r23, 0x00	; 0
    32fc:	05 c0       	rjmp	.+10     	; 0x3308 <__fpcmp_parts_f+0xac>
    32fe:	6f ef       	ldi	r22, 0xFF	; 255
    3300:	7f ef       	ldi	r23, 0xFF	; 255
    3302:	02 c0       	rjmp	.+4      	; 0x3308 <__fpcmp_parts_f+0xac>
    3304:	60 e0       	ldi	r22, 0x00	; 0
    3306:	70 e0       	ldi	r23, 0x00	; 0
    3308:	cb 01       	movw	r24, r22
    330a:	1f 91       	pop	r17
    330c:	08 95       	ret

0000330e <__prologue_saves__>:
    330e:	2f 92       	push	r2
    3310:	3f 92       	push	r3
    3312:	4f 92       	push	r4
    3314:	5f 92       	push	r5
    3316:	6f 92       	push	r6
    3318:	7f 92       	push	r7
    331a:	8f 92       	push	r8
    331c:	9f 92       	push	r9
    331e:	af 92       	push	r10
    3320:	bf 92       	push	r11
    3322:	cf 92       	push	r12
    3324:	df 92       	push	r13
    3326:	ef 92       	push	r14
    3328:	ff 92       	push	r15
    332a:	0f 93       	push	r16
    332c:	1f 93       	push	r17
    332e:	cf 93       	push	r28
    3330:	df 93       	push	r29
    3332:	cd b7       	in	r28, 0x3d	; 61
    3334:	de b7       	in	r29, 0x3e	; 62
    3336:	ca 1b       	sub	r28, r26
    3338:	db 0b       	sbc	r29, r27
    333a:	0f b6       	in	r0, 0x3f	; 63
    333c:	f8 94       	cli
    333e:	de bf       	out	0x3e, r29	; 62
    3340:	0f be       	out	0x3f, r0	; 63
    3342:	cd bf       	out	0x3d, r28	; 61
    3344:	09 94       	ijmp

00003346 <__epilogue_restores__>:
    3346:	2a 88       	ldd	r2, Y+18	; 0x12
    3348:	39 88       	ldd	r3, Y+17	; 0x11
    334a:	48 88       	ldd	r4, Y+16	; 0x10
    334c:	5f 84       	ldd	r5, Y+15	; 0x0f
    334e:	6e 84       	ldd	r6, Y+14	; 0x0e
    3350:	7d 84       	ldd	r7, Y+13	; 0x0d
    3352:	8c 84       	ldd	r8, Y+12	; 0x0c
    3354:	9b 84       	ldd	r9, Y+11	; 0x0b
    3356:	aa 84       	ldd	r10, Y+10	; 0x0a
    3358:	b9 84       	ldd	r11, Y+9	; 0x09
    335a:	c8 84       	ldd	r12, Y+8	; 0x08
    335c:	df 80       	ldd	r13, Y+7	; 0x07
    335e:	ee 80       	ldd	r14, Y+6	; 0x06
    3360:	fd 80       	ldd	r15, Y+5	; 0x05
    3362:	0c 81       	ldd	r16, Y+4	; 0x04
    3364:	1b 81       	ldd	r17, Y+3	; 0x03
    3366:	aa 81       	ldd	r26, Y+2	; 0x02
    3368:	b9 81       	ldd	r27, Y+1	; 0x01
    336a:	ce 0f       	add	r28, r30
    336c:	d1 1d       	adc	r29, r1
    336e:	0f b6       	in	r0, 0x3f	; 63
    3370:	f8 94       	cli
    3372:	de bf       	out	0x3e, r29	; 62
    3374:	0f be       	out	0x3f, r0	; 63
    3376:	cd bf       	out	0x3d, r28	; 61
    3378:	ed 01       	movw	r28, r26
    337a:	08 95       	ret

0000337c <itoa>:
    337c:	fb 01       	movw	r30, r22
    337e:	9f 01       	movw	r18, r30
    3380:	e8 94       	clt
    3382:	42 30       	cpi	r20, 0x02	; 2
    3384:	c4 f0       	brlt	.+48     	; 0x33b6 <itoa+0x3a>
    3386:	45 32       	cpi	r20, 0x25	; 37
    3388:	b4 f4       	brge	.+44     	; 0x33b6 <itoa+0x3a>
    338a:	4a 30       	cpi	r20, 0x0A	; 10
    338c:	29 f4       	brne	.+10     	; 0x3398 <itoa+0x1c>
    338e:	97 fb       	bst	r25, 7
    3390:	1e f4       	brtc	.+6      	; 0x3398 <itoa+0x1c>
    3392:	90 95       	com	r25
    3394:	81 95       	neg	r24
    3396:	9f 4f       	sbci	r25, 0xFF	; 255
    3398:	64 2f       	mov	r22, r20
    339a:	77 27       	eor	r23, r23
    339c:	0e 94 ef 19 	call	0x33de	; 0x33de <__udivmodhi4>
    33a0:	80 5d       	subi	r24, 0xD0	; 208
    33a2:	8a 33       	cpi	r24, 0x3A	; 58
    33a4:	0c f0       	brlt	.+2      	; 0x33a8 <itoa+0x2c>
    33a6:	89 5d       	subi	r24, 0xD9	; 217
    33a8:	81 93       	st	Z+, r24
    33aa:	cb 01       	movw	r24, r22
    33ac:	00 97       	sbiw	r24, 0x00	; 0
    33ae:	a1 f7       	brne	.-24     	; 0x3398 <itoa+0x1c>
    33b0:	16 f4       	brtc	.+4      	; 0x33b6 <itoa+0x3a>
    33b2:	5d e2       	ldi	r21, 0x2D	; 45
    33b4:	51 93       	st	Z+, r21
    33b6:	10 82       	st	Z, r1
    33b8:	c9 01       	movw	r24, r18
    33ba:	0c 94 df 19 	jmp	0x33be	; 0x33be <strrev>

000033be <strrev>:
    33be:	dc 01       	movw	r26, r24
    33c0:	fc 01       	movw	r30, r24
    33c2:	67 2f       	mov	r22, r23
    33c4:	71 91       	ld	r23, Z+
    33c6:	77 23       	and	r23, r23
    33c8:	e1 f7       	brne	.-8      	; 0x33c2 <strrev+0x4>
    33ca:	32 97       	sbiw	r30, 0x02	; 2
    33cc:	04 c0       	rjmp	.+8      	; 0x33d6 <strrev+0x18>
    33ce:	7c 91       	ld	r23, X
    33d0:	6d 93       	st	X+, r22
    33d2:	70 83       	st	Z, r23
    33d4:	62 91       	ld	r22, -Z
    33d6:	ae 17       	cp	r26, r30
    33d8:	bf 07       	cpc	r27, r31
    33da:	c8 f3       	brcs	.-14     	; 0x33ce <strrev+0x10>
    33dc:	08 95       	ret

000033de <__udivmodhi4>:
    33de:	aa 1b       	sub	r26, r26
    33e0:	bb 1b       	sub	r27, r27
    33e2:	51 e1       	ldi	r21, 0x11	; 17
    33e4:	07 c0       	rjmp	.+14     	; 0x33f4 <__udivmodhi4_ep>

000033e6 <__udivmodhi4_loop>:
    33e6:	aa 1f       	adc	r26, r26
    33e8:	bb 1f       	adc	r27, r27
    33ea:	a6 17       	cp	r26, r22
    33ec:	b7 07       	cpc	r27, r23
    33ee:	10 f0       	brcs	.+4      	; 0x33f4 <__udivmodhi4_ep>
    33f0:	a6 1b       	sub	r26, r22
    33f2:	b7 0b       	sbc	r27, r23

000033f4 <__udivmodhi4_ep>:
    33f4:	88 1f       	adc	r24, r24
    33f6:	99 1f       	adc	r25, r25
    33f8:	5a 95       	dec	r21
    33fa:	a9 f7       	brne	.-22     	; 0x33e6 <__udivmodhi4_loop>
    33fc:	80 95       	com	r24
    33fe:	90 95       	com	r25
    3400:	bc 01       	movw	r22, r24
    3402:	cd 01       	movw	r24, r26
    3404:	08 95       	ret

00003406 <_exit>:
    3406:	f8 94       	cli

00003408 <__stop_program>:
    3408:	ff cf       	rjmp	.-2      	; 0x3408 <__stop_program>
